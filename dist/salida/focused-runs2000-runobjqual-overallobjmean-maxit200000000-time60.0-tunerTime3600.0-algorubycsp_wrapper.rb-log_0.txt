Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-scenariofile" "escenario.txt" "-numRun" "0" "-validN" "100"


seed: 1234
algo: ruby csp_wrapper.rb
tunerTimeout: 3600.0
maxEvals: 100000000
run_obj: qual
overall_obj: mean
instance_file: CSP-training.txt
test_instance_file: CSP-test.txt
N: 2000
cutoff_time: 60.0
cutoff_length: 150000
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=60.0.
Current CPU time = 0, this run goes until 3600.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state pCross=1.0, pMutac=1.0, popSize=30
 Same incumbent, new precision:
New Incumbent: 4.0, 1.0106557377049181 [1, 60.0]. With state pCross=1.0, pMutac=1.0, popSize=30
New inc: 1.0082590563414833
New Incumbent: 10.0, 1.0082590563414833 [1, 60.0]. With state pCross=0.7, pMutac=0.4, popSize=800
          -> Take improving step to random pCross=0.7 pMutac=0.4 popSize=800 (1.0082590563414833 [based on 1 runs with cutoff 60.0])

3/100000000, 16.0/3600.0
          -> Take improving step to random pCross=0.6 pMutac=0.6 popSize=2000 (1.0082590563414833 [based on 1 runs with cutoff 60.0])

New inc: 1.007106101445724
New Incumbent: 21.0, 1.007106101445724 [1, 60.0]. With state pCross=0.9, pMutac=0.9, popSize=1600
          -> Take improving step to random pCross=0.9 pMutac=0.9 popSize=1600 (1.007106101445724 [based on 1 runs with cutoff 60.0])

        -> Worse random: pCross=0.9 pMutac=0.4 popSize=2800 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
6/100000000, 30.0/3600.0
          -> Take improving step to random pCross=1.0 pMutac=1.0 popSize=3600 (1.007106101445724 [based on 1 runs with cutoff 60.0])

        -> Worse random: pCross=1.0 pMutac=0.1 popSize=1200 (1.0106557377049181 [based on 1 runs with cutoff 60.0])
8/100000000, 41.0/3600.0
        -> Worse random: pCross=0.8 pMutac=1.0 popSize=3200 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
        -> Worse random: pCross=0.6 pMutac=0.5 popSize=100 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
10/100000000, 52.0/3600.0
        -> Worse random: pCross=0.8 pMutac=0.7 popSize=1600 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
        -> Worse random: pCross=0.7 pMutac=1.0 popSize=2400 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
   BLS in iteration 1, start with pCross=1.0 pMutac=1.0 popSize=3600 (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=0.2 popSize=3600 (1.007106101445724 [based on 1 runs with cutoff 60.0]) with flip 1

          
============= Performing 1 bonus runs of state: pCross=1.0 pMutac=0.2 popSize=3600 (1.007106101445724 [based on 1 runs with cutoff 60.0]) ============ 

State wants more detail (1+1) than incumbent (1), doing incumbent first:
pCross=1.0 pMutac=0.2 popSize=3600 (1.007106101445724 [based on 1 runs with cutoff 60.0])
pCross=0.9 pMutac=0.9 popSize=1600 (1.007106101445724 [based on 1 runs with cutoff 60.0])
13/100000000, 70.0/3600.0
 Same incumbent, new precision:
New Incumbent: 70.0, 1.0176966971317019 [2, 60.0]. With state pCross=0.9, pMutac=0.9, popSize=1600
New inc: 1.01633682854962
New Incumbent: 78.0, 1.01633682854962 [2, 60.0]. With state pCross=1.0, pMutac=0.2, popSize=3600
          -> After 1 bonus runs: pCross=1.0 pMutac=0.2 popSize=3600 (1.01633682854962 [based on 2 runs with cutoff 60.0])

    Changing ["popSize: 3600->200"], evaluating ...
15/100000000, 84.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
17/100000000, 96.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->2400"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->50"], evaluating ...
19/100000000, 109.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->100"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->400"], evaluating ...
22/100000000, 123.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->4000"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->2000"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.8"], evaluating ...
25/100000000, 137.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.3"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->2800"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->1200"], evaluating ...
28/100000000, 153.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->3200"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->30"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.5"], evaluating ...
31/100000000, 165.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.9"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.1"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->1600"], evaluating ...
34/100000000, 180.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.7"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->800"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.6"], evaluating ...
37/100000000, 195.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.2->0.4"], evaluating ...
39/100000000, 207.0/3600.0
New inc: 1.0158437533469535
New Incumbent: 207.0, 1.0158437533469535 [2, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> Take improving step to neighbour pCross=1.0 pMutac=0.4 popSize=3600 (1.0158437533469535 [based on 2 runs with cutoff 60.0]) with flip 2

          
============= Performing 24 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=3600 (1.0158437533469535 [based on 2 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 211.0, 1.006654071187193 [3, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 217.0, 1.0105907719355085 [4, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
42/100000000, 222.0/3600.0
 Same incumbent, new precision:
New Incumbent: 222.0, 1.00975794341147 [5, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
43/100000000, 241.0/3600.0
 Same incumbent, new precision:
New Incumbent: 241.0, 1.0101451901617062 [6, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 245.0, 1.0095701560015187 [7, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
45/100000000, 253.0/3600.0
 Same incumbent, new precision:
New Incumbent: 253.0, 1.0117112651421054 [8, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 259.0, 1.0121502975911871 [9, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 263.0, 1.0115779307636001 [10, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
48/100000000, 268.0/3600.0
 Same incumbent, new precision:
New Incumbent: 268.0, 1.0094594558639705 [11, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
49/100000000, 286.0/3600.0
 Same incumbent, new precision:
New Incumbent: 286.0, 1.0102420623994102 [12, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 289.0, 1.0085522658200456 [13, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 294.0, 1.0085313222858627 [14, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
52/100000000, 302.0/3600.0
 Same incumbent, new precision:
New Incumbent: 302.0, 1.009742502741886 [15, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 308.0, 1.0105336509567966 [16, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
54/100000000, 324.0/3600.0
 Same incumbent, new precision:
New Incumbent: 324.0, 1.0109601197580187 [17, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 327.0, 1.0107082591778687 [18, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 330.0, 1.0104667692758962 [19, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
57/100000000, 347.0/3600.0
 Same incumbent, new precision:
New Incumbent: 347.0, 1.0106593362218843 [20, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 351.0, 1.0095934014907313 [21, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
59/100000000, 359.0/3600.0
 Same incumbent, new precision:
New Incumbent: 359.0, 1.0097010524451544 [22, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 365.0, 1.01056768952981 [23, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 368.0, 1.0103951453542062 [24, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
62/100000000, 372.0/3600.0
 Same incumbent, new precision:
New Incumbent: 372.0, 1.0103097017936973 [25, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 377.0, 1.0107594066691636 [26, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> After 24 bonus runs: pCross=1.0 pMutac=0.4 popSize=3600 (1.0107594066691636 [based on 26 runs with cutoff 60.0])

    Changing ["popSize: 3600->4000"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->1600"], evaluating ...
65/100000000, 385.0/3600.0
        -> worse: (1.0061199510403918 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->30"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->400"], evaluating ...
67/100000000, 396.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->100"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->800"], evaluating ...
69/100000000, 408.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->2800"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
72/100000000, 423.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->200"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->2000"], evaluating ...
74/100000000, 434.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->2400"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->1200"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.9"], evaluating ...
77/100000000, 447.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->50"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.9"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
80/100000000, 462.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3600->3200"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
          
============= Performing 18 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=3600 (1.0107594066691636 [based on 26 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 470.0, 1.0105989334338359 [27, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
83/100000000, 474.0/3600.0
 Same incumbent, new precision:
New Incumbent: 474.0, 1.0098016396279015 [28, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 482.0, 1.010345291904647 [29, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
85/100000000, 500.0/3600.0
 Same incumbent, new precision:
New Incumbent: 500.0, 1.0106364210493177 [30, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
86/100000000, 519.0/3600.0
 Same incumbent, new precision:
New Incumbent: 519.0, 1.0107551851508128 [31, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 527.0, 1.0113030635154023 [32, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
88/100000000, 531.0/3600.0
 Same incumbent, new precision:
New Incumbent: 531.0, 1.0106052345260772 [33, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 535.0, 1.0102599583857519 [34, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 539.0, 1.0101504346980252 [35, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
91/100000000, 545.0/3600.0
 Same incumbent, new precision:
New Incumbent: 545.0, 1.01030354921152 [36, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
92/100000000, 561.0/3600.0
 Same incumbent, new precision:
New Incumbent: 561.0, 1.0105526852793936 [37, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 567.0, 1.0108644797241584 [38, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 570.0, 1.0107976739963975 [39, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
95/100000000, 574.0/3600.0
 Same incumbent, new precision:
New Incumbent: 574.0, 1.0106883978793704 [40, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 578.0, 1.0101417224888412 [41, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
97/100000000, 586.0/3600.0
 Same incumbent, new precision:
New Incumbent: 586.0, 1.0101745800279267 [42, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 589.0, 1.009665280652107 [43, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
99/100000000, 597.0/3600.0
 Same incumbent, new precision:
New Incumbent: 597.0, 1.0100112939973183 [44, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> After 18 bonus runs for LM: pCross=1.0 pMutac=0.4 popSize=3600 (1.0100112939973183 [based on 44 runs with cutoff 60.0])

   LM for iteration 1: pCross=1.0 pMutac=0.4 popSize=3600 (1.0100112939973183 [based on 44 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): pCross=1.0, pMutac=0.4, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0100112939973183, based on 44 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=0.4 popSize=3600 (1.0100112939973183 [based on 44 runs with cutoff 60.0])
pCross=1.0 pMutac=0.4 popSize=3600 (1.0100112939973183 [based on 44 runs with cutoff 60.0])
LM better, change incumbent
New Incumbent: 597.0, 1.0100112939973183 [44, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
99/100000000, 597.0/3600.0
iteration 2, flip 4, evaluation count 99
    perturb to ---> pCross=1.0 pMutac=0.4 popSize=800 (1.007106101445724 [based on 1 runs with cutoff 60.0])
    perturb to ---> pCross=1.0 pMutac=0.7 popSize=800 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=1.0 pMutac=0.7 popSize=4000 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 2, start with pCross=1.0 pMutac=0.7 popSize=4000 (1.0061199510403918 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->2800"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=0.7 popSize=2800 (1.0061199510403918 [based on 1 runs with cutoff 60.0]) with flip 4

          
============= Performing 1 bonus runs of state: pCross=1.0 pMutac=0.7 popSize=2800 (1.0061199510403918 [based on 1 runs with cutoff 60.0]) ============ 

102/100000000, 612.0/3600.0
          -> After 1 bonus runs: pCross=1.0 pMutac=0.7 popSize=2800 (1.0172036219290357 [based on 2 runs with cutoff 60.0])

    Changing ["pMutac: 0.7->0.2"], evaluating ...
        -> worse: (1.0176966971317019 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 2800->100"], evaluating ...
104/100000000, 623.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 2800->1600"], evaluating ...
        -> worse: (1.0061199510403918 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 2800->3200"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.7->0.4"], evaluating ...
107/100000000, 638.0/3600.0
          -> Take improving step to neighbour pCross=1.0 pMutac=0.4 popSize=2800 (1.0169133059974995 [based on 2 runs with cutoff 60.0]) with flip 5

          
============= Performing 5 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=2800 (1.0169133059974995 [based on 2 runs with cutoff 60.0]) ============ 

110/100000000, 651.0/3600.0
111/100000000, 667.0/3600.0
          -> After 5 bonus runs: pCross=1.0 pMutac=0.4 popSize=2800 (1.0111810064206714 [based on 7 runs with cutoff 60.0])

    Changing ["pCross: 1.0->0.9"], evaluating ...
113/100000000, 680.0/3600.0
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
115/100000000, 692.0/3600.0
        -> worse: (1.0176966971317019 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 2800->2000"], evaluating ...
117/100000000, 709.0/3600.0
        -> worse: (1.0169133059974995 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 2800->1600"], evaluating ...
119/100000000, 721.0/3600.0
        -> worse: (1.0113857955451622 [based on 4 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.3"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.1"], evaluating ...
122/100000000, 736.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 2800->4000"], evaluating ...
124/100000000, 748.0/3600.0
127/100000000, 777.0/3600.0
          -> Take improving step to neighbour pCross=1.0 pMutac=0.4 popSize=4000 (1.010665246521373 [based on 7 runs with cutoff 60.0]) with flip 6

          
============= Performing 8 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=4000 (1.010665246521373 [based on 7 runs with cutoff 60.0]) ============ 

129/100000000, 789.0/3600.0
132/100000000, 802.0/3600.0
133/100000000, 822.0/3600.0
136/100000000, 838.0/3600.0
          -> After 8 bonus runs: pCross=1.0 pMutac=0.4 popSize=4000 (1.0108534513605434 [based on 15 runs with cutoff 60.0])

    Changing ["pCross: 1.0->0.9"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->2400"], evaluating ...
138/100000000, 852.0/3600.0
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.3"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.2"], evaluating ...
140/100000000, 865.0/3600.0
        -> worse: (1.0171394509932332 [based on 2 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->800"], evaluating ...
142/100000000, 877.0/3600.0
        -> worse: (1.0176966971317019 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.9"], evaluating ...
144/100000000, 889.0/3600.0
        -> worse: (1.016902565285969 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 4000->3200"], evaluating ...
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 4000->400"], evaluating ...
146/100000000, 904.0/3600.0
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.6"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->100"], evaluating ...
148/100000000, 915.0/3600.0
        -> worse: (1.0194715152612988 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.8"], evaluating ...
150/100000000, 927.0/3600.0
        -> worse: (1.0164094900833027 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 4000->3600"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=0.4 popSize=3600 (1.0100112939973183 [based on 44 runs with cutoff 60.0]) with flip 7

          
============= Performing 13 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=3600 (1.0100112939973183 [based on 44 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 936.0, 1.0099316347821625 [45, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
153/100000000, 942.0/3600.0
 Same incumbent, new precision:
New Incumbent: 942.0, 1.0100562200517642 [46, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 947.0, 1.0100179825260136 [47, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
155/100000000, 965.0/3600.0
 Same incumbent, new precision:
New Incumbent: 965.0, 1.0102067571868212 [48, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 973.0, 1.0105757477098998 [49, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
157/100000000, 977.0/3600.0
 Same incumbent, new precision:
New Incumbent: 977.0, 1.0104927653420082 [50, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
158/100000000, 995.0/3600.0
 Same incumbent, new precision:
New Incumbent: 995.0, 1.010661126144023 [51, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 998.0, 1.0106149324939744 [52, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1001.0, 1.010193418802912 [53, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
161/100000000, 1007.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1007.0, 1.0103679013145215 [54, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1013.0, 1.0106770767273414 [55, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
163/100000000, 1020.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1020.0, 1.010930876568664 [56, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1025.0, 1.0108840025295907 [57, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> After 13 bonus runs: pCross=1.0 pMutac=0.4 popSize=3600 (1.0108840025295907 [based on 57 runs with cutoff 60.0])

    Changing ["pCross: 1.0->0.9"], evaluating ...
165/100000000, 1033.0/3600.0
        -> worse: (1.0171394509932332 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.9"], evaluating ...
167/100000000, 1045.0/3600.0
170/100000000, 1072.0/3600.0
        -> worse: (1.01063215745128 [based on 6 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.8"], evaluating ...
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
172/100000000, 1088.0/3600.0
        -> worse: (1.0165744620914465 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.1"], evaluating ...
175/100000000, 1104.0/3600.0
177/100000000, 1125.0/3600.0
179/100000000, 1136.0/3600.0
        -> worse: (1.0124957710282765 [based on 9 runs with cutoff 60.0])
    Changing ["popSize: 3600->50"], evaluating ...
181/100000000, 1149.0/3600.0
        -> worse: (1.0194715152612988 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 3600->30"], evaluating ...
        -> worse: (1.0160852782926346 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->1.0"], evaluating ...
183/100000000, 1167.0/3600.0
        -> worse: (1.0176966971317019 [based on 2 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
        -> worse: (1.016902565285969 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.6"], evaluating ...
185/100000000, 1183.0/3600.0
188/100000000, 1197.0/3600.0
189/100000000, 1215.0/3600.0
191/100000000, 1227.0/3600.0
194/100000000, 1241.0/3600.0
195/100000000, 1260.0/3600.0
198/100000000, 1276.0/3600.0
200/100000000, 1301.0/3600.0
203/100000000, 1328.0/3600.0
205/100000000, 1340.0/3600.0
208/100000000, 1354.0/3600.0
211/100000000, 1368.0/3600.0
213/100000000, 1395.0/3600.0
214/100000000, 1413.0/3600.0
216/100000000, 1425.0/3600.0
219/100000000, 1441.0/3600.0
220/100000000, 1459.0/3600.0
223/100000000, 1473.0/3600.0
225/100000000, 1486.0/3600.0
        -> worse: (1.0102776022027453 [based on 42 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.5"], evaluating ...
227/100000000, 1498.0/3600.0
230/100000000, 1526.0/3600.0
        -> worse: (1.0106752173560982 [based on 6 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.2"], evaluating ...
        -> worse: (1.0069827879889706 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.3"], evaluating ...
232/100000000, 1538.0/3600.0
        -> worse: (1.011261842777612 [based on 4 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.7"], evaluating ...
235/100000000, 1555.0/3600.0
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 3600->1200"], evaluating ...
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
237/100000000, 1571.0/3600.0
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 3600->200"], evaluating ...
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
          
============= Performing 17 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=3600 (1.0108840025295907 [based on 57 runs with cutoff 60.0]) ============ 

239/100000000, 1596.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1596.0, 1.0110252984557144 [58, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1600.0, 1.0109473549109618 [59, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1604.0, 1.0105694774435736 [60, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
242/100000000, 1610.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1610.0, 1.0106529705540699 [61, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1618.0, 1.0109008233781167 [62, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
244/100000000, 1621.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1621.0, 1.0105416786716017 [63, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1625.0, 1.0104773810254097 [64, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
246/100000000, 1643.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1643.0, 1.0105505235470371 [65, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1647.0, 1.010515804346953 [66, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
248/100000000, 1666.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1666.0, 1.0106436157185623 [67, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1674.0, 1.0108697367468922 [68, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
250/100000000, 1678.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1678.0, 1.0108053438855649 [69, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1682.0, 1.010768968349221 [70, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1686.0, 1.0104521477649737 [71, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
253/100000000, 1692.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1692.0, 1.0106181022985221 [72, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
254/100000000, 1710.0/3600.0
 Same incumbent, new precision:
New Incumbent: 1710.0, 1.0107340072840874 [73, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 1716.0, 1.0108006093097597 [74, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> After 17 bonus runs for LM: pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])

   LM for iteration 2: pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 2): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 2): pCross=1.0, pMutac=0.4, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0108006093097597, based on 74 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])
pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])
LM better, change incumbent
New Incumbent: 1716.0, 1.0108006093097597 [74, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
same state as last ILS: pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])
255/100000000, 1716.0/3600.0
iteration 3, flip 9, evaluation count 255
    perturb to ---> pCross=1.0 pMutac=0.4 popSize=30 (1.0160852782926346 [based on 2 runs with cutoff 60.0])
    perturb to ---> pCross=1.0 pMutac=0.4 popSize=2000 (1.0169133059974995 [based on 2 runs with cutoff 60.0])
    perturb to ---> pCross=0.6 pMutac=0.4 popSize=2000 (100000000 [based on 0 runs with cutoff 0])
256/100000000, 1723.0/3600.0
   BLS in iteration 3, start with pCross=0.6 pMutac=0.4 popSize=2000 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 2000->800"], evaluating ...
          -> Take improving step to neighbour pCross=0.6 pMutac=0.4 popSize=800 (1.0082590563414833 [based on 1 runs with cutoff 60.0]) with flip 9

          
============= Performing 1 bonus runs of state: pCross=0.6 pMutac=0.4 popSize=800 (1.0082590563414833 [based on 1 runs with cutoff 60.0]) ============ 

258/100000000, 1738.0/3600.0
          -> After 1 bonus runs: pCross=0.6 pMutac=0.4 popSize=800 (1.0182731745795814 [based on 2 runs with cutoff 60.0])

    Changing ["pMutac: 0.4->0.1"], evaluating ...
260/100000000, 1751.0/3600.0
          -> Take improving step to neighbour pCross=0.6 pMutac=0.1 popSize=800 (1.0176966971317019 [based on 2 runs with cutoff 60.0]) with flip 10

          
============= Performing 1 bonus runs of state: pCross=0.6 pMutac=0.1 popSize=800 (1.0176966971317019 [based on 2 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: pCross=0.6 pMutac=0.1 popSize=800 (1.0078893670436917 [based on 3 runs with cutoff 60.0])

    Changing ["pMutac: 0.1->0.9"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->2800"], evaluating ...
263/100000000, 1765.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->1200"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->400"], evaluating ...
265/100000000, 1777.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.5"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->100"], evaluating ...
267/100000000, 1788.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->30"], evaluating ...
        -> worse: (1.035264483627204 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->2400"], evaluating ...
269/100000000, 1799.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->3600"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.6->1.0"], evaluating ...
271/100000000, 1811.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->2000"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.6->0.8"], evaluating ...
273/100000000, 1823.0/3600.0
          -> Take improving step to neighbour pCross=0.8 pMutac=0.1 popSize=800 (1.0075606502419143 [based on 3 runs with cutoff 60.0]) with flip 11

          
============= Performing 12 bonus runs of state: pCross=0.8 pMutac=0.1 popSize=800 (1.0075606502419143 [based on 3 runs with cutoff 60.0]) ============ 

276/100000000, 1836.0/3600.0
278/100000000, 1854.0/3600.0
280/100000000, 1869.0/3600.0
283/100000000, 1880.0/3600.0
284/100000000, 1898.0/3600.0
287/100000000, 1914.0/3600.0
          -> After 12 bonus runs: pCross=0.8 pMutac=0.1 popSize=800 (1.0120718139200486 [based on 15 runs with cutoff 60.0])

    Changing ["popSize: 800->2000"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->1200"], evaluating ...
289/100000000, 1926.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->2800"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.4"], evaluating ...
291/100000000, 1938.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->1.0"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.8"], evaluating ...
293/100000000, 1950.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.8->0.7"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->200"], evaluating ...
295/100000000, 1963.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.3"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.9"], evaluating ...
297/100000000, 1975.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->400"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->100"], evaluating ...
299/100000000, 1987.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->50"], evaluating ...
        -> worse: (1.0313676286072773 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->2400"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.8->0.9"], evaluating ...
302/100000000, 2000.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->3600"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->3200"], evaluating ...
304/100000000, 2012.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.7"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->1600"], evaluating ...
306/100000000, 2024.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->4000"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.2"], evaluating ...
308/100000000, 2036.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.6"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 800->30"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.1->0.5"], evaluating ...
311/100000000, 2053.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
          
============= Performing 24 bonus runs of state: pCross=0.8 pMutac=0.1 popSize=800 (1.0120718139200486 [based on 15 runs with cutoff 60.0]) ============ 

313/100000000, 2072.0/3600.0
316/100000000, 2095.0/3600.0
319/100000000, 2109.0/3600.0
322/100000000, 2122.0/3600.0
325/100000000, 2134.0/3600.0
326/100000000, 2149.0/3600.0
327/100000000, 2163.0/3600.0
330/100000000, 2177.0/3600.0
333/100000000, 2201.0/3600.0
335/100000000, 2212.0/3600.0
          -> After 24 bonus runs for LM: pCross=0.8 pMutac=0.1 popSize=800 (1.0130899052888889 [based on 39 runs with cutoff 60.0])

   LM for iteration 3: pCross=0.8 pMutac=0.1 popSize=800 (1.0130899052888889 [based on 39 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 3): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 3): pCross=1.0, pMutac=0.4, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0108006093097597, based on 74 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
pCross=0.8 pMutac=0.1 popSize=800 (1.0130899052888889 [based on 39 runs with cutoff 60.0])
pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse pCross=0.8 pMutac=0.1 popSize=800 (1.0130899052888889 [based on 39 runs with cutoff 60.0]), going back to pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0])
335/100000000, 2212.0/3600.0
iteration 4, flip 13, evaluation count 335
    perturb to ---> pCross=1.0 pMutac=0.4 popSize=400 (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    perturb to ---> pCross=1.0 pMutac=0.7 popSize=400 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=1.0 pMutac=0.7 popSize=1200 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 4, start with pCross=1.0 pMutac=0.7 popSize=1200 (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.7->0.9"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=0.9 popSize=1200 (1.007106101445724 [based on 1 runs with cutoff 60.0]) with flip 13

          
============= Performing 1 bonus runs of state: pCross=1.0 pMutac=0.9 popSize=1200 (1.007106101445724 [based on 1 runs with cutoff 60.0]) ============ 

338/100000000, 2229.0/3600.0
          -> After 1 bonus runs: pCross=1.0 pMutac=0.9 popSize=1200 (1.0176966971317019 [based on 2 runs with cutoff 60.0])

    Changing ["pCross: 1.0->0.7"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 1200->3600"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=0.9 popSize=3600 (1.01063215745128 [based on 6 runs with cutoff 60.0]) with flip 14

          
============= Performing 2 bonus runs of state: pCross=1.0 pMutac=0.9 popSize=3600 (1.01063215745128 [based on 6 runs with cutoff 60.0]) ============ 

341/100000000, 2242.0/3600.0
          -> After 2 bonus runs: pCross=1.0 pMutac=0.9 popSize=3600 (1.0125424117333555 [based on 8 runs with cutoff 60.0])

    Changing ["popSize: 3600->800"], evaluating ...
343/100000000, 2253.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.9->0.7"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.9->0.4"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0]) with flip 15

          
============= Performing 3 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=3600 (1.0108006093097597 [based on 74 runs with cutoff 60.0]) ============ 

346/100000000, 2267.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2267.0, 1.0107422895765004 [75, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2275.0, 1.0109433100510856 [76, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
348/100000000, 2279.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2279.0, 1.010893476173094 [77, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> After 3 bonus runs: pCross=1.0 pMutac=0.4 popSize=3600 (1.010893476173094 [based on 77 runs with cutoff 60.0])

    Changing ["popSize: 3600->2400"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->400"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.5"], evaluating ...
        -> worse: (1.0101653436546163 [based on 7 runs with cutoff 60.0])
    Changing ["popSize: 3600->200"], evaluating ...
352/100000000, 2291.0/3600.0
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->2800"], evaluating ...
        -> worse: (1.0126973898549472 [based on 8 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.1"], evaluating ...
354/100000000, 2302.0/3600.0
        -> worse: (1.0118888568569806 [based on 10 runs with cutoff 60.0])
    Changing ["popSize: 3600->50"], evaluating ...
        -> worse: (1.0090725791300896 [based on 3 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->30"], evaluating ...
        -> worse: (1.006815087817647 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->800"], evaluating ...
        -> worse: (1.0078893670436917 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.6"], evaluating ...
359/100000000, 2315.0/3600.0
        -> worse: (1.0097659069623948 [based on 43 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
        -> worse: (1.0073599458132032 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->100"], evaluating ...
        -> worse: (1.0090725791300896 [based on 3 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
        -> worse: (1.0071412103501882 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->2000"], evaluating ...
363/100000000, 2328.0/3600.0
        -> worse: (1.0073671062875569 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.8"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->1.0"], evaluating ...
        -> worse: (1.0078893670436917 [based on 3 runs with cutoff 60.0])
    Changing ["popSize: 3600->4000"], evaluating ...
366/100000000, 2354.0/3600.0
        -> worse: (1.0119477211389383 [based on 17 runs with cutoff 60.0])
    Changing ["popSize: 3600->1600"], evaluating ...
        -> worse: (1.010393962299193 [based on 5 runs with cutoff 60.0])
    Changing ["pCross: 1.0->0.9"], evaluating ...
        -> worse: (1.007517869618046 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.3"], evaluating ...
369/100000000, 2366.0/3600.0
        -> worse: (1.010294800085153 [based on 5 runs with cutoff 60.0])
    Changing ["popSize: 3600->1200"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.2"], evaluating ...
        -> worse: (1.010837309536842 [based on 4 runs with cutoff 60.0])
    Changing ["popSize: 3600->3200"], evaluating ...
372/100000000, 2379.0/3600.0
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
          
============= Performing 24 bonus runs of state: pCross=1.0 pMutac=0.4 popSize=3600 (1.010893476173094 [based on 77 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 2383.0, 1.0106034919512297 [78, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2387.0, 1.0105738155511064 [79, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
375/100000000, 2390.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2390.0, 1.0102950766925634 [80, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2398.0, 1.0104557803617278 [81, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
377/100000000, 2415.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2415.0, 1.010560943604204 [82, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2421.0, 1.010703593370183 [83, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2425.0, 1.0106526771314346 [84, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
380/100000000, 2429.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2429.0, 1.010602958921833 [85, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2434.0, 1.010343328083994 [86, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
382/100000000, 2441.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2441.0, 1.0104819205678615 [87, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
383/100000000, 2458.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2458.0, 1.0105846440128046 [88, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2462.0, 1.0105585138142503 [89, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
385/100000000, 2470.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2470.0, 1.0107378528732722 [90, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2476.0, 1.0108660179425821 [91, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2480.0, 1.0108177637183726 [92, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
388/100000000, 2483.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2483.0, 1.0107902507358255 [93, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2487.0, 1.0105507236733982 [94, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
390/100000000, 2495.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2495.0, 1.0107207058360594 [95, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
391/100000000, 2511.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2511.0, 1.0108077731319838 [96, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2517.0, 1.010857822452106 [97, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
393/100000000, 2524.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2524.0, 1.0109665673136186 [98, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2527.0, 1.0109392187179405 [99, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
395/100000000, 2545.0/3600.0
 Same incumbent, new precision:
New Incumbent: 2545.0, 1.01095064076989 [100, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
 Same incumbent, new precision:
New Incumbent: 2549.0, 1.0109058485772704 [101, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
          -> After 24 bonus runs for LM: pCross=1.0 pMutac=0.4 popSize=3600 (1.0109058485772704 [based on 101 runs with cutoff 60.0])

   LM for iteration 4: pCross=1.0 pMutac=0.4 popSize=3600 (1.0109058485772704 [based on 101 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 4): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 4): pCross=1.0, pMutac=0.4, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0109058485772704, based on 101 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=0.4 popSize=3600 (1.0109058485772704 [based on 101 runs with cutoff 60.0])
pCross=1.0 pMutac=0.4 popSize=3600 (1.0109058485772704 [based on 101 runs with cutoff 60.0])
LM better, change incumbent
New Incumbent: 2549.0, 1.0109058485772704 [101, 60.0]. With state pCross=1.0, pMutac=0.4, popSize=3600
same state as last ILS: pCross=1.0 pMutac=0.4 popSize=3600 (1.0109058485772704 [based on 101 runs with cutoff 60.0])
396/100000000, 2549.0/3600.0
iteration 5, flip 17, evaluation count 396
    perturb to ---> pCross=0.6 pMutac=0.4 popSize=3600 (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    perturb to ---> pCross=0.6 pMutac=0.4 popSize=4000 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.6 pMutac=0.4 popSize=1200 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 5, start with pCross=0.6 pMutac=0.4 popSize=1200 (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 1200->4000"], evaluating ...
398/100000000, 2561.0/3600.0
          -> Take improving step to neighbour pCross=0.6 pMutac=0.4 popSize=4000 (1.0061199510403918 [based on 1 runs with cutoff 60.0]) with flip 17

          
============= Performing 1 bonus runs of state: pCross=0.6 pMutac=0.4 popSize=4000 (1.0061199510403918 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: pCross=0.6 pMutac=0.4 popSize=4000 (1.0138173849603715 [based on 2 runs with cutoff 60.0])

    Changing ["popSize: 4000->200"], evaluating ...
400/100000000, 2575.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.5"], evaluating ...
402/100000000, 2587.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->1600"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->2800"], evaluating ...
404/100000000, 2600.0/3600.0
        -> worse: (1.0148869376109173 [based on 2 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.2"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.7"], evaluating ...
406/100000000, 2611.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->3600"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->1.0"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.3"], evaluating ...
409/100000000, 2626.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.6->0.7"], evaluating ...
        -> worse: (1.0174790427338485 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 4000->50"], evaluating ...
411/100000000, 2638.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.8"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.1"], evaluating ...
413/100000000, 2650.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.9"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->2000"], evaluating ...
415/100000000, 2661.0/3600.0
        -> worse: (1.0165744620914465 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 4000->3200"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->800"], evaluating ...
        -> worse: (1.0082736853422782 [based on 3 runs with cutoff 60.0])
    Changing ["pCross: 0.6->1.0"], evaluating ...
418/100000000, 2675.0/3600.0
420/100000000, 2695.0/3600.0
422/100000000, 2709.0/3600.0
425/100000000, 2722.0/3600.0
426/100000000, 2739.0/3600.0
429/100000000, 2756.0/3600.0
431/100000000, 2778.0/3600.0
        -> worse: (1.0119477211389383 [based on 17 runs with cutoff 60.0])
    Changing ["pCross: 0.6->0.8"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.6->0.9"], evaluating ...
434/100000000, 2795.0/3600.0
        -> worse: (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    Changing ["popSize: 4000->400"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.4->0.6"], evaluating ...
436/100000000, 2808.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 4000->30"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
          
============= Performing 25 bonus runs of state: pCross=0.6 pMutac=0.4 popSize=4000 (1.0105485202742477 [based on 17 runs with cutoff 60.0]) ============ 

439/100000000, 2821.0/3600.0
440/100000000, 2837.0/3600.0
442/100000000, 2848.0/3600.0
445/100000000, 2864.0/3600.0
448/100000000, 2877.0/3600.0
450/100000000, 2902.0/3600.0
451/100000000, 2919.0/3600.0
453/100000000, 2930.0/3600.0
456/100000000, 2946.0/3600.0
457/100000000, 2963.0/3600.0
459/100000000, 2975.0/3600.0
462/100000000, 2990.0/3600.0
          -> After 25 bonus runs for LM: pCross=0.6 pMutac=0.4 popSize=4000 (1.0101195260196445 [based on 42 runs with cutoff 60.0])

   LM for iteration 5: pCross=0.6 pMutac=0.4 popSize=4000 (1.0101195260196445 [based on 42 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 5): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 5): pCross=1.0, pMutac=0.4, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0109058485772704, based on 101 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
pCross=0.6 pMutac=0.4 popSize=4000 (1.0101195260196445 [based on 42 runs with cutoff 60.0])
pCross=1.0 pMutac=0.4 popSize=3600 (1.0109058485772704 [based on 101 runs with cutoff 60.0])
464/100000000, 3001.0/3600.0
467/100000000, 3017.0/3600.0
468/100000000, 3034.0/3600.0
470/100000000, 3046.0/3600.0
471/100000000, 3063.0/3600.0
474/100000000, 3078.0/3600.0
476/100000000, 3092.0/3600.0
478/100000000, 3115.0/3600.0
481/100000000, 3128.0/3600.0
483/100000000, 3139.0/3600.0
485/100000000, 3159.0/3600.0
487/100000000, 3182.0/3600.0
489/100000000, 3194.0/3600.0
492/100000000, 3209.0/3600.0
493/100000000, 3226.0/3600.0
496/100000000, 3244.0/3600.0
499/100000000, 3259.0/3600.0
501/100000000, 3270.0/3600.0
502/100000000, 3287.0/3600.0
505/100000000, 3301.0/3600.0
508/100000000, 3327.0/3600.0
510/100000000, 3341.0/3600.0
513/100000000, 3357.0/3600.0
515/100000000, 3368.0/3600.0
516/100000000, 3384.0/3600.0
518/100000000, 3398.0/3600.0
520/100000000, 3421.0/3600.0
New inc: 1.0103459539728594
New Incumbent: 3425.0, 1.0103459539728594 [101, 60.0]. With state pCross=0.6, pMutac=0.4, popSize=4000
LM better, change incumbent
New Incumbent: 3425.0, 1.0103459539728594 [101, 60.0]. With state pCross=0.6, pMutac=0.4, popSize=4000
   Accepting new better local optimum: pCross=0.6 pMutac=0.4 popSize=4000 (1.0103459539728594 [based on 101 runs with cutoff 60.0])
521/100000000, 3425.0/3600.0
iteration 6, flip 19, evaluation count 521
    perturb to ---> pCross=0.9 pMutac=0.4 popSize=4000 (1.0182731745795814 [based on 2 runs with cutoff 60.0])
    perturb to ---> pCross=0.9 pMutac=0.9 popSize=4000 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.9 pMutac=0.9 popSize=3200 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 6, start with pCross=0.9 pMutac=0.9 popSize=3200 (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 3200->30"], evaluating ...
523/100000000, 3433.0/3600.0
          -> Take improving step to neighbour pCross=0.9 pMutac=0.9 popSize=30 (1.007106101445724 [based on 1 runs with cutoff 60.0]) with flip 19

          
============= Performing 1 bonus runs of state: pCross=0.9 pMutac=0.9 popSize=30 (1.007106101445724 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: pCross=0.9 pMutac=0.9 popSize=30 (1.0176966971317019 [based on 2 runs with cutoff 60.0])

    Changing ["popSize: 30->2000"], evaluating ...
525/100000000, 3446.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 30->800"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.9->0.8"], evaluating ...
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.9->0.7"], evaluating ...
528/100000000, 3462.0/3600.0
        -> worse: (1.0106557377049181 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.9->1.0"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 30->3600"], evaluating ...
530/100000000, 3473.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 30->400"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 30->1200"], evaluating ...
532/100000000, 3485.0/3600.0
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 30->2400"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 30->1600"], evaluating ...
          -> Take improving step to neighbour pCross=0.9 pMutac=0.9 popSize=1600 (1.0078893670436917 [based on 3 runs with cutoff 60.0]) with flip 20

          
============= Performing 11 bonus runs of state: pCross=0.9 pMutac=0.9 popSize=1600 (1.0078893670436917 [based on 3 runs with cutoff 60.0]) ============ 

536/100000000, 3497.0/3600.0
538/100000000, 3519.0/3600.0
540/100000000, 3533.0/3600.0
543/100000000, 3544.0/3600.0
544/100000000, 3559.0/3600.0
          -> After 11 bonus runs: pCross=0.9 pMutac=0.9 popSize=1600 (1.0093968490959817 [based on 14 runs with cutoff 60.0])

    Changing ["popSize: 1600->200"], evaluating ...
547/100000000, 3572.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.9->0.2"], evaluating ...
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["pCross: 0.9->0.8"], evaluating ...
        -> worse: (1.007106101445724 [based on 1 runs with cutoff 60.0])
    Changing ["pMutac: 0.9->0.3"], evaluating ...
550/100000000, 3588.0/3600.0
        -> worse: (1.0082590563414833 [based on 1 runs with cutoff 60.0])
    Changing ["popSize: 1600->4000"], evaluating ...
552/100000000, 3601.0/3600.0
        -> worse: (1.0160698983426877 [based on 2 runs with cutoff 60.0])
          
============= Performing 5 bonus runs of state: pCross=0.9 pMutac=0.9 popSize=1600 (1.0093968490959817 [based on 14 runs with cutoff 60.0]) ============ 

          -> After 5 bonus runs for LM: pCross=0.9 pMutac=0.9 popSize=1600 (1.0093968490959817 [based on 14 runs with cutoff 60.0])

   LM for iteration 6: pCross=0.9 pMutac=0.9 popSize=1600 (1.0093968490959817 [based on 14 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 6): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 6): pCross=0.6, pMutac=0.4, popSize=4000
==================================================================
Training quality of this incumbent parameter configuration: 1.0103459539728594, based on 101 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
pCross=0.9 pMutac=0.9 popSize=1600 (1.0093968490959817 [based on 14 runs with cutoff 60.0])
pCross=0.6 pMutac=0.4 popSize=4000 (1.0103459539728594 [based on 101 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse pCross=0.9 pMutac=0.9 popSize=1600 (1.0093968490959817 [based on 14 runs with cutoff 60.0]), going back to pCross=0.6 pMutac=0.4 popSize=4000 (1.0103459539728594 [based on 101 runs with cutoff 60.0])
Final solution for depth 1 with limit N=2000, and cutoff time=60.0.
New Incumbent: 3601.0, 1.0103459539728594 [101, 60.0]. With state pCross=0.6, pMutac=0.4, popSize=4000

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: pCross=0.6, pMutac=0.4, popSize=4000
==================================================================
Active parameters: pCross=0.6, pMutac=0.4, popSize=4000

==================================================================
Training quality of this final best found parameter configuration: 1.0103459539728594, based on 101 runs with cutoff 60.0
==================================================================


==================================================================
Computing validation result on independent data -- 100 runs with cutoff time 60.0...
==================================================================
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017207432287099388
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030471557435157795
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.00823672971323978
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030682019573479314
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017289820618111088
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017389268814687244
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030444318525972313
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008112094395280236
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008086536441923966
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030444318525972313
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017207432287099388
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008125791473195441
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023282442748091603
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003065308405928968
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017498401588316452
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.00823672971323978
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003055671316157184
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008109531332280148
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017289820618111088
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030444318525972313
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017207432287099388
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017389268814687244
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003065308405928968
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/A2s.txt: 0.01508252703471827
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017389268814687244
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003065308405928968
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017306508245552726
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030444318525972313
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008125791473195441
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.00823672971323978
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008107823523217858
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017207432287099388
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003055671316157184
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008109531332280148
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017207432287099388
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030645886960562322
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017421894631041127
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003055671316157184
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030593611788787495
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008117225384777566
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015142857142857144
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017207432287099388
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008049341417520384
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017289820618111088
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023371647509578545
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030557949173047718
C:/JCell/dist/instanciasCSP/CU2.txt: 0.023351963861878877
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.003065308405928968
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017389268814687244
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/STS4s.txt: 0.008121506170235207
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 0.0017389268814687244
C:/JCell/dist/instanciasCSP/CHL2s.txt: 0.008320493066255779
C:/JCell/dist/instanciasCSP/A2s.txt: 0.015229885057471264
C:/JCell/dist/instanciasCSP/ATP31.txt: 0.0030682019573479314
Combined result: 0.009849004336608878

================================================================
Final best parameter configuration: pCross=0.6, pMutac=0.4, popSize=4000
==================================================================
Active parameters: pCross=0.6, pMutac=0.4, popSize=4000

================================================================
Training quality of this final best found parameter configuration: 1.0103459539728594, based on 101 runs with cutoff 60.0
Test quality of this final best found parameter configuration: 0.009849004336608878, based on 100 independent runs with cutoff 60.0
==================================================================
