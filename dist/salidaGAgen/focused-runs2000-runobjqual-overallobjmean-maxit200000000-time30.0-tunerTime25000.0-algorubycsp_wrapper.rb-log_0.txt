Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-scenariofile" "escenarioGAgen.txt" "-numRun" "0" "-validN" "100"


seed: 1234
algo: ruby csp_wrapper.rb
tunerTimeout: 25000.0
maxEvals: 100000000
run_obj: qual
overall_obj: mean
instance_file: CSP-training.txt
test_instance_file: CSP-test.txt
N: 2000
cutoff_time: 30.0
cutoff_length: 150000
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=30.0.
Current CPU time = 0, this run goes until 25000.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state pCross=1.0, pMutac=1.0, popSize=30
 Same incumbent, new precision:
New Incumbent: 4.0, 1.0064266293153168 [1, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=30
          -> Take improving step to random pCross=0.7 pMutac=0.4 popSize=800 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

3/100000000, 13.0/25000.0
          -> Take improving step to random pCross=0.6 pMutac=0.6 popSize=2000 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

          -> Take improving step to random pCross=0.9 pMutac=0.9 popSize=1600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

          -> Take improving step to random pCross=0.9 pMutac=0.4 popSize=2800 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

6/100000000, 28.0/25000.0
          -> Take improving step to random pCross=1.0 pMutac=1.0 popSize=3600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

        -> Worse random: pCross=1.0 pMutac=0.1 popSize=1200 (1.0070904443894797 [based on 1 runs with cutoff 30.0])
          -> Take improving step to random pCross=0.8 pMutac=1.0 popSize=3200 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

9/100000000, 41.0/25000.0
          -> Take improving step to random pCross=0.6 pMutac=0.5 popSize=100 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

          -> Take improving step to random pCross=0.8 pMutac=0.7 popSize=1600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

          -> Take improving step to random pCross=0.7 pMutac=1.0 popSize=2400 (1.0064266293153168 [based on 1 runs with cutoff 30.0])

   BLS in iteration 1, start with pCross=0.7 pMutac=1.0 popSize=2400 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
12/100000000, 56.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->400"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=400 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) with flip 1

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=400 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) ============ 

State wants more detail (1+1) than incumbent (1), doing incumbent first:
pCross=0.7 pMutac=1.0 popSize=400 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
pCross=1.0 pMutac=1.0 popSize=30 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 66.0, 1.0143738547341432 [2, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=30
15/100000000, 76.0/25000.0
New inc: 1.01037608374547
New Incumbent: 76.0, 1.01037608374547 [2, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 79.0, 1.0135458301477045 [3, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
          -> After 2 bonus runs: pCross=0.7 pMutac=1.0 popSize=400 (1.0135458301477045 [based on 3 runs with cutoff 30.0])

    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
18/100000000, 89.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->50"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->100"], evaluating ...
21/100000000, 104.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->4000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->3600"], evaluating ...
24/100000000, 119.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->2000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
27/100000000, 133.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->1200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->3200"], evaluating ...
30/100000000, 148.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->30"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
33/100000000, 161.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->1600"], evaluating ...
36/100000000, 174.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 400->800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
39/100000000, 188.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
          
============= Performing 25 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=400 (1.0135458301477045 [based on 3 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 198.0, 1.013116858747562 [4, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
43/100000000, 218.0/25000.0
 Same incumbent, new precision:
New Incumbent: 218.0, 1.0152314889569136 [5, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 223.0, 1.0141113471804066 [6, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
45/100000000, 231.0/25000.0
 Same incumbent, new precision:
New Incumbent: 231.0, 1.015618893424273 [7, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 241.0, 1.0178530392306888 [8, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
47/100000000, 243.0/25000.0
 Same incumbent, new precision:
New Incumbent: 243.0, 1.0130915904272788 [9, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
48/100000000, 264.0/25000.0
 Same incumbent, new precision:
New Incumbent: 264.0, 1.0135612893929344 [10, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
49/100000000, 280.0/25000.0
 Same incumbent, new precision:
New Incumbent: 280.0, 1.0139679503350325 [11, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 285.0, 1.0150411091384506 [12, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 290.0, 1.0147037728743327 [13, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
52/100000000, 313.0/25000.0
 Same incumbent, new precision:
New Incumbent: 313.0, 1.0159661502762598 [14, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 316.0, 1.0141200540490207 [15, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
54/100000000, 336.0/25000.0
 Same incumbent, new precision:
New Incumbent: 336.0, 1.0147311516899415 [16, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
55/100000000, 352.0/25000.0
 Same incumbent, new precision:
New Incumbent: 352.0, 1.014881766297604 [17, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 360.0, 1.0149136587532077 [18, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
57/100000000, 377.0/25000.0
 Same incumbent, new precision:
New Incumbent: 377.0, 1.015156181120031 [19, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 381.0, 1.0143902811218393 [20, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
59/100000000, 399.0/25000.0
 Same incumbent, new precision:
New Incumbent: 399.0, 1.0138027997297203 [21, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
60/100000000, 427.0/25000.0
 Same incumbent, new precision:
New Incumbent: 427.0, 1.01387496157624 [22, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 432.0, 1.0144327015553543 [23, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 436.0, 1.0138784283611098 [24, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
63/100000000, 443.0/25000.0
 Same incumbent, new precision:
New Incumbent: 443.0, 1.0141355230324942 [25, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 445.0, 1.0142057489040956 [26, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
65/100000000, 454.0/25000.0
 Same incumbent, new precision:
New Incumbent: 454.0, 1.0149199222426 [27, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 459.0, 1.0146165903523399 [28, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
          -> After 25 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=400 (1.0146165903523399 [based on 28 runs with cutoff 30.0])

   LM for iteration 1: pCross=0.7 pMutac=1.0 popSize=400 (1.0146165903523399 [based on 28 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): pCross=0.7, pMutac=1.0, popSize=400
==================================================================
Training quality of this incumbent parameter configuration: 1.0146165903523399, based on 28 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=400 (1.0146165903523399 [based on 28 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=400 (1.0146165903523399 [based on 28 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 459.0, 1.0146165903523399 [28, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
66/100000000, 459.0/25000.0
iteration 2, flip 3, evaluation count 66
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=4000 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=3600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=1600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
67/100000000, 466.0/25000.0
   BLS in iteration 2, start with pCross=0.7 pMutac=1.0 popSize=1600 (1.011754350452363 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 1600->30"], evaluating ...
        -> worse: (1.0165372428651982 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 1600->400"], evaluating ...
69/100000000, 479.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=400 (1.0146165903523399 [based on 28 runs with cutoff 30.0]) with flip 3

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=400 (1.0146165903523399 [based on 28 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 484.0, 1.014406040281496 [29, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
71/100000000, 492.0/25000.0
 Same incumbent, new precision:
New Incumbent: 492.0, 1.014201140816829 [30, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
          -> After 2 bonus runs: pCross=0.7 pMutac=1.0 popSize=400 (1.014201140816829 [based on 30 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.4"], evaluating ...
72/100000000, 503.0/25000.0
        -> worse: (1.0178769325763952 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->50"], evaluating ...
74/100000000, 516.0/25000.0
        -> worse: (1.0152930644621931 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
75/100000000, 527.0/25000.0
        -> worse: (1.0150129551984102 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->200"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->3600"], evaluating ...
77/100000000, 541.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->2000"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->3200"], evaluating ...
79/100000000, 555.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
        -> worse: (1.011754350452363 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
81/100000000, 568.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->2800"], evaluating ...
        -> worse: (1.0110445932495788 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
83/100000000, 585.0/25000.0
        -> worse: (1.0153448627354917 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0165372428651982 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
85/100000000, 597.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->100"], evaluating ...
        -> worse: (1.020265497494952 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->1200"], evaluating ...
87/100000000, 609.0/25000.0
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0153448627354917 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->4000"], evaluating ...
89/100000000, 626.0/25000.0
        -> worse: (1.0136567719096263 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
91/100000000, 643.0/25000.0
        -> worse: (1.0107079912825516 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0120862579894445 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
93/100000000, 655.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->800"], evaluating ...
        -> worse: (1.0108871383922526 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 400->2400"], evaluating ...
95/100000000, 668.0/25000.0
        -> worse: (1.0110445932495788 [based on 2 runs with cutoff 30.0])
          
============= Performing 24 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=400 (1.014201140816829 [based on 30 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 678.0, 1.0143604806356559 [31, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
97/100000000, 680.0/25000.0
 Same incumbent, new precision:
New Incumbent: 680.0, 1.0131304656157916 [32, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
98/100000000, 697.0/25000.0
 Same incumbent, new precision:
New Incumbent: 697.0, 1.01332413586146 [33, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
99/100000000, 719.0/25000.0
 Same incumbent, new precision:
New Incumbent: 719.0, 1.013455443044471 [34, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
100/100000000, 736.0/25000.0
 Same incumbent, new precision:
New Incumbent: 736.0, 1.0136936674225816 [35, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 743.0, 1.0135114284167204 [36, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
102/100000000, 751.0/25000.0
 Same incumbent, new precision:
New Incumbent: 751.0, 1.0139107761032329 [37, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 756.0, 1.0139568756053539 [38, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 759.0, 1.0132983584582338 [39, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
105/100000000, 775.0/25000.0
 Same incumbent, new precision:
New Incumbent: 775.0, 1.0133622650061378 [40, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 781.0, 1.013077262172987 [41, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
107/100000000, 788.0/25000.0
 Same incumbent, new precision:
New Incumbent: 788.0, 1.0133207453430333 [42, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 793.0, 1.0132088823884946 [43, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
109/100000000, 809.0/25000.0
 Same incumbent, new precision:
New Incumbent: 809.0, 1.013269012797265 [44, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 815.0, 1.0134253857383417 [45, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
111/100000000, 824.0/25000.0
 Same incumbent, new precision:
New Incumbent: 824.0, 1.0135324747412078 [46, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 826.0, 1.012712634853097 [47, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 834.0, 1.0127697847623756 [48, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
114/100000000, 844.0/25000.0
 Same incumbent, new precision:
New Incumbent: 844.0, 1.0130438831938116 [49, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 849.0, 1.013193086691832 [50, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
116/100000000, 871.0/25000.0
 Same incumbent, new precision:
New Incumbent: 871.0, 1.0132831944054006 [51, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
117/100000000, 891.0/25000.0
 Same incumbent, new precision:
New Incumbent: 891.0, 1.0130672324338994 [52, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
 Same incumbent, new precision:
New Incumbent: 900.0, 1.0129547582643113 [53, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
119/100000000, 908.0/25000.0
 Same incumbent, new precision:
New Incumbent: 908.0, 1.0131464026541375 [54, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
          -> After 24 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])

   LM for iteration 2: pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 2): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 2): pCross=0.7, pMutac=1.0, popSize=400
==================================================================
Training quality of this incumbent parameter configuration: 1.0131464026541375, based on 54 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 908.0, 1.0131464026541375 [54, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=400
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])
119/100000000, 908.0/25000.0
iteration 3, flip 5, evaluation count 119
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=3200 (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.2 popSize=3200 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.7 pMutac=0.2 popSize=50 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 3, start with pCross=0.7 pMutac=0.2 popSize=50 (1.043125533731853 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->3200"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.2 popSize=3200 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) with flip 5

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=0.2 popSize=3200 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) ============ 

122/100000000, 925.0/25000.0
          -> After 1 bonus runs: pCross=0.7 pMutac=0.2 popSize=3200 (1.0144137517478864 [based on 2 runs with cutoff 30.0])

    Changing ["popSize: 3200->800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
124/100000000, 936.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.2->0.5"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
127/100000000, 950.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
130/100000000, 965.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.2->0.3"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.2->0.7"], evaluating ...
133/100000000, 980.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.2->1.0"], evaluating ...
136/100000000, 995.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.01243687950868 [based on 3 runs with cutoff 30.0]) with flip 6

          
============= Performing 14 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.01243687950868 [based on 3 runs with cutoff 30.0]) ============ 

138/100000000, 1009.0/25000.0
140/100000000, 1026.0/25000.0
142/100000000, 1038.0/25000.0
143/100000000, 1051.0/25000.0
144/100000000, 1067.0/25000.0
145/100000000, 1083.0/25000.0
147/100000000, 1101.0/25000.0
149/100000000, 1124.0/25000.0
150/100000000, 1143.0/25000.0
          -> After 14 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0117387953622166 [based on 17 runs with cutoff 30.0])

    Changing ["popSize: 3200->1600"], evaluating ...
        -> worse: (1.0138059921010085 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
153/100000000, 1155.0/25000.0
        -> worse: (1.0139915031504436 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
        -> worse: (1.0139915031504436 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.01243687950868 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
156/100000000, 1171.0/25000.0
        -> worse: (1.0144646746189665 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->800"], evaluating ...
        -> worse: (1.0138865332455596 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
159/100000000, 1186.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
        -> worse: (1.013868542695447 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
161/100000000, 1202.0/25000.0
162/100000000, 1223.0/25000.0
164/100000000, 1254.0/25000.0
165/100000000, 1282.0/25000.0
167/100000000, 1293.0/25000.0
168/100000000, 1304.0/25000.0
170/100000000, 1324.0/25000.0
172/100000000, 1335.0/25000.0
174/100000000, 1356.0/25000.0
176/100000000, 1379.0/25000.0
177/100000000, 1391.0/25000.0
178/100000000, 1410.0/25000.0
180/100000000, 1429.0/25000.0
182/100000000, 1440.0/25000.0
183/100000000, 1451.0/25000.0
185/100000000, 1469.0/25000.0
187/100000000, 1491.0/25000.0
188/100000000, 1502.0/25000.0
189/100000000, 1516.0/25000.0
191/100000000, 1530.0/25000.0
192/100000000, 1549.0/25000.0
194/100000000, 1569.0/25000.0
195/100000000, 1598.0/25000.0
197/100000000, 1613.0/25000.0
New inc: 1.0108719804813613
New Incumbent: 1613.0, 1.0108719804813613 [54, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
        -> worse: (1.0131464026541375 [based on 54 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
        -> worse: (1.0201387726473592 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
        -> worse: (1.0155272805997306 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
200/100000000, 1627.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
203/100000000, 1642.0/25000.0
        -> worse: (1.0190963700067524 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
206/100000000, 1657.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
        -> worse: (1.0175050530315006 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
208/100000000, 1670.0/25000.0
        -> worse: (1.020921105267807 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
        -> worse: (1.0171711620913026 [based on 3 runs with cutoff 30.0])
          
============= Performing 22 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108719804813613 [based on 54 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 1675.0, 1.01088939800983 [55, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1680.0, 1.0108097057117136 [56, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
212/100000000, 1698.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1698.0, 1.010924975841465 [57, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1703.0, 1.011079464584753 [58, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1707.0, 1.0106929432675142 [59, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
215/100000000, 1713.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1713.0, 1.010512030565659 [60, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1722.0, 1.010766257042369 [61, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
217/100000000, 1743.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1743.0, 1.0108269609968787 [62, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1750.0, 1.0111100794058696 [63, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1753.0, 1.0105458594151528 [64, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
220/100000000, 1766.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1766.0, 1.010911486548186 [65, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1770.0, 1.0105685050378752 [66, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
222/100000000, 1777.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1777.0, 1.010427633990944 [67, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1783.0, 1.010557643755488 [68, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
224/100000000, 1789.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1789.0, 1.0104419525332435 [69, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1798.0, 1.010658032577819 [70, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
226/100000000, 1805.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1805.0, 1.0107485120005173 [71, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1815.0, 1.0106982974340042 [72, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
228/100000000, 1837.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1837.0, 1.0106256399000724 [73, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 1846.0, 1.0107591320378393 [74, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
230/100000000, 1852.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1852.0, 1.0107013653348722 [75, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
231/100000000, 1865.0/25000.0
 Same incumbent, new precision:
New Incumbent: 1865.0, 1.0107058955799995 [76, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 22 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])

   LM for iteration 3: pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 3): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 3): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0107058955799995, based on 76 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 1865.0, 1.0107058955799995 [76, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
   Accepting new better local optimum: pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
231/100000000, 1865.0/25000.0
iteration 4, flip 8, evaluation count 231
    perturb to ---> pCross=0.7 pMutac=0.4 popSize=3200 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.4 popSize=100 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=100 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 4, start with pCross=0.7 pMutac=0.6 popSize=100 (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
          -> Take improving step to neighbour pCross=0.8 pMutac=0.6 popSize=100 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) with flip 8

          
============= Performing 1 bonus runs of state: pCross=0.8 pMutac=0.6 popSize=100 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) ============ 

234/100000000, 1885.0/25000.0
          -> After 1 bonus runs: pCross=0.8 pMutac=0.6 popSize=100 (1.0165372428651982 [based on 2 runs with cutoff 30.0])

    Changing ["popSize: 100->400"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.2"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->2400"], evaluating ...
237/100000000, 1901.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->1200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->1.0"], evaluating ...
239/100000000, 1912.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->1600"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.7"], evaluating ...
242/100000000, 1927.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->200"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->2000"], evaluating ...
245/100000000, 1943.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->50"], evaluating ...
247/100000000, 1954.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.3"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.4"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.5"], evaluating ...
250/100000000, 1969.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->3200"], evaluating ...
252/100000000, 1980.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->1.0"], evaluating ...
254/100000000, 1992.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.1"], evaluating ...
        -> worse: (1.0321081537811576 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->800"], evaluating ...
256/100000000, 2003.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->30"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->3600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->4000"], evaluating ...
259/100000000, 2019.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
          
============= Performing 25 bonus runs of state: pCross=0.8 pMutac=0.6 popSize=100 (1.0165372428651982 [based on 2 runs with cutoff 30.0]) ============ 

262/100000000, 2051.0/25000.0
264/100000000, 2067.0/25000.0
267/100000000, 2091.0/25000.0
268/100000000, 2102.0/25000.0
270/100000000, 2115.0/25000.0
271/100000000, 2145.0/25000.0
273/100000000, 2162.0/25000.0
274/100000000, 2180.0/25000.0
276/100000000, 2212.0/25000.0
278/100000000, 2252.0/25000.0
279/100000000, 2282.0/25000.0
281/100000000, 2295.0/25000.0
282/100000000, 2321.0/25000.0
284/100000000, 2341.0/25000.0
          -> After 25 bonus runs for LM: pCross=0.8 pMutac=0.6 popSize=100 (1.0175503040595362 [based on 27 runs with cutoff 30.0])

   LM for iteration 4: pCross=0.8 pMutac=0.6 popSize=100 (1.0175503040595362 [based on 27 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 4): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 4): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0107058955799995, based on 76 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.8 pMutac=0.6 popSize=100 (1.0175503040595362 [based on 27 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=0.8 pMutac=0.6 popSize=100 (1.0175503040595362 [based on 27 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
284/100000000, 2341.0/25000.0
iteration 5, flip 10, evaluation count 284
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])
    perturb to ---> pCross=1.0 pMutac=1.0 popSize=400 (1.0120862579894445 [based on 2 runs with cutoff 30.0])
    perturb to ---> pCross=1.0 pMutac=1.0 popSize=1600 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 5, start with pCross=1.0 pMutac=1.0 popSize=1600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1600->4000"], evaluating ...
286/100000000, 2352.0/25000.0
          -> Take improving step to neighbour pCross=1.0 pMutac=1.0 popSize=4000 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) with flip 10

          
============= Performing 1 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs: pCross=1.0 pMutac=1.0 popSize=4000 (1.0110445932495788 [based on 2 runs with cutoff 30.0])

    Changing ["popSize: 4000->400"], evaluating ...
288/100000000, 2366.0/25000.0
        -> worse: (1.0152123403717739 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
290/100000000, 2382.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
292/100000000, 2393.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
294/100000000, 2405.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
296/100000000, 2418.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
298/100000000, 2429.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
301/100000000, 2447.0/25000.0
        -> worse: (1.0193440266369054 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.9"], evaluating ...
303/100000000, 2459.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
306/100000000, 2474.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
309/100000000, 2489.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
312/100000000, 2500.0/25000.0
        -> worse: (1.0146029465865818 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
          
============= Performing 27 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0119931765626284 [based on 4 runs with cutoff 30.0]) ============ 

315/100000000, 2529.0/25000.0
317/100000000, 2546.0/25000.0
319/100000000, 2559.0/25000.0
320/100000000, 2573.0/25000.0
321/100000000, 2590.0/25000.0
323/100000000, 2605.0/25000.0
324/100000000, 2618.0/25000.0
326/100000000, 2639.0/25000.0
327/100000000, 2657.0/25000.0
328/100000000, 2669.0/25000.0
329/100000000, 2692.0/25000.0
331/100000000, 2730.0/25000.0
332/100000000, 2760.0/25000.0
334/100000000, 2774.0/25000.0
335/100000000, 2787.0/25000.0
337/100000000, 2807.0/25000.0
339/100000000, 2819.0/25000.0
341/100000000, 2840.0/25000.0
          -> After 27 bonus runs for LM: pCross=1.0 pMutac=1.0 popSize=4000 (1.0105390116706787 [based on 31 runs with cutoff 30.0])

   LM for iteration 5: pCross=1.0 pMutac=1.0 popSize=4000 (1.0105390116706787 [based on 31 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 5): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 5): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0107058955799995, based on 76 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0105390116706787 [based on 31 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
343/100000000, 2866.0/25000.0
344/100000000, 2877.0/25000.0
345/100000000, 2897.0/25000.0
346/100000000, 2910.0/25000.0
347/100000000, 2921.0/25000.0
349/100000000, 2935.0/25000.0
350/100000000, 2947.0/25000.0
351/100000000, 2963.0/25000.0
352/100000000, 2974.0/25000.0
354/100000000, 2994.0/25000.0
355/100000000, 3010.0/25000.0
356/100000000, 3029.0/25000.0
358/100000000, 3049.0/25000.0
359/100000000, 3067.0/25000.0
360/100000000, 3079.0/25000.0
361/100000000, 3091.0/25000.0
362/100000000, 3121.0/25000.0
364/100000000, 3136.0/25000.0
367/100000000, 3165.0/25000.0
370/100000000, 3184.0/25000.0
371/100000000, 3195.0/25000.0
372/100000000, 3223.0/25000.0
374/100000000, 3234.0/25000.0
375/100000000, 3251.0/25000.0
377/100000000, 3265.0/25000.0
379/100000000, 3278.0/25000.0
381/100000000, 3296.0/25000.0
382/100000000, 3308.0/25000.0
383/100000000, 3332.0/25000.0
Incumbent better, keeping it
rejecting worse pCross=1.0 pMutac=1.0 popSize=4000 (1.0107251921162599 [based on 73 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
383/100000000, 3332.0/25000.0
iteration 6, flip 12, evaluation count 383
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=400 (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=1200 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 6, start with pCross=0.7 pMutac=0.6 popSize=1200 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.9"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.9 popSize=1200 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) with flip 12

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=0.9 popSize=1200 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) ============ 

386/100000000, 3349.0/25000.0
          -> After 1 bonus runs: pCross=0.7 pMutac=0.9 popSize=1200 (1.0110445932495788 [based on 2 runs with cutoff 30.0])

    Changing ["pCross: 0.7->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->3600"], evaluating ...
388/100000000, 3360.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->1600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.3"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->2400"], evaluating ...
391/100000000, 3375.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.1"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->2000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->100"], evaluating ...
394/100000000, 3390.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->400"], evaluating ...
        -> worse: (1.0186485525532414 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->1.0"], evaluating ...
398/100000000, 3401.0/25000.0
        -> worse: (1.0158358577052606 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 1200->200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->2800"], evaluating ...
401/100000000, 3416.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->30"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
404/100000000, 3431.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->4000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
406/100000000, 3442.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.2"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1200->3200"], evaluating ...
409/100000000, 3459.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 1200->50"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.5"], evaluating ...
412/100000000, 3474.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->0.4"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
          
============= Performing 27 bonus runs of state: pCross=0.7 pMutac=0.9 popSize=1200 (1.0134511134996165 [based on 4 runs with cutoff 30.0]) ============ 

414/100000000, 3487.0/25000.0
416/100000000, 3503.0/25000.0
419/100000000, 3532.0/25000.0
420/100000000, 3544.0/25000.0
422/100000000, 3559.0/25000.0
424/100000000, 3571.0/25000.0
426/100000000, 3597.0/25000.0
428/100000000, 3625.0/25000.0
430/100000000, 3662.0/25000.0
431/100000000, 3692.0/25000.0
434/100000000, 3708.0/25000.0
436/100000000, 3732.0/25000.0
438/100000000, 3743.0/25000.0
440/100000000, 3763.0/25000.0
          -> After 27 bonus runs for LM: pCross=0.7 pMutac=0.9 popSize=1200 (1.0127384407381346 [based on 31 runs with cutoff 30.0])

   LM for iteration 6: pCross=0.7 pMutac=0.9 popSize=1200 (1.0127384407381346 [based on 31 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 6): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 6): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0107058955799995, based on 76 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=0.9 popSize=1200 (1.0127384407381346 [based on 31 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=0.7 pMutac=0.9 popSize=1200 (1.0127384407381346 [based on 31 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0])
440/100000000, 3763.0/25000.0
iteration 7, flip 14, evaluation count 440
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=400 (1.0131464026541375 [based on 54 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=100 (1.0201387726473592 [based on 3 runs with cutoff 30.0])
    perturb to ---> pCross=1.0 pMutac=1.0 popSize=100 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
   BLS in iteration 7, start with pCross=1.0 pMutac=1.0 popSize=100 (1.020265497494952 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 100->3200"], evaluating ...
442/100000000, 3775.0/25000.0
          -> Take improving step to neighbour pCross=1.0 pMutac=1.0 popSize=3200 (1.0162376088159821 [based on 3 runs with cutoff 30.0]) with flip 14

          
============= Performing 2 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=3200 (1.0162376088159821 [based on 3 runs with cutoff 30.0]) ============ 

445/100000000, 3793.0/25000.0
          -> After 2 bonus runs: pCross=1.0 pMutac=1.0 popSize=3200 (1.0124439839684083 [based on 5 runs with cutoff 30.0])

    Changing ["popSize: 3200->30"], evaluating ...
        -> worse: (1.0174655061144628 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=1.0 popSize=4000 (1.0107251921162599 [based on 73 runs with cutoff 30.0]) with flip 15

          
============= Performing 2 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0107251921162599 [based on 73 runs with cutoff 30.0]) ============ 

448/100000000, 3814.0/25000.0
          -> After 2 bonus runs: pCross=1.0 pMutac=1.0 popSize=4000 (1.0105472373686566 [based on 75 runs with cutoff 30.0])

    Changing ["popSize: 4000->200"], evaluating ...
450/100000000, 3825.0/25000.0
        -> worse: (1.022067786653222 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
        -> worse: (1.0139886794467077 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.6"], evaluating ...
452/100000000, 3839.0/25000.0
        -> worse: (1.0175450250393139 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
454/100000000, 3853.0/25000.0
        -> worse: (1.0120862579894445 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.0147456592849677 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
456/100000000, 3867.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.013696557058282 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
458/100000000, 3881.0/25000.0
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
        -> worse: (1.0113765007866604 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
460/100000000, 3897.0/25000.0
        -> worse: (1.0165372428651982 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
462/100000000, 3911.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0147456592849677 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
464/100000000, 3925.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->400"], evaluating ...
        -> worse: (1.0143667414156141 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.9"], evaluating ...
        -> worse: (1.0110445932495788 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.7"], evaluating ...
467/100000000, 3948.0/25000.0
        -> worse: (1.0157831688882317 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
        -> worse: (1.0110445932495788 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
469/100000000, 3963.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->1600"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
471/100000000, 3976.0/25000.0
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
          
============= Performing 23 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0105472373686566 [based on 75 runs with cutoff 30.0]) ============ 

473/100000000, 3995.0/25000.0
New inc: 1.0105537956133392
New Incumbent: 3995.0, 1.0105537956133392 [76, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
474/100000000, 4009.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4009.0, 1.0106804449579156 [77, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
475/100000000, 4039.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4039.0, 1.0105925358836785 [78, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
476/100000000, 4059.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4059.0, 1.0106722174047111 [79, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
477/100000000, 4077.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4077.0, 1.0107705725772458 [80, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4082.0, 1.0107395662039649 [81, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4085.0, 1.0107528635008327 [82, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
480/100000000, 4097.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4097.0, 1.0108143304511166 [83, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4107.0, 1.0110373894160583 [84, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
482/100000000, 4137.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4137.0, 1.0109316927392498 [85, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
483/100000000, 4158.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4158.0, 1.0109488430737599 [86, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
484/100000000, 4181.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4181.0, 1.0110291785514667 [87, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4189.0, 1.0110787010598197 [88, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
486/100000000, 4206.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4206.0, 1.01113236307459 [89, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4213.0, 1.011182698564693 [90, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4216.0, 1.0111898111579065 [91, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
489/100000000, 4221.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4221.0, 1.0111579551272933 [92, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4227.0, 1.0109118986943941 [93, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
491/100000000, 4236.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4236.0, 1.011024695717649 [94, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
492/100000000, 4248.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4248.0, 1.0109263004874314 [95, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
493/100000000, 4270.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4270.0, 1.0110173743594169 [96, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
 Same incumbent, new precision:
New Incumbent: 4273.0, 1.010646061221691 [97, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
495/100000000, 4283.0/25000.0
 Same incumbent, new precision:
New Incumbent: 4283.0, 1.0108705409054508 [98, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
          -> After 23 bonus runs for LM: pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])

   LM for iteration 7: pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 7): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 7): pCross=1.0, pMutac=1.0, popSize=4000
==================================================================
Training quality of this incumbent parameter configuration: 1.0108705409054508, based on 98 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 4283.0, 1.0108705409054508 [98, 30.0]. With state pCross=1.0, pMutac=1.0, popSize=4000
   Accepting new better local optimum: pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])
495/100000000, 4283.0/25000.0
iteration 8, flip 17, evaluation count 495
    perturb to ---> pCross=1.0 pMutac=0.7 popSize=4000 (1.0113765007866604 [based on 2 runs with cutoff 30.0])
    perturb to ---> pCross=1.0 pMutac=0.5 popSize=4000 (1.013696557058282 [based on 2 runs with cutoff 30.0])
    perturb to ---> pCross=1.0 pMutac=0.4 popSize=4000 (1.0139886794467077 [based on 2 runs with cutoff 30.0])
   BLS in iteration 8, start with pCross=1.0 pMutac=0.4 popSize=4000 (1.015954227281863 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 1.0->0.8"], evaluating ...
497/100000000, 4295.0/25000.0
499/100000000, 4307.0/25000.0
          -> Take improving step to neighbour pCross=0.8 pMutac=0.4 popSize=4000 (1.0139915031504436 [based on 3 runs with cutoff 30.0]) with flip 17

          
============= Performing 1 bonus runs of state: pCross=0.8 pMutac=0.4 popSize=4000 (1.0139915031504436 [based on 3 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs: pCross=0.8 pMutac=0.4 popSize=4000 (1.0134511134996165 [based on 4 runs with cutoff 30.0])

    Changing ["pMutac: 0.4->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
502/100000000, 4322.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
        -> worse: (1.043125533731853 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
505/100000000, 4338.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->1.0"], evaluating ...
508/100000000, 4354.0/25000.0
        -> worse: (1.0152272461753185 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->1600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.6"], evaluating ...
511/100000000, 4370.0/25000.0
        -> worse: (1.0136567719096263 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.8"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
514/100000000, 4385.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.6"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->400"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.2"], evaluating ...
517/100000000, 4399.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.1"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.3"], evaluating ...
520/100000000, 4414.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->200"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
523/100000000, 4427.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.5"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.0183620748908568 [based on 2 runs with cutoff 30.0])
          
============= Performing 25 bonus runs of state: pCross=0.8 pMutac=0.4 popSize=4000 (1.0134511134996165 [based on 4 runs with cutoff 30.0]) ============ 

526/100000000, 4455.0/25000.0
528/100000000, 4470.0/25000.0
530/100000000, 4481.0/25000.0
531/100000000, 4492.0/25000.0
532/100000000, 4507.0/25000.0
533/100000000, 4521.0/25000.0
535/100000000, 4537.0/25000.0
537/100000000, 4558.0/25000.0
538/100000000, 4575.0/25000.0
540/100000000, 4605.0/25000.0
542/100000000, 4638.0/25000.0
543/100000000, 4667.0/25000.0
545/100000000, 4678.0/25000.0
546/100000000, 4689.0/25000.0
548/100000000, 4709.0/25000.0
550/100000000, 4720.0/25000.0
          -> After 25 bonus runs for LM: pCross=0.8 pMutac=0.4 popSize=4000 (1.0122223888834752 [based on 29 runs with cutoff 30.0])

   LM for iteration 8: pCross=0.8 pMutac=0.4 popSize=4000 (1.0122223888834752 [based on 29 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 8): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 8): pCross=1.0, pMutac=1.0, popSize=4000
==================================================================
Training quality of this incumbent parameter configuration: 1.0108705409054508, based on 98 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.8 pMutac=0.4 popSize=4000 (1.0122223888834752 [based on 29 runs with cutoff 30.0])
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=0.8 pMutac=0.4 popSize=4000 (1.0122223888834752 [based on 29 runs with cutoff 30.0]), going back to pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0])
550/100000000, 4720.0/25000.0
iteration 9, flip 19, evaluation count 550
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=4000 (1.0157831688882317 [based on 5 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=2000 (1.01243687950868 [based on 3 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=4000 (1.0157831688882317 [based on 5 runs with cutoff 30.0])
   BLS in iteration 9, start with pCross=0.7 pMutac=1.0 popSize=4000 (1.0100323287089898 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
552/100000000, 4737.0/25000.0
554/100000000, 4750.0/25000.0
555/100000000, 4762.0/25000.0
556/100000000, 4779.0/25000.0
557/100000000, 4794.0/25000.0
559/100000000, 4814.0/25000.0
561/100000000, 4834.0/25000.0
562/100000000, 4857.0/25000.0
563/100000000, 4869.0/25000.0
564/100000000, 4890.0/25000.0
566/100000000, 4927.0/25000.0
567/100000000, 4957.0/25000.0
569/100000000, 4972.0/25000.0
570/100000000, 4987.0/25000.0
572/100000000, 5010.0/25000.0
574/100000000, 5023.0/25000.0
576/100000000, 5048.0/25000.0
578/100000000, 5075.0/25000.0
579/100000000, 5089.0/25000.0
580/100000000, 5108.0/25000.0
581/100000000, 5119.0/25000.0
583/100000000, 5135.0/25000.0
585/100000000, 5151.0/25000.0
587/100000000, 5170.0/25000.0
589/100000000, 5195.0/25000.0
590/100000000, 5209.0/25000.0
591/100000000, 5228.0/25000.0
593/100000000, 5244.0/25000.0
594/100000000, 5264.0/25000.0
595/100000000, 5276.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0]) with flip 19

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0107058955799995 [based on 76 runs with cutoff 30.0]) ============ 

596/100000000, 5288.0/25000.0
          -> After 1 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108305696003335 [based on 77 runs with cutoff 30.0])

    Changing ["popSize: 3200->3600"], evaluating ...
        -> worse: (1.013358893158369 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
        -> worse: (1.0134511134996165 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.0133180085550437 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
600/100000000, 5305.0/25000.0
601/100000000, 5316.0/25000.0
        -> worse: (1.0170263747239494 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
        -> worse: (1.0131975843457737 [based on 55 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
604/100000000, 5336.0/25000.0
        -> worse: (1.015145605299773 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
        -> worse: (1.018648315087639 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
606/100000000, 5348.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
607/100000000, 5360.0/25000.0
        -> worse: (1.0167694977831747 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
        -> worse: (1.017279763641848 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
609/100000000, 5371.0/25000.0
        -> worse: (1.0144646746189665 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
612/100000000, 5387.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
        -> worse: (1.018061565622303 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
615/100000000, 5400.0/25000.0
        -> worse: (1.0138059921010085 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
617/100000000, 5416.0/25000.0
        -> worse: (1.01243687950868 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->800"], evaluating ...
        -> worse: (1.0144052488577033 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
619/100000000, 5430.0/25000.0
621/100000000, 5441.0/25000.0
622/100000000, 5454.0/25000.0
624/100000000, 5474.0/25000.0
625/100000000, 5485.0/25000.0
627/100000000, 5502.0/25000.0
628/100000000, 5519.0/25000.0
630/100000000, 5535.0/25000.0
631/100000000, 5548.0/25000.0
633/100000000, 5576.0/25000.0
634/100000000, 5595.0/25000.0
636/100000000, 5625.0/25000.0
638/100000000, 5656.0/25000.0
639/100000000, 5686.0/25000.0
642/100000000, 5707.0/25000.0
644/100000000, 5728.0/25000.0
646/100000000, 5739.0/25000.0
648/100000000, 5760.0/25000.0
650/100000000, 5782.0/25000.0
        -> worse: (1.0102564410306922 [based on 33 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
        -> worse: (1.0134511134996165 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0175450250393139 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
653/100000000, 5798.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
        -> worse: (1.0160862759104092 [based on 4 runs with cutoff 30.0])
          
============= Performing 25 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108305696003335 [based on 77 runs with cutoff 30.0]) ============ 

655/100000000, 5826.0/25000.0
656/100000000, 5841.0/25000.0
657/100000000, 5858.0/25000.0
660/100000000, 5882.0/25000.0
662/100000000, 5915.0/25000.0
663/100000000, 5928.0/25000.0
664/100000000, 5948.0/25000.0
666/100000000, 5961.0/25000.0
669/100000000, 5978.0/25000.0
671/100000000, 5993.0/25000.0
672/100000000, 6009.0/25000.0
673/100000000, 6028.0/25000.0
675/100000000, 6040.0/25000.0
New inc: 1.0106695678833473
New Incumbent: 6040.0, 1.0106695678833473 [98, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
676/100000000, 6058.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6058.0, 1.0109026185099224 [99, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
677/100000000, 6071.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6071.0, 1.0109040489644685 [100, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 6075.0, 1.010859718076853 [101, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
679/100000000, 6082.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6082.0, 1.010764330104467 [102, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 25 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0])

   LM for iteration 9: pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 9): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 9): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.010764330104467, based on 102 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 6082.0, 1.010764330104467 [102, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
   Accepting new better local optimum: pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0])
679/100000000, 6082.0/25000.0
iteration 10, flip 21, evaluation count 679
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=1600 (1.015145605299773 [based on 5 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=1600 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=3200 (1.0144137517478864 [based on 2 runs with cutoff 30.0])
   BLS in iteration 10, start with pCross=0.7 pMutac=0.6 popSize=3200 (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.3"], evaluating ...
        -> worse: (1.0162794864327063 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
682/100000000, 6095.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.1"], evaluating ...
        -> worse: (1.0183251243436005 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
685/100000000, 6109.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
688/100000000, 6124.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
690/100000000, 6135.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
        -> worse: (1.043125533731853 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
693/100000000, 6155.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
        -> worse: (1.0235944519867042 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.8"], evaluating ...
695/100000000, 6171.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.8 popSize=3200 (1.01243687950868 [based on 3 runs with cutoff 30.0]) with flip 21

          
============= Performing 15 bonus runs of state: pCross=0.7 pMutac=0.8 popSize=3200 (1.01243687950868 [based on 3 runs with cutoff 30.0]) ============ 

697/100000000, 6186.0/25000.0
699/100000000, 6207.0/25000.0
700/100000000, 6219.0/25000.0
702/100000000, 6238.0/25000.0
703/100000000, 6259.0/25000.0
704/100000000, 6282.0/25000.0
706/100000000, 6306.0/25000.0
708/100000000, 6335.0/25000.0
709/100000000, 6358.0/25000.0
710/100000000, 6370.0/25000.0
          -> After 15 bonus runs: pCross=0.7 pMutac=0.8 popSize=3200 (1.0116891911204997 [based on 18 runs with cutoff 30.0])

    Changing ["pMutac: 0.8->0.4"], evaluating ...
        -> worse: (1.0138059921010085 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.9"], evaluating ...
        -> worse: (1.0122851457682938 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
713/100000000, 6384.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->800"], evaluating ...
715/100000000, 6397.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
717/100000000, 6410.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
719/100000000, 6427.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->1.0"], evaluating ...
721/100000000, 6460.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0]) with flip 22

          
============= Performing 11 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.010764330104467 [based on 102 runs with cutoff 30.0]) ============ 

722/100000000, 6475.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6475.0, 1.0107290750860893 [103, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 6484.0, 1.0107077439631258 [104, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
724/100000000, 6498.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6498.0, 1.0107991539743886 [105, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
725/100000000, 6516.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6516.0, 1.0108014795403333 [106, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 6520.0, 1.0108110913628268 [107, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
727/100000000, 6530.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6530.0, 1.010856012342651 [108, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
728/100000000, 6555.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6555.0, 1.01108575883465 [109, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 6561.0, 1.011043403111747 [110, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
730/100000000, 6567.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6567.0, 1.0108382797221607 [111, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
731/100000000, 6582.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6582.0, 1.010756483910775 [112, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
732/100000000, 6594.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6594.0, 1.0109116238126061 [113, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 11 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0109116238126061 [based on 113 runs with cutoff 30.0])

    Changing ["popSize: 3200->1200"], evaluating ...
        -> worse: (1.015393021202291 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
734/100000000, 6630.0/25000.0
        -> worse: (1.019656654028975 [based on 5 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0184428775624965 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
736/100000000, 6649.0/25000.0
738/100000000, 6669.0/25000.0
739/100000000, 6682.0/25000.0
741/100000000, 6699.0/25000.0
742/100000000, 6719.0/25000.0
        -> worse: (1.0118703664673616 [based on 11 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
743/100000000, 6740.0/25000.0
        -> worse: (1.0102796534699232 [based on 34 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
        -> worse: (1.0130766744345154 [based on 56 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
745/100000000, 6752.0/25000.0
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0123567775323994 [based on 9 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
747/100000000, 6784.0/25000.0
        -> worse: (1.0185618128723424 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->800"], evaluating ...
748/100000000, 6795.0/25000.0
        -> worse: (1.0156250107051288 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
749/100000000, 6811.0/25000.0
        -> worse: (1.0146012713368404 [based on 5 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
750/100000000, 6823.0/25000.0
        -> worse: (1.015145605299773 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
        -> worse: (1.014039777466123 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
752/100000000, 6859.0/25000.0
        -> worse: (1.0191872544567064 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
753/100000000, 6870.0/25000.0
        -> worse: (1.0148617024186595 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
754/100000000, 6887.0/25000.0
        -> worse: (1.0160227110091613 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.014755218463001 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
756/100000000, 6915.0/25000.0
        -> worse: (1.0109992739632765 [based on 51 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
757/100000000, 6944.0/25000.0
        -> worse: (1.0176070226871912 [based on 5 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0161985641652047 [based on 3 runs with cutoff 30.0])
          
============= Performing 20 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0109116238126061 [based on 113 runs with cutoff 30.0]) ============ 

759/100000000, 6961.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6961.0, 1.010878242037458 [114, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
760/100000000, 6976.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6976.0, 1.010845675265059 [115, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 6980.0, 1.0105366608231188 [116, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
762/100000000, 6994.0/25000.0
 Same incumbent, new precision:
New Incumbent: 6994.0, 1.010645779579459 [117, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
763/100000000, 7006.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7006.0, 1.0106899222980603 [118, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
764/100000000, 7030.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7030.0, 1.0107639582896304 [119, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
765/100000000, 7046.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7046.0, 1.0108434735967644 [120, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
766/100000000, 7066.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7066.0, 1.0108879406133473 [121, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
767/100000000, 7091.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7091.0, 1.0109261837357402 [122, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 7098.0, 1.0108465411435266 [123, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
769/100000000, 7128.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7128.0, 1.0107756268753316 [124, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 7137.0, 1.010757286940571 [125, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
771/100000000, 7146.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7146.0, 1.0107394563957877 [126, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
772/100000000, 7164.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7164.0, 1.0107418674790063 [127, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
773/100000000, 7194.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7194.0, 1.0106739870446964 [128, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
774/100000000, 7222.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7222.0, 1.0107425730654571 [129, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
775/100000000, 7244.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7244.0, 1.0107818965062951 [130, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 7252.0, 1.0108068711528444 [131, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
777/100000000, 7279.0/25000.0
 Same incumbent, new precision:
New Incumbent: 7279.0, 1.010863401233882 [132, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 7287.0, 1.0108457112869949 [133, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 20 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0])

   LM for iteration 10: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 10): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 10): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0108457112869949, based on 133 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 7287.0, 1.0108457112869949 [133, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0])
778/100000000, 7287.0/25000.0
iteration 11, flip 24, evaluation count 778
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=100 (1.0191872544567064 [based on 5 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.1 popSize=100 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.7 pMutac=0.4 popSize=100 (100000000 [based on 0 runs with cutoff 0])
779/100000000, 7293.0/25000.0
   BLS in iteration 11, start with pCross=0.7 pMutac=0.4 popSize=100 (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 100->50"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.4 popSize=50 (1.0070904443894797 [based on 1 runs with cutoff 30.0]) with flip 24

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=0.4 popSize=50 (1.0070904443894797 [based on 1 runs with cutoff 30.0]) ============ 

781/100000000, 7318.0/25000.0
          -> After 1 bonus runs: pCross=0.7 pMutac=0.4 popSize=50 (1.0184025447322762 [based on 2 runs with cutoff 30.0])

    Changing ["popSize: 50->400"], evaluating ...
782/100000000, 7331.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.4 popSize=400 (1.018490997506701 [based on 3 runs with cutoff 30.0]) with flip 25

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=0.4 popSize=400 (1.018490997506701 [based on 3 runs with cutoff 30.0]) ============ 

785/100000000, 7348.0/25000.0
          -> After 2 bonus runs: pCross=0.7 pMutac=0.4 popSize=400 (1.0198309241416783 [based on 5 runs with cutoff 30.0])

    Changing ["pMutac: 0.4->0.1"], evaluating ...
        -> worse: (1.0191309021889514 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 400->800"], evaluating ...
787/100000000, 7359.0/25000.0
790/100000000, 7370.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.4 popSize=800 (1.015133151015442 [based on 5 runs with cutoff 30.0]) with flip 26

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=0.4 popSize=800 (1.015133151015442 [based on 5 runs with cutoff 30.0]) ============ 

792/100000000, 7384.0/25000.0
          -> After 2 bonus runs: pCross=0.7 pMutac=0.4 popSize=800 (1.0160662408846801 [based on 7 runs with cutoff 30.0])

    Changing ["pCross: 0.7->0.8"], evaluating ...
        -> worse: (1.0178769325763952 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->1.0"], evaluating ...
794/100000000, 7396.0/25000.0
        -> worse: (1.014439281970586 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 800->200"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.5"], evaluating ...
797/100000000, 7410.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 800->2400"], evaluating ...
800/100000000, 7425.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.2"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 800->30"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 800->1200"], evaluating ...
803/100000000, 7441.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.8"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 800->3200"], evaluating ...
805/100000000, 7457.0/25000.0
807/100000000, 7474.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.4 popSize=3200 (1.014686546994961 [based on 7 runs with cutoff 30.0]) with flip 27

          
============= Performing 13 bonus runs of state: pCross=0.7 pMutac=0.4 popSize=3200 (1.014686546994961 [based on 7 runs with cutoff 30.0]) ============ 

809/100000000, 7487.0/25000.0
810/100000000, 7498.0/25000.0
811/100000000, 7514.0/25000.0
812/100000000, 7530.0/25000.0
814/100000000, 7550.0/25000.0
816/100000000, 7573.0/25000.0
817/100000000, 7592.0/25000.0
819/100000000, 7624.0/25000.0
          -> After 13 bonus runs: pCross=0.7 pMutac=0.4 popSize=3200 (1.0121903901555847 [based on 20 runs with cutoff 30.0])

    Changing ["pMutac: 0.4->0.3"], evaluating ...
        -> worse: (1.0151671009613135 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
822/100000000, 7639.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.5"], evaluating ...
        -> worse: (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
825/100000000, 7652.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.7"], evaluating ...
826/100000000, 7677.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.7 popSize=3200 (1.0102796534699232 [based on 34 runs with cutoff 30.0]) with flip 28

          
============= Performing 6 bonus runs of state: pCross=0.7 pMutac=0.7 popSize=3200 (1.0102796534699232 [based on 34 runs with cutoff 30.0]) ============ 

827/100000000, 7698.0/25000.0
828/100000000, 7709.0/25000.0
830/100000000, 7726.0/25000.0
832/100000000, 7747.0/25000.0
          -> After 6 bonus runs: pCross=0.7 pMutac=0.7 popSize=3200 (1.0102784251451369 [based on 40 runs with cutoff 30.0])

    Changing ["popSize: 3200->1200"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
834/100000000, 7758.0/25000.0
836/100000000, 7771.0/25000.0
        -> worse: (1.0218755417447283 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.7->1.0"], evaluating ...
838/100000000, 7789.0/25000.0
840/100000000, 7811.0/25000.0
841/100000000, 7823.0/25000.0
842/100000000, 7837.0/25000.0
844/100000000, 7852.0/25000.0
845/100000000, 7874.0/25000.0
846/100000000, 7885.0/25000.0
847/100000000, 7898.0/25000.0
848/100000000, 7925.0/25000.0
850/100000000, 7941.0/25000.0
853/100000000, 7969.0/25000.0
856/100000000, 7986.0/25000.0
858/100000000, 8018.0/25000.0
861/100000000, 8048.0/25000.0
863/100000000, 8060.0/25000.0
865/100000000, 8072.0/25000.0
867/100000000, 8088.0/25000.0
869/100000000, 8117.0/25000.0
871/100000000, 8132.0/25000.0
872/100000000, 8143.0/25000.0
874/100000000, 8182.0/25000.0
875/100000000, 8197.0/25000.0
876/100000000, 8214.0/25000.0
879/100000000, 8236.0/25000.0
881/100000000, 8273.0/25000.0
882/100000000, 8286.0/25000.0
883/100000000, 8305.0/25000.0
885/100000000, 8324.0/25000.0
888/100000000, 8339.0/25000.0
890/100000000, 8352.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0]) with flip 29

          
============= Performing 3 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108457112869949 [based on 133 runs with cutoff 30.0]) ============ 

892/100000000, 8365.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8365.0, 1.0106772709555074 [134, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
893/100000000, 8376.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8376.0, 1.0107485933569165 [135, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8384.0, 1.0108409092536665 [136, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 3 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108409092536665 [based on 136 runs with cutoff 30.0])

    Changing ["popSize: 3200->4000"], evaluating ...
895/100000000, 8413.0/25000.0
        -> worse: (1.0108272335387392 [based on 52 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
        -> worse: (1.0172350600044895 [based on 7 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
897/100000000, 8427.0/25000.0
        -> worse: (1.0168866171099307 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.014770698890613 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
899/100000000, 8440.0/25000.0
        -> worse: (1.0162036819223472 [based on 6 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0151064092606874 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
901/100000000, 8453.0/25000.0
        -> worse: (1.01374227342478 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
        -> worse: (1.0135861658303458 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
903/100000000, 8465.0/25000.0
        -> worse: (1.0138031917318615 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
        -> worse: (1.012202387626281 [based on 12 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
905/100000000, 8477.0/25000.0
        -> worse: (1.0167896443086561 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
906/100000000, 8491.0/25000.0
        -> worse: (1.0122256661756137 [based on 10 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.016701329394484 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
909/100000000, 8516.0/25000.0
        -> worse: (1.0131923361496653 [based on 57 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.0137144551021464 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
911/100000000, 8528.0/25000.0
        -> worse: (1.017798984740458 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0114736807348357 [based on 20 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
913/100000000, 8541.0/25000.0
        -> worse: (1.014039777466123 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
        -> worse: (1.0148868221144178 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
915/100000000, 8556.0/25000.0
        -> worse: (1.0160751368020597 [based on 7 runs with cutoff 30.0])
          
============= Performing 21 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0108409092536665 [based on 136 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 8559.0, 1.0105792967773624 [137, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
917/100000000, 8578.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8578.0, 1.0107627683947042 [138, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
918/100000000, 8589.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8589.0, 1.0107366554077752 [139, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8597.0, 1.0108199712561514 [140, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
920/100000000, 8607.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8607.0, 1.0108886527230925 [141, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8612.0, 1.0108620150380405 [142, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
922/100000000, 8620.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8620.0, 1.0107939600020648 [143, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
923/100000000, 8631.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8631.0, 1.0108808913485428 [144, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
924/100000000, 8646.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8646.0, 1.010917740253748 [145, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8652.0, 1.0108869792199229 [146, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8655.0, 1.0108933939500402 [147, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
927/100000000, 8665.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8665.0, 1.0109651603347043 [148, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8672.0, 1.0109486870324438 [149, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
929/100000000, 8690.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8690.0, 1.0110703874898244 [150, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8696.0, 1.0110396341244303 [151, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
931/100000000, 8716.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8716.0, 1.0110813477361613 [152, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8719.0, 1.010845521933964 [153, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 8726.0, 1.010782435070065 [154, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
934/100000000, 8734.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8734.0, 1.0108139197288635 [155, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
935/100000000, 8750.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8750.0, 1.0108485996190844 [156, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
936/100000000, 8772.0/25000.0
 Same incumbent, new precision:
New Incumbent: 8772.0, 1.0109010236103306 [157, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 21 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])

   LM for iteration 11: pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 11): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 11): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0109010236103306, based on 157 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 8772.0, 1.0109010236103306 [157, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
936/100000000, 8772.0/25000.0
iteration 12, flip 31, evaluation count 936
    perturb to ---> pCross=0.9 pMutac=1.0 popSize=3200 (1.0151064092606874 [based on 4 runs with cutoff 30.0])
    perturb to ---> pCross=0.9 pMutac=1.0 popSize=3600 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.9 pMutac=1.0 popSize=2000 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 12, start with pCross=0.9 pMutac=1.0 popSize=2000 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2000->50"], evaluating ...
938/100000000, 8783.0/25000.0
          -> Take improving step to neighbour pCross=0.9 pMutac=1.0 popSize=50 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) with flip 31

          
============= Performing 1 bonus runs of state: pCross=0.9 pMutac=1.0 popSize=50 (1.0064266293153168 [based on 1 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs: pCross=0.9 pMutac=1.0 popSize=50 (1.0111233573098493 [based on 2 runs with cutoff 30.0])

    Changing ["popSize: 50->4000"], evaluating ...
941/100000000, 8799.0/25000.0
        -> worse: (1.0139915031504436 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0321081537811576 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->100"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->200"], evaluating ...
944/100000000, 8813.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.024748322147651 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->2800"], evaluating ...
946/100000000, 8824.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->400"], evaluating ...
        -> worse: (1.020921105267807 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
948/100000000, 8836.0/25000.0
        -> worse: (1.0321081537811576 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->1200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
950/100000000, 8848.0/25000.0
        -> worse: (1.0321081537811576 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->3600"], evaluating ...
953/100000000, 8864.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.9->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->30"], evaluating ...
956/100000000, 8877.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.9->1.0"], evaluating ...
959/100000000, 8890.0/25000.0
        -> worse: (1.0199258222754224 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 50->3200"], evaluating ...
        -> worse: (1.0151064092606874 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.9->0.7"], evaluating ...
961/100000000, 8915.0/25000.0
        -> worse: (1.0168866171099307 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
963/100000000, 8927.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->1600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.9->0.8"], evaluating ...
965/100000000, 8938.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 50->2400"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
          
============= Performing 26 bonus runs of state: pCross=0.9 pMutac=1.0 popSize=50 (1.0142863301038552 [based on 6 runs with cutoff 30.0]) ============ 

967/100000000, 8954.0/25000.0
968/100000000, 8965.0/25000.0
970/100000000, 8984.0/25000.0
971/100000000, 8996.0/25000.0
974/100000000, 9036.0/25000.0
976/100000000, 9053.0/25000.0
977/100000000, 9067.0/25000.0
979/100000000, 9095.0/25000.0
981/100000000, 9129.0/25000.0
982/100000000, 9159.0/25000.0
984/100000000, 9173.0/25000.0
985/100000000, 9197.0/25000.0
987/100000000, 9217.0/25000.0
990/100000000, 9235.0/25000.0
991/100000000, 9265.0/25000.0
          -> After 26 bonus runs for LM: pCross=0.9 pMutac=1.0 popSize=50 (1.0146663349522151 [based on 32 runs with cutoff 30.0])

   LM for iteration 12: pCross=0.9 pMutac=1.0 popSize=50 (1.0146663349522151 [based on 32 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 12): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 12): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0109010236103306, based on 157 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.9 pMutac=1.0 popSize=50 (1.0146663349522151 [based on 32 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=0.9 pMutac=1.0 popSize=50 (1.0146663349522151 [based on 32 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
992/100000000, 9268.0/25000.0
iteration 13, flip 33, evaluation count 992
    perturb to ---> pCross=0.9 pMutac=1.0 popSize=3200 (1.0151064092606874 [based on 4 runs with cutoff 30.0])
    perturb to ---> pCross=0.9 pMutac=1.0 popSize=50 (1.0146663349522151 [based on 32 runs with cutoff 30.0])
    perturb to ---> pCross=0.9 pMutac=1.0 popSize=4000 (1.0139915031504436 [based on 3 runs with cutoff 30.0])
   BLS in iteration 13, start with pCross=0.9 pMutac=1.0 popSize=4000 (1.0144839762863667 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.9->0.8"], evaluating ...
          -> Take improving step to neighbour pCross=0.8 pMutac=1.0 popSize=4000 (1.0143779207682726 [based on 4 runs with cutoff 30.0]) with flip 33

          
============= Performing 1 bonus runs of state: pCross=0.8 pMutac=1.0 popSize=4000 (1.0143779207682726 [based on 4 runs with cutoff 30.0]) ============ 

995/100000000, 9287.0/25000.0
          -> After 1 bonus runs: pCross=0.8 pMutac=1.0 popSize=4000 (1.0118377663840101 [based on 5 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.8"], evaluating ...
997/100000000, 9300.0/25000.0
999/100000000, 9315.0/25000.0
        -> worse: (1.0148617024186595 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->400"], evaluating ...
1002/100000000, 9344.0/25000.0
        -> worse: (1.0157827956396708 [based on 5 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.7"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=4000 (1.0108272335387392 [based on 52 runs with cutoff 30.0]) with flip 34

          
============= Performing 3 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=4000 (1.0108272335387392 [based on 52 runs with cutoff 30.0]) ============ 

1004/100000000, 9358.0/25000.0
1006/100000000, 9371.0/25000.0
          -> After 3 bonus runs: pCross=0.7 pMutac=1.0 popSize=4000 (1.0110256127312363 [based on 55 runs with cutoff 30.0])

    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0183251243436005 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
1008/100000000, 9384.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
1010/100000000, 9399.0/25000.0
        -> worse: (1.013696557058282 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
1012/100000000, 9413.0/25000.0
        -> worse: (1.017993621918294 [based on 8 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
1014/100000000, 9429.0/25000.0
        -> worse: (1.0168011750720267 [based on 7 runs with cutoff 30.0])
    Changing ["popSize: 4000->1600"], evaluating ...
        -> worse: (1.017759655140078 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
1016/100000000, 9444.0/25000.0
        -> worse: (1.0118990544505273 [based on 13 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.0177030172371853 [based on 7 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
1018/100000000, 9463.0/25000.0
        -> worse: (1.014286180863707 [based on 7 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
        -> worse: (1.0156863268285363 [based on 7 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
1020/100000000, 9480.0/25000.0
        -> worse: (1.0185152850681807 [based on 7 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
          -> Take improving step to neighbour pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0]) with flip 35

          
============= Performing 15 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0108705409054508 [based on 98 runs with cutoff 30.0]) ============ 

1022/100000000, 9501.0/25000.0
1023/100000000, 9515.0/25000.0
1025/100000000, 9526.0/25000.0
1026/100000000, 9538.0/25000.0
1028/100000000, 9557.0/25000.0
1029/100000000, 9573.0/25000.0
1032/100000000, 9595.0/25000.0
1035/100000000, 9618.0/25000.0
          -> After 15 bonus runs: pCross=1.0 pMutac=1.0 popSize=4000 (1.01106327952823 [based on 113 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.1"], evaluating ...
1037/100000000, 9632.0/25000.0
        -> worse: (1.014293692899998 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
        -> worse: (1.0160319338252373 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
1040/100000000, 9659.0/25000.0
        -> worse: (1.0121073694514309 [based on 11 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0157594790229125 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0164588805073695 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
1043/100000000, 9672.0/25000.0
        -> worse: (1.0149231565981809 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
        -> worse: (1.0146859463103541 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
1045/100000000, 9683.0/25000.0
        -> worse: (1.0137858281596988 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
        -> worse: (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->1600"], evaluating ...
1048/100000000, 9697.0/25000.0
        -> worse: (1.0160319338252373 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.0169654871005578 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
1050/100000000, 9708.0/25000.0
1052/100000000, 9729.0/25000.0
        -> worse: (1.012714027849111 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
        -> worse: (1.0179018528433506 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->400"], evaluating ...
1054/100000000, 9756.0/25000.0
        -> worse: (1.016231395091355 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->200"], evaluating ...
        -> worse: (1.021866692814292 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
1056/100000000, 9786.0/25000.0
        -> worse: (1.0187104068504342 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.0197659801582275 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0161985641652047 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
1059/100000000, 9803.0/25000.0
        -> worse: (1.0160319338252373 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.0164588805073695 [based on 3 runs with cutoff 30.0])
          
============= Performing 22 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.01106327952823 [based on 113 runs with cutoff 30.0]) ============ 

1061/100000000, 9814.0/25000.0
1062/100000000, 9826.0/25000.0
1064/100000000, 9840.0/25000.0
1066/100000000, 9869.0/25000.0
1067/100000000, 9883.0/25000.0
1068/100000000, 9905.0/25000.0
1069/100000000, 9927.0/25000.0
1071/100000000, 9965.0/25000.0
1073/100000000, 9979.0/25000.0
1074/100000000, 9991.0/25000.0
1075/100000000, 10021.0/25000.0
1076/100000000, 10046.0/25000.0
1077/100000000, 10064.0/25000.0
1079/100000000, 10093.0/25000.0
1081/100000000, 10106.0/25000.0
1082/100000000, 10120.0/25000.0
          -> After 22 bonus runs for LM: pCross=1.0 pMutac=1.0 popSize=4000 (1.0109247612739214 [based on 135 runs with cutoff 30.0])

   LM for iteration 13: pCross=1.0 pMutac=1.0 popSize=4000 (1.0109247612739214 [based on 135 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 13): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 13): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0109010236103306, based on 157 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109247612739214 [based on 135 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=1.0 pMutac=1.0 popSize=4000 (1.0109247612739214 [based on 135 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
1082/100000000, 10120.0/25000.0
iteration 14, flip 37, evaluation count 1082
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=2400 (1.0138031917318615 [based on 6 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=400 (1.0131923361496653 [based on 57 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.4 popSize=400 (1.0198309241416783 [based on 5 runs with cutoff 30.0])
   BLS in iteration 14, start with pCross=0.7 pMutac=0.4 popSize=400 (1.0179442098343774 [based on 6 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
1084/100000000, 10131.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->0.1"], evaluating ...
        -> worse: (1.0211023980300813 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
1087/100000000, 10145.0/25000.0
1089/100000000, 10171.0/25000.0
          -> Take improving step to neighbour pCross=0.8 pMutac=0.4 popSize=400 (1.0139488616583694 [based on 6 runs with cutoff 30.0]) with flip 37

          
============= Performing 3 bonus runs of state: pCross=0.8 pMutac=0.4 popSize=400 (1.0139488616583694 [based on 6 runs with cutoff 30.0]) ============ 

1091/100000000, 10188.0/25000.0
          -> After 3 bonus runs: pCross=0.8 pMutac=0.4 popSize=400 (1.0117009776844461 [based on 9 runs with cutoff 30.0])

    Changing ["popSize: 400->4000"], evaluating ...
1094/100000000, 10217.0/25000.0
          -> Take improving step to neighbour pCross=0.8 pMutac=0.4 popSize=4000 (1.0122223888834752 [based on 29 runs with cutoff 30.0]) with flip 38

          
============= Performing 1 bonus runs of state: pCross=0.8 pMutac=0.4 popSize=4000 (1.0122223888834752 [based on 29 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs: pCross=0.8 pMutac=0.4 popSize=4000 (1.0120902777987422 [based on 30 runs with cutoff 30.0])

    Changing ["popSize: 4000->200"], evaluating ...
1096/100000000, 10230.0/25000.0
        -> worse: (1.0183620748908568 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
        -> worse: (1.0147456592849677 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.9"], evaluating ...
1098/100000000, 10245.0/25000.0
        -> worse: (1.0110445932495788 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.4->1.0"], evaluating ...
1100/100000000, 10264.0/25000.0
1102/100000000, 10279.0/25000.0
1103/100000000, 10299.0/25000.0
1104/100000000, 10310.0/25000.0
1106/100000000, 10329.0/25000.0
1108/100000000, 10353.0/25000.0
1109/100000000, 10373.0/25000.0
1110/100000000, 10385.0/25000.0
1111/100000000, 10409.0/25000.0
1113/100000000, 10446.0/25000.0
1114/100000000, 10476.0/25000.0
1116/100000000, 10489.0/25000.0
1117/100000000, 10504.0/25000.0
1119/100000000, 10526.0/25000.0
1121/100000000, 10538.0/25000.0
          -> Take improving step to neighbour pCross=0.8 pMutac=1.0 popSize=4000 (1.010458125018516 [based on 30 runs with cutoff 30.0]) with flip 39

          
============= Performing 4 bonus runs of state: pCross=0.8 pMutac=1.0 popSize=4000 (1.010458125018516 [based on 30 runs with cutoff 30.0]) ============ 

1123/100000000, 10558.0/25000.0
1125/100000000, 10584.0/25000.0
1126/100000000, 10597.0/25000.0
          -> After 4 bonus runs: pCross=0.8 pMutac=1.0 popSize=4000 (1.0097751140146471 [based on 34 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.6"], evaluating ...
1129/100000000, 10618.0/25000.0
1131/100000000, 10634.0/25000.0
1133/100000000, 10647.0/25000.0
1134/100000000, 10660.0/25000.0
1135/100000000, 10678.0/25000.0
        -> worse: (1.0105423288814346 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->400"], evaluating ...
1137/100000000, 10689.0/25000.0
        -> worse: (1.0145707694160377 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.6"], evaluating ...
        -> worse: (1.016701329394484 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
1140/100000000, 10708.0/25000.0
        -> worse: (1.0151076405252986 [based on 7 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.020265497494952 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
1142/100000000, 10721.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
1144/100000000, 10735.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
1146/100000000, 10748.0/25000.0
1149/100000000, 10770.0/25000.0
        -> worse: (1.0136953528690689 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->1600"], evaluating ...
1151/100000000, 10782.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
1153/100000000, 10796.0/25000.0
        -> worse: (1.0161046602744381 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.7"], evaluating ...
1154/100000000, 10817.0/25000.0
1155/100000000, 10829.0/25000.0
1157/100000000, 10847.0/25000.0
1159/100000000, 10863.0/25000.0
1160/100000000, 10884.0/25000.0
1162/100000000, 10902.0/25000.0
1163/100000000, 10919.0/25000.0
1164/100000000, 10933.0/25000.0
1165/100000000, 10948.0/25000.0
1167/100000000, 10963.0/25000.0
1168/100000000, 10982.0/25000.0
1169/100000000, 10994.0/25000.0
1170/100000000, 11008.0/25000.0
1171/100000000, 11035.0/25000.0
1173/100000000, 11049.0/25000.0
        -> worse: (1.0109434880273804 [based on 56 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
1176/100000000, 11064.0/25000.0
1179/100000000, 11082.0/25000.0
1181/100000000, 11097.0/25000.0
1183/100000000, 11108.0/25000.0
1184/100000000, 11119.0/25000.0
1185/100000000, 11134.0/25000.0
1186/100000000, 11150.0/25000.0
1188/100000000, 11167.0/25000.0
1190/100000000, 11187.0/25000.0
1191/100000000, 11202.0/25000.0
1193/100000000, 11231.0/25000.0
1195/100000000, 11258.0/25000.0
1196/100000000, 11286.0/25000.0
1199/100000000, 11307.0/25000.0
1201/100000000, 11328.0/25000.0
        -> worse: (1.0111595551141324 [based on 27 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0138031917318615 [based on 6 runs with cutoff 30.0])
    Changing ["pCross: 0.8->0.9"], evaluating ...
1203/100000000, 11344.0/25000.0
        -> worse: (1.0156879926480595 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
1205/100000000, 11355.0/25000.0
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
1207/100000000, 11366.0/25000.0
        -> worse: (1.0158989852836935 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
1209/100000000, 11378.0/25000.0
        -> worse: (1.0165372428651982 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.8->1.0"], evaluating ...
1210/100000000, 11399.0/25000.0
1212/100000000, 11410.0/25000.0
1214/100000000, 11426.0/25000.0
1215/100000000, 11449.0/25000.0
1218/100000000, 11471.0/25000.0
1220/100000000, 11482.0/25000.0
1222/100000000, 11494.0/25000.0
1224/100000000, 11510.0/25000.0
1225/100000000, 11521.0/25000.0
1226/100000000, 11543.0/25000.0
1227/100000000, 11554.0/25000.0
1229/100000000, 11572.0/25000.0
1230/100000000, 11585.0/25000.0
1231/100000000, 11614.0/25000.0
1232/100000000, 11631.0/25000.0
1233/100000000, 11649.0/25000.0
1236/100000000, 11666.0/25000.0
1238/100000000, 11705.0/25000.0
1239/100000000, 11722.0/25000.0
1240/100000000, 11743.0/25000.0
1242/100000000, 11763.0/25000.0
1245/100000000, 11778.0/25000.0
1247/100000000, 11791.0/25000.0
1248/100000000, 11802.0/25000.0
1249/100000000, 11821.0/25000.0
1251/100000000, 11833.0/25000.0
1252/100000000, 11848.0/25000.0
1253/100000000, 11860.0/25000.0
1255/100000000, 11871.0/25000.0
1256/100000000, 11883.0/25000.0
1258/100000000, 11900.0/25000.0
1259/100000000, 11912.0/25000.0
          -> Take improving step to neighbour pCross=1.0 pMutac=1.0 popSize=4000 (1.0109247612739214 [based on 135 runs with cutoff 30.0]) with flip 40

          
============= Performing 25 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0109247612739214 [based on 135 runs with cutoff 30.0]) ============ 

1262/100000000, 11931.0/25000.0
1264/100000000, 11950.0/25000.0
1265/100000000, 11962.0/25000.0
1267/100000000, 11985.0/25000.0
1269/100000000, 11996.0/25000.0
1271/100000000, 12021.0/25000.0
1274/100000000, 12038.0/25000.0
1276/100000000, 12061.0/25000.0
1278/100000000, 12083.0/25000.0
1281/100000000, 12100.0/25000.0
1282/100000000, 12116.0/25000.0
1283/100000000, 12137.0/25000.0
State wants more detail (157+1) than incumbent (157), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.011088297672544 [based on 157 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0109010236103306 [based on 157 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12147.0, 1.0108964818487323 [158, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1285/100000000, 12158.0/25000.0
State wants more detail (158+1) than incumbent (158), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0110632645430442 [based on 158 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108964818487323 [based on 158 runs with cutoff 30.0])
1286/100000000, 12169.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12169.0, 1.010897420101033 [159, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1287/100000000, 12181.0/25000.0
State wants more detail (159+1) than incumbent (159), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0110631538475818 [based on 159 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010897420101033 [based on 159 runs with cutoff 30.0])
1288/100000000, 12203.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12203.0, 1.0108421435496973 [160, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1289/100000000, 12233.0/25000.0
          -> After 25 bonus runs: pCross=1.0 pMutac=1.0 popSize=4000 (1.0110068414603304 [based on 160 runs with cutoff 30.0])

    Changing ["popSize: 4000->800"], evaluating ...
        -> worse: (1.0160142992924617 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0151064092606874 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->3600"], evaluating ...
1292/100000000, 12248.0/25000.0
        -> worse: (1.0162093658179825 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
1293/100000000, 12267.0/25000.0
        -> worse: (1.0146569120440725 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 4000->200"], evaluating ...
        -> worse: (1.0193575057475028 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
1295/100000000, 12282.0/25000.0
        -> worse: (1.0158526820886897 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
        -> worse: (1.011332078671016 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.016714464248952 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
        -> worse: (1.0149814365057117 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
1299/100000000, 12300.0/25000.0
        -> worse: (1.0124196403616779 [based on 12 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
        -> worse: (1.016021163945468 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.016334509304061 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
1302/100000000, 12313.0/25000.0
        -> worse: (1.015301646517311 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
1303/100000000, 12334.0/25000.0
        -> worse: (1.020550786085446 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0136777558117822 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.014777095403968 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->1200"], evaluating ...
        -> worse: (1.0139719458695493 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
1308/100000000, 12347.0/25000.0
        -> worse: (1.013296857256558 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
        -> worse: (1.0161685555355202 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->1600"], evaluating ...
        -> worse: (1.0149814365057117 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 4000->400"], evaluating ...
        -> worse: (1.0149446022924413 [based on 6 runs with cutoff 30.0])
          
============= Performing 22 bonus runs of state: pCross=1.0 pMutac=1.0 popSize=4000 (1.0110068414603304 [based on 160 runs with cutoff 30.0]) ============ 

State wants more detail (160+1) than incumbent (160), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0110068414603304 [based on 160 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108421435496973 [based on 160 runs with cutoff 30.0])
1312/100000000, 12362.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12362.0, 1.0108189383192379 [161, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (161+1) than incumbent (161), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109897744720144 [based on 161 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108189383192379 [based on 161 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12371.0, 1.0106797763966975 [162, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1315/100000000, 12376.0/25000.0
State wants more detail (162+1) than incumbent (162), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.010849558005321 [based on 162 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0106797763966975 [based on 162 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12386.0, 1.010738831726446 [163, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1317/100000000, 12399.0/25000.0
State wants more detail (163+1) than incumbent (163), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109075717301088 [based on 163 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010738831726446 [based on 163 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12401.0, 1.0107454848534014 [164, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (164+1) than incumbent (164), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.010913195954603 [based on 164 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107454848534014 [based on 164 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12408.0, 1.010800877811576 [165, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1321/100000000, 12414.0/25000.0
State wants more detail (165+1) than incumbent (165), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109322285561158 [based on 165 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010800877811576 [based on 165 runs with cutoff 30.0])
1322/100000000, 12430.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12430.0, 1.010831322043882 [166, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (166+1) than incumbent (166), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109618815188766 [based on 166 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010831322043882 [based on 166 runs with cutoff 30.0])
1324/100000000, 12457.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12457.0, 1.0108892426190375 [167, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1325/100000000, 12473.0/25000.0
State wants more detail (167+1) than incumbent (167), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109062843172483 [based on 167 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108892426190375 [based on 167 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12482.0, 1.0109631373374655 [168, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1327/100000000, 12491.0/25000.0
State wants more detail (168+1) than incumbent (168), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.011017266455278 [based on 168 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0109631373374655 [based on 168 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12495.0, 1.0108288862695969 [169, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (169+1) than incumbent (169), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108826950967713 [based on 169 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108288862695969 [based on 169 runs with cutoff 30.0])
1330/100000000, 12503.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12503.0, 1.01061812811507 [170, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (170+1) than incumbent (170), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0106716204197315 [based on 170 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.01061812811507 [based on 170 runs with cutoff 30.0])
1332/100000000, 12515.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12515.0, 1.0106923118998643 [171, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (171+1) than incumbent (171), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.010782027806202 [based on 171 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0106923118998643 [based on 171 runs with cutoff 30.0])
1334/100000000, 12538.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12538.0, 1.0107022788161857 [172, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1335/100000000, 12554.0/25000.0
State wants more detail (172+1) than incumbent (172), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108136670782784 [based on 172 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107022788161857 [based on 172 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12564.0, 1.0107577904712697 [173, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1337/100000000, 12576.0/25000.0
State wants more detail (173+1) than incumbent (173), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108685348705757 [based on 173 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107577904712697 [based on 173 runs with cutoff 30.0])
1338/100000000, 12594.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12594.0, 1.0107056028757277 [174, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1339/100000000, 12605.0/25000.0
State wants more detail (174+1) than incumbent (174), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109239114408302 [based on 174 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107056028757277 [based on 174 runs with cutoff 30.0])
1340/100000000, 12625.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12625.0, 1.0107274560148491 [175, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1341/100000000, 12648.0/25000.0
State wants more detail (175+1) than incumbent (175), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109634038614996 [based on 175 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107274560148491 [based on 175 runs with cutoff 30.0])
1342/100000000, 12677.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12677.0, 1.010678170309579 [176, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1343/100000000, 12706.0/25000.0
State wants more detail (176+1) than incumbent (176), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109127775434645 [based on 176 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010678170309579 [based on 176 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12711.0, 1.0106541503039617 [177, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (177+1) than incumbent (177), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108874320732488 [based on 177 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0106541503039617 [based on 177 runs with cutoff 30.0])
1346/100000000, 12722.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12722.0, 1.0106342174452074 [178, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
State wants more detail (178+1) than incumbent (178), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0108661886427572 [based on 178 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0106342174452074 [based on 178 runs with cutoff 30.0])
1348/100000000, 12743.0/25000.0
 Same incumbent, new precision:
New Incumbent: 12743.0, 1.0107618946049757 [179, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1349/100000000, 12756.0/25000.0
State wants more detail (179+1) than incumbent (179), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0109932769127903 [based on 179 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0107618946049757 [based on 179 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12763.0, 1.0108265556026172 [180, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1351/100000000, 12770.0/25000.0
State wants more detail (180+1) than incumbent (180), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.0110544366441405 [based on 180 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108265556026172 [based on 180 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12775.0, 1.0108766040410124 [181, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1353/100000000, 12781.0/25000.0
State wants more detail (181+1) than incumbent (181), doing incumbent first:
pCross=1.0 pMutac=1.0 popSize=4000 (1.011040230557876 [based on 181 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0108766040410124 [based on 181 runs with cutoff 30.0])
 Same incumbent, new precision:
New Incumbent: 12790.0, 1.010972267166159 [182, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1355/100000000, 12799.0/25000.0
          -> After 22 bonus runs for LM: pCross=1.0 pMutac=1.0 popSize=4000 (1.011126267912647 [based on 182 runs with cutoff 30.0])

   LM for iteration 14: pCross=1.0 pMutac=1.0 popSize=4000 (1.011126267912647 [based on 182 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 14): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 14): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.010972267166159, based on 182 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=1.0 pMutac=1.0 popSize=4000 (1.011126267912647 [based on 182 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.010972267166159 [based on 182 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=1.0 pMutac=1.0 popSize=4000 (1.011126267912647 [based on 182 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=1.0 popSize=3200 (1.010972267166159 [based on 182 runs with cutoff 30.0])
1355/100000000, 12799.0/25000.0
iteration 15, flip 42, evaluation count 1355
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=3200 (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=400 (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=100 (1.0235944519867042 [based on 2 runs with cutoff 30.0])
   BLS in iteration 15, start with pCross=0.7 pMutac=0.6 popSize=100 (1.0246306283564264 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 100->2400"], evaluating ...
1357/100000000, 12811.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.6 popSize=2400 (1.0183251243436005 [based on 3 runs with cutoff 30.0]) with flip 42

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=0.6 popSize=2400 (1.0183251243436005 [based on 3 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs: pCross=0.7 pMutac=0.6 popSize=2400 (1.016701329394484 [based on 4 runs with cutoff 30.0])

    Changing ["pMutac: 0.6->0.2"], evaluating ...
1360/100000000, 12824.0/25000.0
        -> worse: (1.0183620748908568 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2400->50"], evaluating ...
1361/100000000, 12836.0/25000.0
        -> worse: (1.0370684732807238 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->400"], evaluating ...
        -> worse: (1.0186485525532414 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
1364/100000000, 12849.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->2000"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2400->800"], evaluating ...
1366/100000000, 12861.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.5"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.4"], evaluating ...
1368/100000000, 12873.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->1200"], evaluating ...
1370/100000000, 12885.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->1.0"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=2400 (1.0138031917318615 [based on 6 runs with cutoff 30.0]) with flip 43

          
============= Performing 12 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=2400 (1.0138031917318615 [based on 6 runs with cutoff 30.0]) ============ 

1372/100000000, 12901.0/25000.0
1374/100000000, 12913.0/25000.0
1375/100000000, 12924.0/25000.0
1376/100000000, 12939.0/25000.0
1378/100000000, 12954.0/25000.0
1379/100000000, 12966.0/25000.0
1381/100000000, 12989.0/25000.0
1382/100000000, 13007.0/25000.0
          -> After 12 bonus runs: pCross=0.7 pMutac=1.0 popSize=2400 (1.0120346614170712 [based on 18 runs with cutoff 30.0])

    Changing ["pCross: 0.7->0.8"], evaluating ...
1384/100000000, 13024.0/25000.0
        -> worse: (1.0168995891674624 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2400->30"], evaluating ...
        -> worse: (1.0203189733619464 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 2400->1200"], evaluating ...
        -> worse: (1.013216552816261 [based on 9 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
1387/100000000, 13037.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->400"], evaluating ...
1388/100000000, 13057.0/25000.0
1390/100000000, 13094.0/25000.0
1391/100000000, 13119.0/25000.0
1393/100000000, 13130.0/25000.0
1394/100000000, 13145.0/25000.0
1396/100000000, 13166.0/25000.0
1398/100000000, 13178.0/25000.0
1400/100000000, 13198.0/25000.0
1402/100000000, 13219.0/25000.0
1404/100000000, 13247.0/25000.0
1406/100000000, 13266.0/25000.0
1408/100000000, 13277.0/25000.0
1409/100000000, 13293.0/25000.0
1411/100000000, 13309.0/25000.0
1413/100000000, 13331.0/25000.0
1415/100000000, 13354.0/25000.0
1417/100000000, 13366.0/25000.0
1418/100000000, 13385.0/25000.0
1420/100000000, 13416.0/25000.0
1421/100000000, 13446.0/25000.0
1423/100000000, 13462.0/25000.0
1426/100000000, 13487.0/25000.0
        -> worse: (1.0131923361496653 [based on 57 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->3600"], evaluating ...
1428/100000000, 13501.0/25000.0
1430/100000000, 13520.0/25000.0
        -> worse: (1.0124083182722505 [based on 10 runs with cutoff 30.0])
    Changing ["popSize: 2400->2000"], evaluating ...
1432/100000000, 13533.0/25000.0
1433/100000000, 13544.0/25000.0
        -> worse: (1.0122343129635991 [based on 10 runs with cutoff 30.0])
    Changing ["popSize: 2400->1600"], evaluating ...
        -> worse: (1.013008582346736 [based on 9 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
1436/100000000, 13556.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2400->800"], evaluating ...
1438/100000000, 13572.0/25000.0
1440/100000000, 13593.0/25000.0
        -> worse: (1.0126039901117152 [based on 10 runs with cutoff 30.0])
    Changing ["popSize: 2400->100"], evaluating ...
1441/100000000, 13604.0/25000.0
        -> worse: (1.0196766475669872 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 2400->2800"], evaluating ...
1443/100000000, 13619.0/25000.0
1444/100000000, 13638.0/25000.0
1445/100000000, 13656.0/25000.0
1447/100000000, 13685.0/25000.0
1449/100000000, 13715.0/25000.0
1450/100000000, 13739.0/25000.0
        -> worse: (1.010710002287165 [based on 23 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
1452/100000000, 13752.0/25000.0
        -> worse: (1.0110445932495788 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2400->3200"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.010972267166159 [based on 182 runs with cutoff 30.0]) with flip 44

          
============= Performing 16 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.010972267166159 [based on 182 runs with cutoff 30.0]) ============ 

1454/100000000, 13763.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13763.0, 1.0109184850772375 [183, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1455/100000000, 13774.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13774.0, 1.0109191762668424 [184, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1456/100000000, 13788.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13788.0, 1.0109458543430994 [185, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1457/100000000, 13799.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13799.0, 1.0109302399248028 [186, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1458/100000000, 13819.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13819.0, 1.0109463341231066 [187, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 13825.0, 1.010933378294249 [188, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 13828.0, 1.0109381220310367 [189, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1461/100000000, 13837.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13837.0, 1.0109835570942982 [190, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 13840.0, 1.010987988442219 [191, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 13846.0, 1.0109737752541943 [192, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1464/100000000, 13860.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13860.0, 1.0110103596298514 [193, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1465/100000000, 13877.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13877.0, 1.0110353300460604 [194, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1466/100000000, 13888.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13888.0, 1.0110579992791495 [195, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1467/100000000, 13900.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13900.0, 1.0111343352299957 [196, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1468/100000000, 13922.0/25000.0
 Same incumbent, new precision:
New Incumbent: 13922.0, 1.0111515716106656 [197, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 13930.0, 1.011201141879305 [198, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 16 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.011201141879305 [based on 198 runs with cutoff 30.0])

    Changing ["pCross: 0.7->0.6"], evaluating ...
1470/100000000, 13939.0/25000.0
        -> worse: (1.013767145216317 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
1472/100000000, 13955.0/25000.0
1474/100000000, 13972.0/25000.0
1476/100000000, 13992.0/25000.0
1477/100000000, 14009.0/25000.0
1478/100000000, 14025.0/25000.0
1480/100000000, 14043.0/25000.0
1482/100000000, 14067.0/25000.0
        -> worse: (1.0117470474975923 [based on 16 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
1483/100000000, 14089.0/25000.0
        -> worse: (1.0110965740654625 [based on 57 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
1484/100000000, 14108.0/25000.0
        -> worse: (1.0110210370234867 [based on 96 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
        -> worse: (1.0191138188490236 [based on 8 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
1486/100000000, 14126.0/25000.0
        -> worse: (1.0177953869267629 [based on 8 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.016185939027516 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
1488/100000000, 14146.0/25000.0
1490/100000000, 14162.0/25000.0
1492/100000000, 14175.0/25000.0
1493/100000000, 14192.0/25000.0
1494/100000000, 14209.0/25000.0
1495/100000000, 14226.0/25000.0
1497/100000000, 14245.0/25000.0
1499/100000000, 14272.0/25000.0
1500/100000000, 14291.0/25000.0
        -> worse: (1.0115455230269834 [based on 18 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
1502/100000000, 14310.0/25000.0
        -> worse: (1.01813784622443 [based on 7 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
1503/100000000, 14324.0/25000.0
1505/100000000, 14339.0/25000.0
1507/100000000, 14351.0/25000.0
1508/100000000, 14362.0/25000.0
1509/100000000, 14378.0/25000.0
1510/100000000, 14396.0/25000.0
1512/100000000, 14414.0/25000.0
1514/100000000, 14438.0/25000.0
1515/100000000, 14456.0/25000.0
1517/100000000, 14488.0/25000.0
1519/100000000, 14523.0/25000.0
1520/100000000, 14553.0/25000.0
1522/100000000, 14565.0/25000.0
1523/100000000, 14577.0/25000.0
1525/100000000, 14601.0/25000.0
1527/100000000, 14612.0/25000.0
1529/100000000, 14632.0/25000.0
1531/100000000, 14653.0/25000.0
1532/100000000, 14667.0/25000.0
1533/100000000, 14686.0/25000.0
1534/100000000, 14697.0/25000.0
1536/100000000, 14713.0/25000.0
1538/100000000, 14734.0/25000.0
1540/100000000, 14751.0/25000.0
1542/100000000, 14774.0/25000.0
1543/100000000, 14785.0/25000.0
1544/100000000, 14798.0/25000.0
1546/100000000, 14812.0/25000.0
1547/100000000, 14832.0/25000.0
1549/100000000, 14859.0/25000.0
1550/100000000, 14888.0/25000.0
1552/100000000, 14903.0/25000.0
1555/100000000, 14933.0/25000.0
1558/100000000, 14947.0/25000.0
1560/100000000, 14979.0/25000.0
1563/100000000, 15009.0/25000.0
1565/100000000, 15020.0/25000.0
1567/100000000, 15031.0/25000.0
1569/100000000, 15048.0/25000.0
1571/100000000, 15082.0/25000.0
1572/100000000, 15098.0/25000.0
1574/100000000, 15118.0/25000.0
1575/100000000, 15131.0/25000.0
1576/100000000, 15161.0/25000.0
1577/100000000, 15176.0/25000.0
1578/100000000, 15194.0/25000.0
1581/100000000, 15219.0/25000.0
1583/100000000, 15252.0/25000.0
1584/100000000, 15266.0/25000.0
1585/100000000, 15289.0/25000.0
        -> worse: (1.0110977905191356 [based on 88 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
1587/100000000, 15324.0/25000.0
        -> worse: (1.0112688248584716 [based on 22 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0120109065989122 [based on 13 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
1589/100000000, 15336.0/25000.0
1590/100000000, 15347.0/25000.0
1592/100000000, 15360.0/25000.0
1593/100000000, 15372.0/25000.0
1594/100000000, 15389.0/25000.0
        -> worse: (1.011497749104607 [based on 11 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
1596/100000000, 15405.0/25000.0
1598/100000000, 15425.0/25000.0
1600/100000000, 15440.0/25000.0
1601/100000000, 15454.0/25000.0
1603/100000000, 15471.0/25000.0
1604/100000000, 15484.0/25000.0
1606/100000000, 15512.0/25000.0
        -> worse: (1.0115987191309928 [based on 16 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.0163131069995992 [based on 7 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
1608/100000000, 15552.0/25000.0
        -> worse: (1.011025085075431 [based on 21 runs with cutoff 30.0])
          
============= Performing 16 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.011201141879305 [based on 198 runs with cutoff 30.0]) ============ 

1609/100000000, 15573.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15573.0, 1.0112436959010072 [199, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 15580.0, 1.0112300306129915 [200, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1611/100000000, 15597.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15597.0, 1.01131446207894 [201, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 15604.0, 1.0113538375041924 [202, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1613/100000000, 15617.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15617.0, 1.0113979358176977 [203, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1614/100000000, 15632.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15632.0, 1.011396208994888 [204, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 15637.0, 1.0112834211796333 [205, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1616/100000000, 15645.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15645.0, 1.0112341334306716 [206, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1617/100000000, 15656.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15656.0, 1.0113332561214505 [207, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1618/100000000, 15684.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15684.0, 1.0112886403318635 [208, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 15690.0, 1.0112653771212579 [209, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 15693.0, 1.0110926848492519 [210, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1621/100000000, 15704.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15704.0, 1.0110739188699265 [211, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1622/100000000, 15723.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15723.0, 1.011113998422666 [212, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1623/100000000, 15734.0/25000.0
 Same incumbent, new precision:
New Incumbent: 15734.0, 1.0111851391264366 [213, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 15737.0, 1.0110160496912663 [214, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 16 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0])

   LM for iteration 15: pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 15): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 15): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0110160496912663, based on 214 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 15737.0, 1.0110160496912663 [214, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0])
1624/100000000, 15737.0/25000.0
iteration 16, flip 46, evaluation count 1624
    perturb to ---> pCross=0.7 pMutac=0.4 popSize=3200 (1.0112688248584716 [based on 22 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.7 popSize=3200 (1.0110210370234867 [based on 96 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.3 popSize=3200 (1.0117470474975923 [based on 16 runs with cutoff 30.0])
1625/100000000, 15756.0/25000.0
   BLS in iteration 16, start with pCross=0.7 pMutac=0.3 popSize=3200 (1.0122093564089774 [based on 17 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
1627/100000000, 15767.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.9"], evaluating ...
        -> worse: (1.0118608217104226 [based on 12 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
1629/100000000, 15785.0/25000.0
1632/100000000, 15807.0/25000.0
1634/100000000, 15825.0/25000.0
1635/100000000, 15836.0/25000.0
1637/100000000, 15856.0/25000.0
1638/100000000, 15873.0/25000.0
1639/100000000, 15887.0/25000.0
1641/100000000, 15906.0/25000.0
1643/100000000, 15929.0/25000.0
1644/100000000, 15947.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.3 popSize=4000 (1.0114241924940002 [based on 17 runs with cutoff 30.0]) with flip 46

          
============= Performing 4 bonus runs of state: pCross=0.7 pMutac=0.3 popSize=4000 (1.0114241924940002 [based on 17 runs with cutoff 30.0]) ============ 

1646/100000000, 15979.0/25000.0
1648/100000000, 16013.0/25000.0
          -> After 4 bonus runs: pCross=0.7 pMutac=0.3 popSize=4000 (1.0103188723064052 [based on 21 runs with cutoff 30.0])

    Changing ["popSize: 4000->100"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2000"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.2"], evaluating ...
1651/100000000, 16029.0/25000.0
1653/100000000, 16044.0/25000.0
1655/100000000, 16061.0/25000.0
1656/100000000, 16072.0/25000.0
        -> worse: (1.0140185282064549 [based on 8 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.6"], evaluating ...
1658/100000000, 16086.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.9"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
1660/100000000, 16100.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->50"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
1662/100000000, 16112.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.7"], evaluating ...
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.8"], evaluating ...
1664/100000000, 16127.0/25000.0
        -> worse: (1.0171711620913026 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.5"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
1666/100000000, 16139.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->0.1"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.3->1.0"], evaluating ...
1668/100000000, 16175.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=4000 (1.0110965740654625 [based on 57 runs with cutoff 30.0]) with flip 47

          
============= Performing 15 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=4000 (1.0110965740654625 [based on 57 runs with cutoff 30.0]) ============ 

1670/100000000, 16188.0/25000.0
1672/100000000, 16206.0/25000.0
1673/100000000, 16231.0/25000.0
1675/100000000, 16243.0/25000.0
1676/100000000, 16264.0/25000.0
1678/100000000, 16278.0/25000.0
1680/100000000, 16292.0/25000.0
1681/100000000, 16303.0/25000.0
1683/100000000, 16323.0/25000.0
          -> After 15 bonus runs: pCross=0.7 pMutac=1.0 popSize=4000 (1.010576684735919 [based on 72 runs with cutoff 30.0])

    Changing ["popSize: 4000->2400"], evaluating ...
        -> worse: (1.0113364116644303 [based on 59 runs with cutoff 30.0])
    Changing ["popSize: 4000->200"], evaluating ...
1685/100000000, 16341.0/25000.0
        -> worse: (1.0211045490216437 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 4000->2800"], evaluating ...
        -> worse: (1.0103108415624285 [based on 24 runs with cutoff 30.0])
    Changing ["popSize: 4000->3200"], evaluating ...
1687/100000000, 16375.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0]) with flip 48

          
============= Performing 4 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0110160496912663 [based on 214 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 16382.0, 1.011004396615018 [215, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1689/100000000, 16388.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16388.0, 1.0109832032478896 [216, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1690/100000000, 16399.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16399.0, 1.0110629455961375 [217, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1691/100000000, 16412.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16412.0, 1.0111053439885669 [218, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 4 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0111053439885669 [based on 218 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.7"], evaluating ...
        -> worse: (1.0106496861263372 [based on 97 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
1693/100000000, 16435.0/25000.0
        -> worse: (1.0123014714014362 [based on 11 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0128910607299095 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
1695/100000000, 16453.0/25000.0
        -> worse: (1.0179678790629252 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
        -> worse: (1.0134252783039104 [based on 58 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
1697/100000000, 16484.0/25000.0
        -> worse: (1.0117472304222364 [based on 19 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
1698/100000000, 16503.0/25000.0
        -> worse: (1.0120070669001981 [based on 17 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
        -> worse: (1.0147125756150996 [based on 9 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
1700/100000000, 16519.0/25000.0
        -> worse: (1.0126033986379699 [based on 14 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
        -> worse: (1.0142122834213543 [based on 9 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
1702/100000000, 16533.0/25000.0
        -> worse: (1.0129994639310893 [based on 10 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0111512380455991 [based on 89 runs with cutoff 30.0])
    Changing ["popSize: 3200->800"], evaluating ...
1704/100000000, 16556.0/25000.0
        -> worse: (1.013198234210692 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
        -> worse: (1.0152835318772857 [based on 9 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
1706/100000000, 16568.0/25000.0
        -> worse: (1.0128122905085166 [based on 10 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
        -> worse: (1.0130403439349003 [based on 9 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
1708/100000000, 16601.0/25000.0
        -> worse: (1.0106172708396086 [based on 22 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
1709/100000000, 16617.0/25000.0
        -> worse: (1.0122499773766476 [based on 11 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0149067222392423 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
1711/100000000, 16629.0/25000.0
        -> worse: (1.011334446585954 [based on 23 runs with cutoff 30.0])
          
============= Performing 20 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0111053439885669 [based on 218 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 16636.0, 1.0111449003584814 [219, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1713/100000000, 16666.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16666.0, 1.011103574319976 [220, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1714/100000000, 16690.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16690.0, 1.0111416648602607 [221, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1715/100000000, 16713.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16713.0, 1.0111595258364483 [222, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16721.0, 1.0111797188021316 [223, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1717/100000000, 16737.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16737.0, 1.0112152587860528 [224, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16740.0, 1.0112179907227687 [225, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1719/100000000, 16757.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16757.0, 1.0113483889808135 [226, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1720/100000000, 16777.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16777.0, 1.0113800728672746 [227, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16783.0, 1.0113351170428282 [228, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16787.0, 1.011234416561714 [229, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1723/100000000, 16793.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16793.0, 1.0112121797550997 [230, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1724/100000000, 16809.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16809.0, 1.0112322769006377 [231, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16815.0, 1.0112205456997638 [232, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1726/100000000, 16822.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16822.0, 1.0112805499414232 [233, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16831.0, 1.0113387094196282 [234, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1728/100000000, 16843.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16843.0, 1.0113208130527855 [235, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16853.0, 1.0113715873844047 [236, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1730/100000000, 16857.0/25000.0
 Same incumbent, new precision:
New Incumbent: 16857.0, 1.0113507225824254 [237, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 16863.0, 1.0113328880398342 [238, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 20 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0])

   LM for iteration 16: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 16): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 16): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0113328880398342, based on 238 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 16863.0, 1.0113328880398342 [238, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0])
1731/100000000, 16863.0/25000.0
iteration 17, flip 50, evaluation count 1731
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=200 (1.0211045490216437 [based on 8 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=1600 (1.0128122905085166 [based on 10 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=1600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
1732/100000000, 16870.0/25000.0
   BLS in iteration 17, start with pCross=0.7 pMutac=0.6 popSize=1600 (1.0175450250393139 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.3"], evaluating ...
        -> worse: (1.0183620748908568 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.1"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.2"], evaluating ...
1735/100000000, 16884.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 1600->3600"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.6 popSize=3600 (1.0144137517478864 [based on 2 runs with cutoff 30.0]) with flip 50

          
============= Performing 4 bonus runs of state: pCross=0.7 pMutac=0.6 popSize=3600 (1.0144137517478864 [based on 2 runs with cutoff 30.0]) ============ 

1737/100000000, 16896.0/25000.0
1739/100000000, 16909.0/25000.0
          -> After 4 bonus runs: pCross=0.7 pMutac=0.6 popSize=3600 (1.0117884263566523 [based on 6 runs with cutoff 30.0])

    Changing ["pMutac: 0.6->0.1"], evaluating ...
1741/100000000, 16922.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.4"], evaluating ...
1743/100000000, 16935.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->50"], evaluating ...
        -> worse: (1.0336133092191062 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->200"], evaluating ...
1745/100000000, 16946.0/25000.0
        -> worse: (1.0183620748908568 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.8"], evaluating ...
1747/100000000, 16960.0/25000.0
1749/100000000, 16973.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.8 popSize=3600 (1.010799121762772 [based on 6 runs with cutoff 30.0]) with flip 51

          
============= Performing 6 bonus runs of state: pCross=0.7 pMutac=0.8 popSize=3600 (1.010799121762772 [based on 6 runs with cutoff 30.0]) ============ 

1751/100000000, 16990.0/25000.0
1753/100000000, 17003.0/25000.0
1754/100000000, 17016.0/25000.0
1755/100000000, 17031.0/25000.0
1756/100000000, 17045.0/25000.0
          -> After 6 bonus runs: pCross=0.7 pMutac=0.8 popSize=3600 (1.0119797780245814 [based on 12 runs with cutoff 30.0])

    Changing ["pMutac: 0.8->0.2"], evaluating ...
        -> worse: (1.0147456592849677 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->200"], evaluating ...
1758/100000000, 17057.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->1200"], evaluating ...
        -> worse: (1.0186485525532414 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->50"], evaluating ...
        -> worse: (1.0321081537811576 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->4000"], evaluating ...
1761/100000000, 17068.0/25000.0
        -> worse: (1.0158358577052606 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->30"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->1600"], evaluating ...
        -> worse: (1.0158140816608672 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
1764/100000000, 17083.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->100"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->1.0"], evaluating ...
1766/100000000, 17103.0/25000.0
        -> worse: (1.0125975671491827 [based on 12 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.3"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.9"], evaluating ...
1768/100000000, 17115.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->2800"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->2000"], evaluating ...
1771/100000000, 17130.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->400"], evaluating ...
1775/100000000, 17160.0/25000.0
        -> worse: (1.0145916698717048 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3600->3200"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.8 popSize=3200 (1.0106172708396086 [based on 22 runs with cutoff 30.0]) with flip 52

          
============= Performing 18 bonus runs of state: pCross=0.7 pMutac=0.8 popSize=3200 (1.0106172708396086 [based on 22 runs with cutoff 30.0]) ============ 

1777/100000000, 17171.0/25000.0
1779/100000000, 17189.0/25000.0
1781/100000000, 17210.0/25000.0
1783/100000000, 17221.0/25000.0
1785/100000000, 17244.0/25000.0
1787/100000000, 17271.0/25000.0
1788/100000000, 17284.0/25000.0
1789/100000000, 17305.0/25000.0
1790/100000000, 17316.0/25000.0
1791/100000000, 17327.0/25000.0
1793/100000000, 17340.0/25000.0
1794/100000000, 17359.0/25000.0
          -> After 18 bonus runs: pCross=0.7 pMutac=0.8 popSize=3200 (1.0110092030970135 [based on 40 runs with cutoff 30.0])

    Changing ["pMutac: 0.8->0.5"], evaluating ...
1795/100000000, 17377.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.5 popSize=3200 (1.0111512380455991 [based on 89 runs with cutoff 30.0]) with flip 53

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=0.5 popSize=3200 (1.0111512380455991 [based on 89 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs: pCross=0.7 pMutac=0.5 popSize=3200 (1.011217136196086 [based on 90 runs with cutoff 30.0])

    Changing ["popSize: 3200->200"], evaluating ...
1797/100000000, 17388.0/25000.0
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
1799/100000000, 17400.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
        -> worse: (1.020921105267807 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
1802/100000000, 17415.0/25000.0
        -> worse: (1.0321081537811576 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.5->0.6"], evaluating ...
        -> worse: (1.0112163761457988 [based on 20 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
1805/100000000, 17432.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.5->1.0"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0]) with flip 54

          
============= Performing 10 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113328880398342 [based on 238 runs with cutoff 30.0]) ============ 

1807/100000000, 17454.0/25000.0
 Same incumbent, new precision:
New Incumbent: 17454.0, 1.0113462646682114 [239, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1808/100000000, 17470.0/25000.0
 Same incumbent, new precision:
New Incumbent: 17470.0, 1.0113745946460753 [240, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 17473.0, 1.0112236627180833 [241, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1810/100000000, 17492.0/25000.0
 Same incumbent, new precision:
New Incumbent: 17492.0, 1.0112538981250643 [242, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 17497.0, 1.0111593335519886 [243, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1812/100000000, 17512.0/25000.0
 Same incumbent, new precision:
New Incumbent: 17512.0, 1.0111588676930237 [244, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1813/100000000, 17534.0/25000.0
 Same incumbent, new precision:
New Incumbent: 17534.0, 1.0111932020455041 [245, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 17537.0, 1.0111957904296571 [246, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 17543.0, 1.0112309707232705 [247, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1816/100000000, 17563.0/25000.0
 Same incumbent, new precision:
New Incumbent: 17563.0, 1.011249614471864 [248, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 10 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.011249614471864 [based on 248 runs with cutoff 30.0])

    Changing ["popSize: 3200->1600"], evaluating ...
1817/100000000, 17579.0/25000.0
        -> worse: (1.0133875982077842 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
1818/100000000, 17600.0/25000.0
        -> worse: (1.0156069870226947 [based on 10 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
1819/100000000, 17616.0/25000.0
        -> worse: (1.0125503642931266 [based on 12 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
1821/100000000, 17636.0/25000.0
1823/100000000, 17662.0/25000.0
        -> worse: (1.0116750573673092 [based on 10 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
1825/100000000, 17692.0/25000.0
1826/100000000, 17704.0/25000.0
1828/100000000, 17715.0/25000.0
1829/100000000, 17727.0/25000.0
1831/100000000, 17745.0/25000.0
1832/100000000, 17758.0/25000.0
1835/100000000, 17785.0/25000.0
1838/100000000, 17805.0/25000.0
1840/100000000, 17822.0/25000.0
1842/100000000, 17835.0/25000.0
1844/100000000, 17859.0/25000.0
1845/100000000, 17876.0/25000.0
1846/100000000, 17887.0/25000.0
1847/100000000, 17903.0/25000.0
1848/100000000, 17925.0/25000.0
1850/100000000, 17961.0/25000.0
1852/100000000, 17972.0/25000.0
1853/100000000, 17983.0/25000.0
1854/100000000, 18013.0/25000.0
1855/100000000, 18035.0/25000.0
1857/100000000, 18048.0/25000.0
1858/100000000, 18066.0/25000.0
1861/100000000, 18087.0/25000.0
1864/100000000, 18116.0/25000.0
1866/100000000, 18133.0/25000.0
1868/100000000, 18148.0/25000.0
1870/100000000, 18164.0/25000.0
1871/100000000, 18178.0/25000.0
1874/100000000, 18194.0/25000.0
1876/100000000, 18220.0/25000.0
1878/100000000, 18246.0/25000.0
1881/100000000, 18262.0/25000.0
1882/100000000, 18276.0/25000.0
1883/100000000, 18294.0/25000.0
1884/100000000, 18306.0/25000.0
1885/100000000, 18322.0/25000.0
1886/100000000, 18352.0/25000.0
1889/100000000, 18370.0/25000.0
1892/100000000, 18391.0/25000.0
1893/100000000, 18410.0/25000.0
1895/100000000, 18422.0/25000.0
1897/100000000, 18433.0/25000.0
1898/100000000, 18448.0/25000.0
1899/100000000, 18459.0/25000.0
        -> worse: (1.0107347745800148 [based on 174 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
1901/100000000, 18489.0/25000.0
        -> worse: (1.0148887924439143 [based on 10 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
        -> worse: (1.0109092673487678 [based on 24 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
1903/100000000, 18509.0/25000.0
        -> worse: (1.01076341878218 [based on 74 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
        -> worse: (1.0119273401202327 [based on 18 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
1905/100000000, 18524.0/25000.0
        -> worse: (1.0115837628358888 [based on 13 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0117362889174968 [based on 18 runs with cutoff 30.0])
    Changing ["popSize: 3200->200"], evaluating ...
        -> worse: (1.0159818213525722 [based on 9 runs with cutoff 30.0])
    Changing ["popSize: 3200->800"], evaluating ...
1908/100000000, 18540.0/25000.0
        -> worse: (1.0141993127004985 [based on 12 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0163328858966947 [based on 7 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
1910/100000000, 18563.0/25000.0
        -> worse: (1.0128408759378644 [based on 10 runs with cutoff 30.0])
    Changing ["popSize: 3200->100"], evaluating ...
1911/100000000, 18580.0/25000.0
        -> worse: (1.015093126386727 [based on 10 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
1912/100000000, 18592.0/25000.0
        -> worse: (1.0135577558646685 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
        -> worse: (1.0129989974321096 [based on 59 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.2"], evaluating ...
        -> worse: (1.0131936702781557 [based on 9 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
1915/100000000, 18607.0/25000.0
        -> worse: (1.0107106397057601 [based on 25 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
        -> worse: (1.011166307218248 [based on 60 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
1917/100000000, 18618.0/25000.0
        -> worse: (1.0109814858532835 [based on 15 runs with cutoff 30.0])
          
============= Performing 22 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.011249614471864 [based on 248 runs with cutoff 30.0]) ============ 

1918/100000000, 18647.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18647.0, 1.0112126809675084 [249, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1919/100000000, 18668.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18668.0, 1.0113027965632955 [250, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 18676.0, 1.011262268070587 [251, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1921/100000000, 18688.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18688.0, 1.01129815508279 [252, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1922/100000000, 18701.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18701.0, 1.011333758403197 [253, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 18708.0, 1.0112935866964656 [254, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1924/100000000, 18713.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18713.0, 1.0112745005890886 [255, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1925/100000000, 18725.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18725.0, 1.011273606696024 [256, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1926/100000000, 18736.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18736.0, 1.011367494903649 [257, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1927/100000000, 18747.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18747.0, 1.011402907939274 [258, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 18750.0, 1.0112623561711687 [259, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1929/100000000, 18766.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18766.0, 1.0112800187257964 [260, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1930/100000000, 18786.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18786.0, 1.0113561590677478 [261, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1931/100000000, 18807.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18807.0, 1.011379848796044 [262, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 18814.0, 1.011363598806119 [263, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1933/100000000, 18820.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18820.0, 1.0113935408484438 [264, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 18830.0, 1.0113940246155457 [265, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1935/100000000, 18838.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18838.0, 1.0114354037492483 [266, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1936/100000000, 18861.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18861.0, 1.011437823300423 [267, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1937/100000000, 18872.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18872.0, 1.0114528158645948 [268, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1938/100000000, 18902.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18902.0, 1.0114178729501813 [269, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1939/100000000, 18918.0/25000.0
 Same incumbent, new precision:
New Incumbent: 18918.0, 1.011443552975811 [270, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 22 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0])

   LM for iteration 17: pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 17): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 17): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.011443552975811, based on 270 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 18918.0, 1.011443552975811 [270, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0])
1939/100000000, 18918.0/25000.0
iteration 18, flip 56, evaluation count 1939
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=100 (1.015093126386727 [based on 10 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=800 (1.0141993127004985 [based on 12 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=1.0 popSize=100 (1.015093126386727 [based on 10 runs with cutoff 30.0])
1940/100000000, 18943.0/25000.0
   BLS in iteration 18, start with pCross=0.7 pMutac=1.0 popSize=100 (1.0150748346476415 [based on 11 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
        -> worse: (1.0214304574041035 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 100->800"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=800 (1.0141993127004985 [based on 12 runs with cutoff 30.0]) with flip 56

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=800 (1.0141993127004985 [based on 12 runs with cutoff 30.0]) ============ 

1943/100000000, 18957.0/25000.0
1944/100000000, 18986.0/25000.0
          -> After 2 bonus runs: pCross=0.7 pMutac=1.0 popSize=800 (1.0149910650252154 [based on 14 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.4"], evaluating ...
1945/100000000, 18999.0/25000.0
        -> worse: (1.0169709051884608 [based on 8 runs with cutoff 30.0])
    Changing ["popSize: 800->200"], evaluating ...
1946/100000000, 19026.0/25000.0
        -> worse: (1.0161624972256984 [based on 10 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
1949/100000000, 19038.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 800->3200"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0]) with flip 57

          
============= Performing 6 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.011443552975811 [based on 270 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 19045.0, 1.011444978774967 [271, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1952/100000000, 19050.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19050.0, 1.0113597939517784 [272, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19057.0, 1.0113493574841819 [273, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1954/100000000, 19071.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19071.0, 1.0113933416926897 [274, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1955/100000000, 19092.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19092.0, 1.0114039772072458 [275, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
1956/100000000, 19103.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19103.0, 1.0113885028811747 [276, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 6 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113885028811747 [based on 276 runs with cutoff 30.0])

    Changing ["pMutac: 1.0->0.2"], evaluating ...
1957/100000000, 19122.0/25000.0
        -> worse: (1.013384983407732 [based on 10 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
1958/100000000, 19138.0/25000.0
        -> worse: (1.0117415631982023 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 3200->1200"], evaluating ...
        -> worse: (1.0143806350235562 [based on 12 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.3"], evaluating ...
1960/100000000, 19166.0/25000.0
        -> worse: (1.0122436921999167 [based on 19 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
1961/100000000, 19183.0/25000.0
        -> worse: (1.012403991732095 [based on 16 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.7"], evaluating ...
1962/100000000, 19204.0/25000.0
        -> worse: (1.0107824568180992 [based on 175 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.8"], evaluating ...
1964/100000000, 19221.0/25000.0
1965/100000000, 19241.0/25000.0
1966/100000000, 19253.0/25000.0
1967/100000000, 19268.0/25000.0
1969/100000000, 19283.0/25000.0
1970/100000000, 19296.0/25000.0
1971/100000000, 19310.0/25000.0
1972/100000000, 19323.0/25000.0
1973/100000000, 19353.0/25000.0
1975/100000000, 19369.0/25000.0
1978/100000000, 19398.0/25000.0
1981/100000000, 19413.0/25000.0
1983/100000000, 19443.0/25000.0
1986/100000000, 19471.0/25000.0
1988/100000000, 19482.0/25000.0
1990/100000000, 19494.0/25000.0
        -> worse: (1.0106839443264912 [based on 70 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
1992/100000000, 19513.0/25000.0
        -> worse: (1.0183601559044122 [based on 8 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.6"], evaluating ...
1993/100000000, 19538.0/25000.0
        -> worse: (1.0107800330858723 [based on 21 runs with cutoff 30.0])
    Changing ["popSize: 3200->2800"], evaluating ...
        -> worse: (1.0107536898919667 [based on 26 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.5"], evaluating ...
        -> worse: (1.0111916441145257 [based on 92 runs with cutoff 30.0])
    Changing ["popSize: 3200->1600"], evaluating ...
1996/100000000, 19555.0/25000.0
        -> worse: (1.0135931833883352 [based on 12 runs with cutoff 30.0])
    Changing ["popSize: 3200->50"], evaluating ...
1997/100000000, 19579.0/25000.0
        -> worse: (1.0144606358394104 [based on 11 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.1"], evaluating ...
1998/100000000, 19599.0/25000.0
        -> worse: (1.0120089505072285 [based on 19 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
1999/100000000, 19615.0/25000.0
        -> worse: (1.0131484310892669 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 3200->400"], evaluating ...
        -> worse: (1.0128266350534252 [based on 60 runs with cutoff 30.0])
    Changing ["popSize: 3200->3600"], evaluating ...
2001/100000000, 19628.0/25000.0
        -> worse: (1.0122638355485905 [based on 13 runs with cutoff 30.0])
    Changing ["popSize: 3200->4000"], evaluating ...
        -> worse: (1.0107055949226218 [based on 75 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.4"], evaluating ...
2003/100000000, 19644.0/25000.0
        -> worse: (1.0112851284606459 [based on 25 runs with cutoff 30.0])
    Changing ["pMutac: 1.0->0.9"], evaluating ...
2004/100000000, 19655.0/25000.0
        -> worse: (1.0122067651437339 [based on 14 runs with cutoff 30.0])
    Changing ["popSize: 3200->30"], evaluating ...
2005/100000000, 19677.0/25000.0
        -> worse: (1.0165022014723657 [based on 11 runs with cutoff 30.0])
    Changing ["popSize: 3200->2000"], evaluating ...
        -> worse: (1.0121315748433264 [based on 13 runs with cutoff 30.0])
    Changing ["popSize: 3200->2400"], evaluating ...
2007/100000000, 19693.0/25000.0
        -> worse: (1.0113654181473732 [based on 61 runs with cutoff 30.0])
          
============= Performing 23 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113885028811747 [based on 276 runs with cutoff 30.0]) ============ 

2008/100000000, 19708.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19708.0, 1.0114059594866696 [277, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19714.0, 1.0113946396911835 [278, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2010/100000000, 19744.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19744.0, 1.0113611577277286 [279, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19753.0, 1.011403809147683 [280, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2012/100000000, 19760.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19760.0, 1.0113672480649276 [281, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19766.0, 1.0113360697009408 [282, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2014/100000000, 19777.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19777.0, 1.011352462880824 [283, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19782.0, 1.0112712031765523 [284, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2016/100000000, 19789.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19789.0, 1.0113004813213007 [285, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19794.0, 1.0112834398807204 [286, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2018/100000000, 19812.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19812.0, 1.0113046826097336 [287, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2019/100000000, 19824.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19824.0, 1.0113366248857236 [288, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19827.0, 1.0112108926196832 [289, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2021/100000000, 19838.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19838.0, 1.0112422543525315 [290, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19843.0, 1.0112713845003485 [291, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2023/100000000, 19853.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19853.0, 1.0112870805136158 [292, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19862.0, 1.0113219874704988 [293, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2025/100000000, 19865.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19865.0, 1.0113237152156573 [294, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2026/100000000, 19878.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19878.0, 1.011339483433936 [295, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2027/100000000, 19889.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19889.0, 1.0113252725548065 [296, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
 Same incumbent, new precision:
New Incumbent: 19896.0, 1.0112909455256438 [297, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2029/100000000, 19907.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19907.0, 1.0113211966988653 [298, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
2030/100000000, 19925.0/25000.0
 Same incumbent, new precision:
New Incumbent: 19925.0, 1.0113519086098888 [299, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
          -> After 23 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0])

   LM for iteration 18: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 18): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 18): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0113519086098888, based on 299 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 19925.0, 1.0113519086098888 [299, 30.0]. With state pCross=0.7, pMutac=1.0, popSize=3200
same state as last ILS: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0])
2030/100000000, 19925.0/25000.0
iteration 19, flip 59, evaluation count 2030
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=3200 (1.0107800330858723 [based on 21 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=800 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.8 popSize=800 (1.0162376088159821 [based on 3 runs with cutoff 30.0])
   BLS in iteration 19, start with pCross=0.7 pMutac=0.8 popSize=800 (1.0161685555355202 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 800->2800"], evaluating ...
2033/100000000, 19939.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.8 popSize=2800 (1.0138059921010085 [based on 4 runs with cutoff 30.0]) with flip 59

          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=0.8 popSize=2800 (1.0138059921010085 [based on 4 runs with cutoff 30.0]) ============ 

2035/100000000, 19951.0/25000.0
          -> After 1 bonus runs: pCross=0.7 pMutac=0.8 popSize=2800 (1.011380223450199 [based on 5 runs with cutoff 30.0])

    Changing ["pMutac: 0.8->0.3"], evaluating ...
        -> worse: (1.0175450250393139 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
2037/100000000, 19963.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2800->1200"], evaluating ...
        -> worse: (1.0169439005517147 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
2040/100000000, 19975.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 2800->2400"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2800->4000"], evaluating ...
2042/100000000, 19994.0/25000.0
        -> worse: (1.0130041159336005 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 2800->100"], evaluating ...
        -> worse: (1.020921105267807 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.7"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.9"], evaluating ...
2045/100000000, 20010.0/25000.0
        -> worse: (1.011754350452363 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.2"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2800->400"], evaluating ...
2047/100000000, 20022.0/25000.0
        -> worse: (1.0125888831298602 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.1"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.4"], evaluating ...
2050/100000000, 20038.0/25000.0
        -> worse: (1.0147456592849677 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 2800->200"], evaluating ...
        -> worse: (1.020921105267807 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 2800->3600"], evaluating ...
2052/100000000, 20052.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.8 popSize=3600 (1.0116935686643431 [based on 13 runs with cutoff 30.0]) with flip 60

          
============= Performing 17 bonus runs of state: pCross=0.7 pMutac=0.8 popSize=3600 (1.0116935686643431 [based on 13 runs with cutoff 30.0]) ============ 

2053/100000000, 20063.0/25000.0
2055/100000000, 20085.0/25000.0
2056/100000000, 20102.0/25000.0
2057/100000000, 20113.0/25000.0
2058/100000000, 20137.0/25000.0
2060/100000000, 20173.0/25000.0
2061/100000000, 20203.0/25000.0
2063/100000000, 20216.0/25000.0
2064/100000000, 20230.0/25000.0
2066/100000000, 20252.0/25000.0
2068/100000000, 20263.0/25000.0
          -> After 17 bonus runs: pCross=0.7 pMutac=0.8 popSize=3600 (1.0110810323409436 [based on 30 runs with cutoff 30.0])

    Changing ["pMutac: 0.8->0.2"], evaluating ...
2070/100000000, 20275.0/25000.0
        -> worse: (1.0164588805073695 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.4"], evaluating ...
        -> worse: (1.014293692899998 [based on 3 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
2072/100000000, 20287.0/25000.0
2075/100000000, 20306.0/25000.0
2077/100000000, 20321.0/25000.0
2079/100000000, 20333.0/25000.0
2080/100000000, 20346.0/25000.0
2081/100000000, 20362.0/25000.0
2082/100000000, 20378.0/25000.0
2084/100000000, 20396.0/25000.0
2086/100000000, 20415.0/25000.0
2087/100000000, 20434.0/25000.0
2089/100000000, 20464.0/25000.0
2091/100000000, 20497.0/25000.0
2092/100000000, 20527.0/25000.0
        -> worse: (1.010843633510636 [based on 23 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.7"], evaluating ...
2094/100000000, 20540.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.8->0.6"], evaluating ...
2096/100000000, 20558.0/25000.0
2098/100000000, 20572.0/25000.0
2099/100000000, 20587.0/25000.0
2100/100000000, 20603.0/25000.0
2102/100000000, 20621.0/25000.0
2104/100000000, 20643.0/25000.0
2105/100000000, 20659.0/25000.0
2107/100000000, 20688.0/25000.0
2109/100000000, 20718.0/25000.0
2110/100000000, 20745.0/25000.0
2112/100000000, 20756.0/25000.0
2113/100000000, 20767.0/25000.0
2115/100000000, 20788.0/25000.0
2117/100000000, 20799.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.6 popSize=3600 (1.0109527504588074 [based on 30 runs with cutoff 30.0]) with flip 61

          
============= Performing 5 bonus runs of state: pCross=0.7 pMutac=0.6 popSize=3600 (1.0109527504588074 [based on 30 runs with cutoff 30.0]) ============ 

2119/100000000, 20820.0/25000.0
2121/100000000, 20842.0/25000.0
2122/100000000, 20854.0/25000.0
2123/100000000, 20872.0/25000.0
          -> After 5 bonus runs: pCross=0.7 pMutac=0.6 popSize=3600 (1.0103254574396276 [based on 35 runs with cutoff 30.0])

    Changing ["pMutac: 0.6->0.1"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->3200"], evaluating ...
2125/100000000, 20907.0/25000.0
        -> worse: (1.0103833575768482 [based on 22 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->800"], evaluating ...
2127/100000000, 20918.0/25000.0
        -> worse: (1.0162640558650093 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->2000"], evaluating ...
        -> worse: (1.0186485525532414 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->400"], evaluating ...
2130/100000000, 20929.0/25000.0
        -> worse: (1.0169439005517147 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->1200"], evaluating ...
        -> worse: (1.0186485525532414 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->1.0"], evaluating ...
2132/100000000, 20943.0/25000.0
        -> worse: (1.0128382612340998 [based on 14 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->1600"], evaluating ...
        -> worse: (1.0183251243436005 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->30"], evaluating ...
2135/100000000, 20959.0/25000.0
        -> worse: (1.0168691504022798 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->50"], evaluating ...
        -> worse: (1.0319642033026974 [based on 4 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->200"], evaluating ...
2138/100000000, 20973.0/25000.0
        -> worse: (1.0211423769591947 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.3"], evaluating ...
2140/100000000, 20985.0/25000.0
2142/100000000, 20997.0/25000.0
        -> worse: (1.0150285554170417 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3600->100"], evaluating ...
2143/100000000, 21018.0/25000.0
        -> worse: (1.0218823678821467 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.9"], evaluating ...
2146/100000000, 21035.0/25000.0
        -> worse: (1.0160859608235355 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.5"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->4000"], evaluating ...
2148/100000000, 21046.0/25000.0
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->2800"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
2150/100000000, 21059.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 3600->2400"], evaluating ...
        -> worse: (1.01597000232844 [based on 6 runs with cutoff 30.0])
          
============= Performing 22 bonus runs of state: pCross=0.7 pMutac=0.6 popSize=3600 (1.0103254574396276 [based on 35 runs with cutoff 30.0]) ============ 

2152/100000000, 21075.0/25000.0
2154/100000000, 21091.0/25000.0
2156/100000000, 21110.0/25000.0
2157/100000000, 21121.0/25000.0
2159/100000000, 21135.0/25000.0
2160/100000000, 21151.0/25000.0
2161/100000000, 21162.0/25000.0
2162/100000000, 21176.0/25000.0
2164/100000000, 21187.0/25000.0
2165/100000000, 21205.0/25000.0
2167/100000000, 21229.0/25000.0
2168/100000000, 21258.0/25000.0
2170/100000000, 21273.0/25000.0
2173/100000000, 21299.0/25000.0
          -> After 22 bonus runs for LM: pCross=0.7 pMutac=0.6 popSize=3600 (1.0104712718591897 [based on 57 runs with cutoff 30.0])

   LM for iteration 19: pCross=0.7 pMutac=0.6 popSize=3600 (1.0104712718591897 [based on 57 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 19): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 19): pCross=0.7, pMutac=1.0, popSize=3200
==================================================================
Training quality of this incumbent parameter configuration: 1.0113519086098888, based on 299 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=0.6 popSize=3600 (1.0104712718591897 [based on 57 runs with cutoff 30.0])
pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0])
2176/100000000, 21313.0/25000.0
2178/100000000, 21342.0/25000.0
2181/100000000, 21369.0/25000.0
2184/100000000, 21383.0/25000.0
2186/100000000, 21398.0/25000.0
2188/100000000, 21415.0/25000.0
2189/100000000, 21435.0/25000.0
2190/100000000, 21447.0/25000.0
2192/100000000, 21467.0/25000.0
2193/100000000, 21478.0/25000.0
2194/100000000, 21502.0/25000.0
2195/100000000, 21517.0/25000.0
2196/100000000, 21534.0/25000.0
2199/100000000, 21558.0/25000.0
2201/100000000, 21590.0/25000.0
2202/100000000, 21603.0/25000.0
2203/100000000, 21623.0/25000.0
2205/100000000, 21638.0/25000.0
2208/100000000, 21653.0/25000.0
2210/100000000, 21666.0/25000.0
2212/100000000, 21694.0/25000.0
2214/100000000, 21705.0/25000.0
2215/100000000, 21724.0/25000.0
2216/100000000, 21736.0/25000.0
2219/100000000, 21757.0/25000.0
2221/100000000, 21776.0/25000.0
2222/100000000, 21789.0/25000.0
2225/100000000, 21814.0/25000.0
2228/100000000, 21831.0/25000.0
2230/100000000, 21846.0/25000.0
2232/100000000, 21858.0/25000.0
2234/100000000, 21878.0/25000.0
2235/100000000, 21893.0/25000.0
2237/100000000, 21916.0/25000.0
2238/100000000, 21935.0/25000.0
2240/100000000, 21966.0/25000.0
2242/100000000, 21977.0/25000.0
2243/100000000, 21988.0/25000.0
2244/100000000, 22016.0/25000.0
2245/100000000, 22034.0/25000.0
2246/100000000, 22047.0/25000.0
2248/100000000, 22071.0/25000.0
2251/100000000, 22091.0/25000.0
2254/100000000, 22115.0/25000.0
2256/100000000, 22132.0/25000.0
2258/100000000, 22148.0/25000.0
2260/100000000, 22163.0/25000.0
2261/100000000, 22176.0/25000.0
2264/100000000, 22192.0/25000.0
2266/100000000, 22217.0/25000.0
2268/100000000, 22239.0/25000.0
2271/100000000, 22253.0/25000.0
2272/100000000, 22267.0/25000.0
2273/100000000, 22287.0/25000.0
2275/100000000, 22307.0/25000.0
2276/100000000, 22336.0/25000.0
2279/100000000, 22357.0/25000.0
2282/100000000, 22374.0/25000.0
2284/100000000, 22393.0/25000.0
2287/100000000, 22409.0/25000.0
2288/100000000, 22425.0/25000.0
2289/100000000, 22436.0/25000.0
2291/100000000, 22465.0/25000.0
2292/100000000, 22494.0/25000.0
2294/100000000, 22505.0/25000.0
2295/100000000, 22523.0/25000.0
2297/100000000, 22535.0/25000.0
2299/100000000, 22549.0/25000.0
2300/100000000, 22561.0/25000.0
2301/100000000, 22577.0/25000.0
2303/100000000, 22605.0/25000.0
2306/100000000, 22624.0/25000.0
2309/100000000, 22648.0/25000.0
2310/100000000, 22664.0/25000.0
2312/100000000, 22683.0/25000.0
2313/100000000, 22703.0/25000.0
2315/100000000, 22727.0/25000.0
2317/100000000, 22751.0/25000.0
2319/100000000, 22766.0/25000.0
2320/100000000, 22779.0/25000.0
2323/100000000, 22796.0/25000.0
2324/100000000, 22821.0/25000.0
2327/100000000, 22838.0/25000.0
2329/100000000, 22856.0/25000.0
2332/100000000, 22869.0/25000.0
2334/100000000, 22889.0/25000.0
2336/100000000, 22919.0/25000.0
2337/100000000, 22939.0/25000.0
2338/100000000, 22950.0/25000.0
2340/100000000, 22971.0/25000.0
2342/100000000, 22989.0/25000.0
2343/100000000, 23007.0/25000.0
2346/100000000, 23023.0/25000.0
2347/100000000, 23037.0/25000.0
2349/100000000, 23049.0/25000.0
2351/100000000, 23069.0/25000.0
2353/100000000, 23081.0/25000.0
2355/100000000, 23106.0/25000.0
2356/100000000, 23119.0/25000.0
2358/100000000, 23138.0/25000.0
2360/100000000, 23152.0/25000.0
2361/100000000, 23165.0/25000.0
2364/100000000, 23183.0/25000.0
2365/100000000, 23212.0/25000.0
2366/100000000, 23230.0/25000.0
2368/100000000, 23245.0/25000.0
2370/100000000, 23261.0/25000.0
2372/100000000, 23276.0/25000.0
2374/100000000, 23294.0/25000.0
2376/100000000, 23312.0/25000.0
2377/100000000, 23331.0/25000.0
2378/100000000, 23349.0/25000.0
2380/100000000, 23361.0/25000.0
2382/100000000, 23377.0/25000.0
2383/100000000, 23397.0/25000.0
2384/100000000, 23408.0/25000.0
2385/100000000, 23432.0/25000.0
2386/100000000, 23447.0/25000.0
2389/100000000, 23459.0/25000.0
2390/100000000, 23470.0/25000.0
2391/100000000, 23490.0/25000.0
2393/100000000, 23514.0/25000.0
2395/100000000, 23550.0/25000.0
2397/100000000, 23565.0/25000.0
2399/100000000, 23586.0/25000.0
2401/100000000, 23597.0/25000.0
2403/100000000, 23619.0/25000.0
2405/100000000, 23632.0/25000.0
2406/100000000, 23643.0/25000.0
2408/100000000, 23663.0/25000.0
2410/100000000, 23674.0/25000.0
2411/100000000, 23685.0/25000.0
2412/100000000, 23696.0/25000.0
2414/100000000, 23715.0/25000.0
New inc: 1.010826668340742
New Incumbent: 23723.0, 1.010826668340742 [299, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
LM better, change incumbent
New Incumbent: 23723.0, 1.010826668340742 [299, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
   Accepting new better local optimum: pCross=0.7 pMutac=0.6 popSize=3600 (1.010826668340742 [based on 299 runs with cutoff 30.0])
2415/100000000, 23723.0/25000.0
iteration 20, flip 63, evaluation count 2415
    perturb to ---> pCross=0.7 pMutac=0.3 popSize=3600 (1.0150285554170417 [based on 5 runs with cutoff 30.0])
    perturb to ---> pCross=0.6 pMutac=0.3 popSize=3600 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> pCross=0.6 pMutac=0.6 popSize=3600 (1.0064266293153168 [based on 1 runs with cutoff 30.0])
2416/100000000, 23730.0/25000.0
   BLS in iteration 20, start with pCross=0.6 pMutac=0.6 popSize=3600 (1.011754350452363 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.6->0.8"], evaluating ...
2418/100000000, 23741.0/25000.0
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->1600"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->400"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.7"], evaluating ...
2421/100000000, 23755.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->2400"], evaluating ...
        -> worse: (1.0070904443894797 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->3200"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 3600->800"], evaluating ...
2424/100000000, 23770.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.3"], evaluating ...
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["pCross: 0.6->0.7"], evaluating ...
2427/100000000, 23786.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.6 popSize=3600 (1.010826668340742 [based on 299 runs with cutoff 30.0]) with flip 63

          
============= Performing 10 bonus runs of state: pCross=0.7 pMutac=0.6 popSize=3600 (1.010826668340742 [based on 299 runs with cutoff 30.0]) ============ 

2428/100000000, 23800.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23800.0, 1.0108506946454598 [300, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 23803.0, 1.0108539479673921 [301, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2430/100000000, 23812.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23812.0, 1.0109116742748434 [302, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 23818.0, 1.010902919760212 [303, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2432/100000000, 23825.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23825.0, 1.0109407419786995 [304, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 23830.0, 1.0109700684736944 [305, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2434/100000000, 23850.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23850.0, 1.0109850473399415 [306, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2435/100000000, 23876.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23876.0, 1.0109559532830925 [307, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2436/100000000, 23894.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23894.0, 1.0110291106719258 [308, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2437/100000000, 23912.0/25000.0
 Same incumbent, new precision:
New Incumbent: 23912.0, 1.0110496640455038 [309, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
          -> After 10 bonus runs: pCross=0.7 pMutac=0.6 popSize=3600 (1.0110496640455038 [based on 309 runs with cutoff 30.0])

    Changing ["popSize: 3600->2400"], evaluating ...
        -> worse: (1.016890381504234 [based on 7 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.1"], evaluating ...
2439/100000000, 23925.0/25000.0
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->800"], evaluating ...
        -> worse: (1.0151555280355409 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->2800"], evaluating ...
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->400"], evaluating ...
2442/100000000, 23952.0/25000.0
        -> worse: (1.0182931224002356 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 3600->30"], evaluating ...
        -> worse: (1.018380822097461 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 3600->2000"], evaluating ...
        -> worse: (1.0169439005517147 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->100"], evaluating ...
2445/100000000, 23967.0/25000.0
        -> worse: (1.0197782307183043 [based on 6 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.3"], evaluating ...
        -> worse: (1.0139422358971804 [based on 6 runs with cutoff 30.0])
    Changing ["pCross: 0.7->1.0"], evaluating ...
2447/100000000, 23979.0/25000.0
        -> worse: (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.8"], evaluating ...
2448/100000000, 23993.0/25000.0
        -> worse: (1.0112469339623098 [based on 31 runs with cutoff 30.0])
    Changing ["popSize: 3600->4000"], evaluating ...
        -> worse: (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->1.0"], evaluating ...
        -> worse: (1.0112006909430045 [based on 15 runs with cutoff 30.0])
    Changing ["popSize: 3600->1600"], evaluating ...
2451/100000000, 24004.0/25000.0
        -> worse: (1.016701329394484 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->50"], evaluating ...
2452/100000000, 24027.0/25000.0
        -> worse: (1.0303093646010217 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.7"], evaluating ...
2455/100000000, 24045.0/25000.0
        -> worse: (1.0160859608235355 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.2"], evaluating ...
        -> worse: (1.015301646517311 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->1200"], evaluating ...
        -> worse: (1.0169439005517147 [based on 4 runs with cutoff 30.0])
    Changing ["popSize: 3600->200"], evaluating ...
        -> worse: (1.0188142688561799 [based on 4 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.5"], evaluating ...
2459/100000000, 24062.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.4"], evaluating ...
2461/100000000, 24074.0/25000.0
        -> worse: (1.0150430162683919 [based on 5 runs with cutoff 30.0])
    Changing ["pMutac: 0.6->0.9"], evaluating ...
        -> worse: (1.0148234070692583 [based on 6 runs with cutoff 30.0])
    Changing ["popSize: 3600->3200"], evaluating ...
2463/100000000, 24086.0/25000.0
        -> worse: (1.01051838191433 [based on 23 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
2465/100000000, 24100.0/25000.0
2467/100000000, 24114.0/25000.0
2469/100000000, 24131.0/25000.0
        -> worse: (1.0131894748661296 [based on 7 runs with cutoff 30.0])
          
============= Performing 24 bonus runs of state: pCross=0.7 pMutac=0.6 popSize=3600 (1.0110496640455038 [based on 309 runs with cutoff 30.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 24135.0, 1.0109761964417043 [310, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2471/100000000, 24151.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24151.0, 1.0109918826922917 [311, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24158.0, 1.0109839299858994 [312, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24161.0, 1.0108689653533567 [313, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2474/100000000, 24171.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24171.0, 1.0109085659583297 [314, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24177.0, 1.0108943375880346 [315, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24180.0, 1.0108972983695506 [316, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2477/100000000, 24186.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24186.0, 1.0108897694734256 [317, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2478/100000000, 24201.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24201.0, 1.0109053822121077 [318, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24206.0, 1.0109194316700214 [319, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2480/100000000, 24226.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24226.0, 1.010943247918576 [320, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24236.0, 1.0109923313491294 [321, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2482/100000000, 24244.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24244.0, 1.0110277616063694 [322, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2483/100000000, 24274.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24274.0, 1.0109999764988802 [323, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24277.0, 1.0108888654603034 [324, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2485/100000000, 24298.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24298.0, 1.0108804141219694 [325, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24304.0, 1.0108667522053845 [326, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2487/100000000, 24314.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24314.0, 1.0109047852424167 [327, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2488/100000000, 24330.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24330.0, 1.0109298946630205 [328, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2489/100000000, 24342.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24342.0, 1.0109583928407795 [329, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24350.0, 1.0109502130332058 [330, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2491/100000000, 24362.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24362.0, 1.0110255851387566 [331, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
 Same incumbent, new precision:
New Incumbent: 24367.0, 1.0109570583969762 [332, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
2493/100000000, 24378.0/25000.0
 Same incumbent, new precision:
New Incumbent: 24378.0, 1.0109455749279512 [333, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
          -> After 24 bonus runs for LM: pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])

   LM for iteration 20: pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 20): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 20): pCross=0.7, pMutac=0.6, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0109455749279512, based on 333 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])
pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])
LM better, change incumbent
New Incumbent: 24378.0, 1.0109455749279512 [333, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600
same state as last ILS: pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])
2493/100000000, 24378.0/25000.0
iteration 21, flip 65, evaluation count 2493
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=30 (1.018380822097461 [based on 3 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.6 popSize=4000 (1.0151356927487702 [based on 4 runs with cutoff 30.0])
    perturb to ---> pCross=0.7 pMutac=0.9 popSize=4000 (1.0144137517478864 [based on 2 runs with cutoff 30.0])
   BLS in iteration 21, start with pCross=0.7 pMutac=0.9 popSize=4000 (1.0162376088159821 [based on 3 runs with cutoff 30.0])
    Changing ["popSize: 4000->100"], evaluating ...
2495/100000000, 24391.0/25000.0
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 4000->30"], evaluating ...
        -> worse: (1.0189697913298623 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.6"], evaluating ...
2497/100000000, 24403.0/25000.0
        -> worse: (1.0064266293153168 [based on 1 runs with cutoff 30.0])
    Changing ["popSize: 4000->800"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.9 popSize=800 (1.0144646746189665 [based on 3 runs with cutoff 30.0]) with flip 65

          
============= Performing 4 bonus runs of state: pCross=0.7 pMutac=0.9 popSize=800 (1.0144646746189665 [based on 3 runs with cutoff 30.0]) ============ 

2500/100000000, 24415.0/25000.0
2502/100000000, 24429.0/25000.0
          -> After 4 bonus runs: pCross=0.7 pMutac=0.9 popSize=800 (1.015364391241659 [based on 7 runs with cutoff 30.0])

    Changing ["pMutac: 0.9->0.6"], evaluating ...
2504/100000000, 24462.0/25000.0
        -> worse: (1.0168624243872966 [based on 5 runs with cutoff 30.0])
    Changing ["popSize: 800->1200"], evaluating ...
          -> Take improving step to neighbour pCross=0.7 pMutac=0.9 popSize=1200 (1.0127384407381346 [based on 31 runs with cutoff 30.0]) with flip 66

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=0.9 popSize=1200 (1.0127384407381346 [based on 31 runs with cutoff 30.0]) ============ 

2506/100000000, 24473.0/25000.0
2507/100000000, 24493.0/25000.0
          -> After 2 bonus runs: pCross=0.7 pMutac=0.9 popSize=1200 (1.0117869948220286 [based on 33 runs with cutoff 30.0])

    Changing ["popSize: 1200->200"], evaluating ...
        -> worse: (1.0180301673537753 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.9"], evaluating ...
2509/100000000, 24507.0/25000.0
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["pCross: 0.7->0.8"], evaluating ...
        -> worse: (1.0144137517478864 [based on 2 runs with cutoff 30.0])
    Changing ["popSize: 1200->3200"], evaluating ...
2511/100000000, 24519.0/25000.0
2512/100000000, 24540.0/25000.0
2513/100000000, 24559.0/25000.0
2514/100000000, 24570.0/25000.0
2515/100000000, 24591.0/25000.0
2517/100000000, 24625.0/25000.0
2518/100000000, 24655.0/25000.0
2520/100000000, 24666.0/25000.0
2521/100000000, 24679.0/25000.0
2523/100000000, 24704.0/25000.0
2525/100000000, 24716.0/25000.0
2527/100000000, 24737.0/25000.0
2529/100000000, 24757.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=0.9 popSize=3200 (1.0100645205551606 [based on 33 runs with cutoff 30.0]) with flip 67

          
============= Performing 4 bonus runs of state: pCross=0.7 pMutac=0.9 popSize=3200 (1.0100645205551606 [based on 33 runs with cutoff 30.0]) ============ 

2531/100000000, 24784.0/25000.0
2533/100000000, 24804.0/25000.0
          -> After 4 bonus runs: pCross=0.7 pMutac=0.9 popSize=3200 (1.010470491646749 [based on 37 runs with cutoff 30.0])

    Changing ["popSize: 3200->2000"], evaluating ...
2535/100000000, 24817.0/25000.0
        -> worse: (1.0139915031504436 [based on 3 runs with cutoff 30.0])
    Changing ["pMutac: 0.9->1.0"], evaluating ...
2537/100000000, 24829.0/25000.0
2538/100000000, 24847.0/25000.0
2540/100000000, 24868.0/25000.0
2542/100000000, 24897.0/25000.0
2543/100000000, 24910.0/25000.0
2544/100000000, 24926.0/25000.0
2546/100000000, 24941.0/25000.0
2547/100000000, 24964.0/25000.0
          -> Take improving step to neighbour pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0]) with flip 68

          
============= Performing 2 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113519086098888 [based on 299 runs with cutoff 30.0]) ============ 

2549/100000000, 24991.0/25000.0
          -> After 2 bonus runs: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113711782953683 [based on 301 runs with cutoff 30.0])

    Changing ["popSize: 3200->1600"], evaluating ...
        -> worse: (1.0131828659231927 [based on 13 runs with cutoff 30.0])
          
============= Performing 1 bonus runs of state: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113711782953683 [based on 301 runs with cutoff 30.0]) ============ 

          -> After 1 bonus runs for LM: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113711782953683 [based on 301 runs with cutoff 30.0])

   LM for iteration 21: pCross=0.7 pMutac=1.0 popSize=3200 (1.0113711782953683 [based on 301 runs with cutoff 30.0])

========== DETAILED RESULTS (iteration 21): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 21): pCross=0.7, pMutac=0.6, popSize=3600
==================================================================
Training quality of this incumbent parameter configuration: 1.0109455749279512, based on 333 runs with cutoff 30.0
==================================================================

Comparing LM against incumbent:
pCross=0.7 pMutac=1.0 popSize=3200 (1.0113711782953683 [based on 301 runs with cutoff 30.0])
pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])
Incumbent better, keeping it
rejecting worse pCross=0.7 pMutac=1.0 popSize=3200 (1.0113711782953683 [based on 301 runs with cutoff 30.0]), going back to pCross=0.7 pMutac=0.6 popSize=3600 (1.0109455749279512 [based on 333 runs with cutoff 30.0])
Final solution for depth 1 with limit N=2000, and cutoff time=30.0.
New Incumbent: 25001.0, 1.0109455749279512 [333, 30.0]. With state pCross=0.7, pMutac=0.6, popSize=3600

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: pCross=0.7, pMutac=0.6, popSize=3600
==================================================================
Active parameters: pCross=0.7, pMutac=0.6, popSize=3600

==================================================================
Training quality of this final best found parameter configuration: 1.0109455749279512, based on 333 runs with cutoff 30.0
==================================================================


==================================================================
Computing validation result on independent data -- 100 runs with cutoff time 30.0...
==================================================================
C:/JCell/dist/instanciasCSP/CU4.txt: 1.0095070922705411
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 1.0099439103889873
C:/JCell/dist/instanciasCSP/A4.txt: 1.0011341542449774
C:/JCell/dist/instanciasCSP/CHL6.txt: 1.0348444880682166
C:/JCell/dist/instanciasCSP/OF2.txt: 0.9846266471449487
C:/JCell/dist/instanciasCSP/CU2.txt: 1.0
C:/JCell/dist/instanciasCSP/ATP39.txt: 1.0057632573631226
C:/JCell/dist/instanciasCSP/CHL2s.txt: 1.010477657935285
C:/JCell/dist/instanciasCSP/CU10.txt: 1.0066479154686976
C:/JCell/dist/instanciasCSP/CU8.txt: 1.009175786171578
C:/JCell/dist/instanciasCSP/ATP31.txt: 1.0064012473099389
C:/JCell/dist/instanciasCSP/2s.txt: 1.0153508771929824
C:/JCell/dist/instanciasCSP/ATP37.txt: 1.013482534465252
C:/JCell/dist/instanciasCSP/ATP33.txt: 1.0126832355506903
C:/JCell/dist/instanciasCSP/A2s.txt: 1.0158045977011494
C:/JCell/dist/instanciasCSP/STS4s.txt: 1.0292878213232195
C:/JCell/dist/instanciasCSP/Hchl8s.txt: 0.9391752577319588
C:/JCell/dist/instanciasCSP/CU6.txt: 1.0209702861925765
C:/JCell/dist/instanciasCSP/ATP35.txt: 1.0118090211366366
C:/JCell/dist/instanciasCSP/Hchl4s.txt: 0.9882178462552526
C:/JCell/dist/instanciasCSP/W.txt: 0.9963383376052728
C:/JCell/dist/instanciasCSP/CU6.txt: 1.0174132864530534
C:/JCell/dist/instanciasCSP/ATP33.txt: 1.013545728066834
C:/JCell/dist/instanciasCSP/OF2.txt: 0.9846266471449487
C:/JCell/dist/instanciasCSP/A4.txt: 1.0011341542449774
C:/JCell/dist/instanciasCSP/CHL2s.txt: 1.010477657935285
C:/JCell/dist/instanciasCSP/Hchl4s.txt: 0.9882178462552526
C:/JCell/dist/instanciasCSP/ATP35.txt: 1.0118090211366366
C:/JCell/dist/instanciasCSP/CU10.txt: 1.0066479154686976
C:/JCell/dist/instanciasCSP/CU2.txt: 1.0
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 1.0206163158158743
C:/JCell/dist/instanciasCSP/ATP39.txt: 1.0057632573631226
C:/JCell/dist/instanciasCSP/CU4.txt: 1.0095070922705411
C:/JCell/dist/instanciasCSP/A2s.txt: 1.0158045977011494
C:/JCell/dist/instanciasCSP/CHL6.txt: 1.0348444880682166
C:/JCell/dist/instanciasCSP/CU8.txt: 1.017885120866679
C:/JCell/dist/instanciasCSP/2s.txt: 1.0153508771929824
C:/JCell/dist/instanciasCSP/ATP37.txt: 1.007392686390902
C:/JCell/dist/instanciasCSP/Hchl8s.txt: 0.9391752577319588
C:/JCell/dist/instanciasCSP/W.txt: 0.9963383376052728
C:/JCell/dist/instanciasCSP/STS4s.txt: 1.0304820166649087
C:/JCell/dist/instanciasCSP/ATP31.txt: 1.0064012473099389
C:/JCell/dist/instanciasCSP/ATP39.txt: 1.0057632573631226
C:/JCell/dist/instanciasCSP/CU8.txt: 1.009175786171578
C:/JCell/dist/instanciasCSP/OF2.txt: 0.9846266471449487
C:/JCell/dist/instanciasCSP/ATP33.txt: 1.009247894718898
C:/JCell/dist/instanciasCSP/ATP35.txt: 1.0118090211366366
C:/JCell/dist/instanciasCSP/Hchl8s.txt: 0.9391752577319588
C:/JCell/dist/instanciasCSP/Hchl4s.txt: 0.9882178462552526
C:/JCell/dist/instanciasCSP/CU4.txt: 1.0095070922705411
C:/JCell/dist/instanciasCSP/2s.txt: 1.0153508771929824
C:/JCell/dist/instanciasCSP/STS4s.txt: 1.0260449485402225
C:/JCell/dist/instanciasCSP/CU6.txt: 1.0209702861925765
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 1.0099439103889873
C:/JCell/dist/instanciasCSP/A4.txt: 1.0011341542449774
C:/JCell/dist/instanciasCSP/CHL6.txt: 1.0348444880682166
C:/JCell/dist/instanciasCSP/CU2.txt: 1.0
C:/JCell/dist/instanciasCSP/A2s.txt: 1.01
C:/JCell/dist/instanciasCSP/CHL2s.txt: 1.010477657935285
C:/JCell/dist/instanciasCSP/ATP37.txt: 1.007392686390902
C:/JCell/dist/instanciasCSP/CU10.txt: 1.0066479154686976
C:/JCell/dist/instanciasCSP/ATP31.txt: 1.0064012473099389
C:/JCell/dist/instanciasCSP/W.txt: 0.9963383376052728
C:/JCell/dist/instanciasCSP/ATP39.txt: 1.0027573495117739
C:/JCell/dist/instanciasCSP/2s.txt: 1.0153508771929824
C:/JCell/dist/instanciasCSP/ATP37.txt: 1.013482534465252
C:/JCell/dist/instanciasCSP/Hchl8s.txt: 0.9391752577319588
C:/JCell/dist/instanciasCSP/CU6.txt: 1.0174132864530534
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 1.0099439103889873
C:/JCell/dist/instanciasCSP/A4.txt: 1.0011341542449774
C:/JCell/dist/instanciasCSP/CU8.txt: 1.017885120866679
C:/JCell/dist/instanciasCSP/ATP31.txt: 1.014307231693297
C:/JCell/dist/instanciasCSP/A2s.txt: 1.0059760956175299
C:/JCell/dist/instanciasCSP/Hchl4s.txt: 0.9882178462552526
C:/JCell/dist/instanciasCSP/CU2.txt: 1.0
C:/JCell/dist/instanciasCSP/ATP35.txt: 1.017024897871847
C:/JCell/dist/instanciasCSP/ATP33.txt: 1.009247894718898
C:/JCell/dist/instanciasCSP/CU10.txt: 1.0066479154686976
C:/JCell/dist/instanciasCSP/CU4.txt: 1.0063316105149238
C:/JCell/dist/instanciasCSP/STS4s.txt: 1.0304820166649087
C:/JCell/dist/instanciasCSP/CHL2s.txt: 1.0003050640634534
C:/JCell/dist/instanciasCSP/OF2.txt: 0.9846266471449487
C:/JCell/dist/instanciasCSP/W.txt: 0.9963383376052728
C:/JCell/dist/instanciasCSP/CHL6.txt: 1.0348444880682166
C:/JCell/dist/instanciasCSP/CHL2s.txt: 1.0003050640634534
C:/JCell/dist/instanciasCSP/ATP35.txt: 1.0104445252252485
C:/JCell/dist/instanciasCSP/ATP31.txt: 1.007399202805811
C:/JCell/dist/instanciasCSP/ATP39.txt: 1.0027573495117739
C:/JCell/dist/instanciasCSP/OF2.txt: 0.9846266471449487
C:/JCell/dist/instanciasCSP/A4.txt: 1.0011341542449774
C:/JCell/dist/instanciasCSP/W.txt: 0.9963383376052728
C:/JCell/dist/instanciasCSP/CU8.txt: 1.017885120866679
C:/JCell/dist/instanciasCSP/2s.txt: 1.0153508771929824
C:/JCell/dist/instanciasCSP/Hchl8s.txt: 0.9391752577319588
C:/JCell/dist/instanciasCSP/CHL6.txt: 1.0348444880682166
C:/JCell/dist/instanciasCSP/ATP33.txt: 1.0117530450682923
C:/JCell/dist/instanciasCSP/ATP37.txt: 1.007392686390902
C:/JCell/dist/instanciasCSP/Hchl6s.txt: 1.0099439103889873
C:/JCell/dist/instanciasCSP/CU2.txt: 1.0
C:/JCell/dist/instanciasCSP/CU4.txt: 1.0063316105149238
Combined result: 1.0051531964870684

================================================================
Final best parameter configuration: pCross=0.7, pMutac=0.6, popSize=3600
==================================================================
Active parameters: pCross=0.7, pMutac=0.6, popSize=3600

================================================================
Training quality of this final best found parameter configuration: 1.0109455749279512, based on 333 runs with cutoff 30.0
Test quality of this final best found parameter configuration: 1.0051531964870684, based on 100 independent runs with cutoff 30.0
==================================================================
