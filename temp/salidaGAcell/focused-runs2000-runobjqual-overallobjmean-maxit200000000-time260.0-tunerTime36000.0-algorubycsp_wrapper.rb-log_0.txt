Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-numRun" "0" "-scenariofile" "escenarioGAcell.txt" "-validN" "100"


seed: 1234
algo: ruby csp_wrapper.rb
tunerTimeout: 36000.0
maxEvals: 100000000
run_obj: qual
overall_obj: mean
instance_file: CSP-training.txt
test_instance_file: CSP-test.txt
N: 2000
cutoff_time: 260.0
cutoff_length: 150000
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=260.0.
Current CPU time = 0, this run goes until 36000.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state grid=20x20, neigh=Linear5, updPol=frs
 Same incumbent, new precision:
New Incumbent: 7.0, 1.0124326649325113 [1, 260.0]. With state grid=20x20, neigh=Linear5, updPol=frs
2/100000000, 16.0/36000.0
        -> Worse random: grid=4x100 neigh=Compact13 updPol=synchronous (1.0240866506171868 [based on 1 runs with cutoff 260.0])
        -> Worse random: grid=2x200 neigh=Linear5 updPol=ls (1.01564458398228 [based on 1 runs with cutoff 260.0])
4/100000000, 33.0/36000.0
        -> Worse random: grid=10x40 neigh=Compact9 updPol=frs (1.0178111808915886 [based on 1 runs with cutoff 260.0])
        -> Worse random: grid=5x80 neigh=Compact13 updPol=uc (1.01564458398228 [based on 1 runs with cutoff 260.0])
6/100000000, 48.0/36000.0
          -> Take improving step to random grid=2x200 neigh=Linear5 updPol=nrs (1.0124326649325113 [based on 1 runs with cutoff 260.0])

        -> Worse random: grid=5x80 neigh=Linear5 updPol=ls (1.0245493889598223 [based on 1 runs with cutoff 260.0])
8/100000000, 64.0/36000.0
        -> Worse random: grid=2x200 neigh=Compact9 updPol=ls (1.0245493889598223 [based on 1 runs with cutoff 260.0])
        -> Worse random: grid=10x40 neigh=Compact13 updPol=nrs (1.0245493889598223 [based on 1 runs with cutoff 260.0])
10/100000000, 79.0/36000.0
        -> Worse random: grid=20x20 neigh=Linear5 updPol=synchronous (1.0245493889598223 [based on 1 runs with cutoff 260.0])
        -> Worse random: grid=5x80 neigh=Compact13 updPol=nrs (1.0178111808915886 [based on 1 runs with cutoff 260.0])
   BLS in iteration 1, start with grid=2x200 neigh=Linear5 updPol=nrs (1.0124326649325113 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
12/100000000, 97.0/36000.0
        -> worse: (1.0307966934427735 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0396553972480576 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
14/100000000, 116.0/36000.0
        -> worse: (1.042075127228877 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
16/100000000, 131.0/36000.0
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
18/100000000, 147.0/36000.0
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
20/100000000, 162.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
New inc: 1.0112396329013964
New Incumbent: 170.0, 1.0112396329013964 [1, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
          -> Take improving step to neighbour grid=2x200 neigh=Linear5 updPol=ss (1.0112396329013964 [based on 1 runs with cutoff 260.0]) with flip 1

          
============= Performing 10 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0112396329013964 [based on 1 runs with cutoff 260.0]) ============ 

22/100000000, 207.0/36000.0
 Same incumbent, new precision:
New Incumbent: 207.0, 1.0276134115284903 [2, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
23/100000000, 242.0/36000.0
 Same incumbent, new precision:
New Incumbent: 242.0, 1.028286093929667 [3, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
 Same incumbent, new precision:
New Incumbent: 248.0, 1.042083625586678 [4, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
25/100000000, 256.0/36000.0
 Same incumbent, new precision:
New Incumbent: 256.0, 1.0336669004693424 [5, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
26/100000000, 284.0/36000.0
 Same incumbent, new precision:
New Incumbent: 284.0, 1.0313098101246778 [6, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
27/100000000, 320.0/36000.0
 Same incumbent, new precision:
New Incumbent: 320.0, 1.0308496712910171 [7, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
 Same incumbent, new precision:
New Incumbent: 323.0, 1.02699346237964 [8, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
29/100000000, 380.0/36000.0
 Same incumbent, new precision:
New Incumbent: 380.0, 1.0275293551106057 [9, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
30/100000000, 398.0/36000.0
 Same incumbent, new precision:
New Incumbent: 398.0, 1.0258834306696558 [10, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
31/100000000, 448.0/36000.0
 Same incumbent, new precision:
New Incumbent: 448.0, 1.0268911329645698 [11, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
          -> After 10 bonus runs: grid=2x200 neigh=Linear5 updPol=ss (1.0268911329645698 [based on 11 runs with cutoff 260.0])

    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
33/100000000, 464.0/36000.0
        -> worse: (1.0202312496646013 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: ss->ls"], evaluating ...
35/100000000, 502.0/36000.0
36/100000000, 557.0/36000.0
38/100000000, 571.0/36000.0
39/100000000, 591.0/36000.0
40/100000000, 615.0/36000.0
42/100000000, 699.0/36000.0
43/100000000, 716.0/36000.0
        -> worse: (1.0279188171893225 [based on 10 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
45/100000000, 728.0/36000.0
        -> worse: (1.022810981716452 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
47/100000000, 743.0/36000.0
        -> worse: (1.0240866506171868 [based on 1 runs with cutoff 260.0])
          
============= Performing 8 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0268911329645698 [based on 11 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 750.0, 1.0258442258105007 [12, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
49/100000000, 758.0/36000.0
 Same incumbent, new precision:
New Incumbent: 758.0, 1.0274666143226212 [13, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
 Same incumbent, new precision:
New Incumbent: 762.0, 1.0264538568630592 [14, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
51/100000000, 769.0/36000.0
 Same incumbent, new precision:
New Incumbent: 769.0, 1.0258502423326923 [15, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
52/100000000, 928.0/36000.0
 Same incumbent, new precision:
New Incumbent: 928.0, 1.0256453330491109 [16, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
 Same incumbent, new precision:
New Incumbent: 932.0, 1.0280432986674255 [17, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
54/100000000, 942.0/36000.0
 Same incumbent, new precision:
New Incumbent: 942.0, 1.0277553136456534 [18, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
 Same incumbent, new precision:
New Incumbent: 950.0, 1.0285909751358135 [19, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
          -> After 8 bonus runs for LM: grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])

   LM for iteration 1: grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): grid=2x200, neigh=Linear5, updPol=ss
==================================================================
Training quality of this incumbent parameter configuration: 1.0285909751358135, based on 19 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 950.0, 1.0285909751358135 [19, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
55/100000000, 950.0/36000.0
iteration 2, flip 3, evaluation count 55
    perturb to ---> grid=10x40 neigh=Linear5 updPol=ss (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=ss (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (100000000 [based on 0 runs with cutoff 0])
56/100000000, 955.0/36000.0
   BLS in iteration 2, start with grid=10x40 neigh=Compact9 updPol=nrs (1.0119683736851373 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0443472565549006 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
58/100000000, 970.0/36000.0
        -> worse: (1.0124326649325113 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
60/100000000, 985.0/36000.0
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->5x80"], evaluating ...
          -> Take improving step to neighbour grid=5x80 neigh=Compact9 updPol=nrs (1.0119683736851373 [based on 1 runs with cutoff 260.0]) with flip 3

          
============= Performing 5 bonus runs of state: grid=5x80 neigh=Compact9 updPol=nrs (1.0119683736851373 [based on 1 runs with cutoff 260.0]) ============ 

62/100000000, 1013.0/36000.0
63/100000000, 1029.0/36000.0
65/100000000, 1044.0/36000.0
66/100000000, 1079.0/36000.0
          -> After 5 bonus runs: grid=5x80 neigh=Compact9 updPol=nrs (1.0338119013919893 [based on 6 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Compact13"], evaluating ...
67/100000000, 1122.0/36000.0
68/100000000, 1170.0/36000.0
        -> worse: (1.031680345732882 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0124326649325113 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
70/100000000, 1188.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 5x80->2x200"], evaluating ...
71/100000000, 1218.0/36000.0
72/100000000, 1262.0/36000.0
        -> worse: (1.0301004953172166 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
74/100000000, 1279.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 5x80->4x100"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
76/100000000, 1294.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
          
============= Performing 9 bonus runs of state: grid=5x80 neigh=Compact9 updPol=nrs (1.0338119013919893 [based on 6 runs with cutoff 260.0]) ============ 

78/100000000, 1358.0/36000.0
80/100000000, 1449.0/36000.0
81/100000000, 1465.0/36000.0
82/100000000, 1494.0/36000.0
84/100000000, 1509.0/36000.0
86/100000000, 1523.0/36000.0
          -> After 9 bonus runs for LM: grid=5x80 neigh=Compact9 updPol=nrs (1.0282594798153066 [based on 15 runs with cutoff 260.0])

   LM for iteration 2: grid=5x80 neigh=Compact9 updPol=nrs (1.0282594798153066 [based on 15 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 2): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 2): grid=2x200, neigh=Linear5, updPol=ss
==================================================================
Training quality of this incumbent parameter configuration: 1.0285909751358135, based on 19 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=5x80 neigh=Compact9 updPol=nrs (1.0282594798153066 [based on 15 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=5x80 neigh=Compact9 updPol=nrs (1.0282594798153066 [based on 15 runs with cutoff 260.0]), going back to grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])
86/100000000, 1523.0/36000.0
iteration 3, flip 5, evaluation count 86
    perturb to ---> grid=1x400 neigh=Linear5 updPol=ss (1.0202312496646013 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Linear5 updPol=ss (1.022810981716452 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=ss (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 3, start with grid=4x100 neigh=Compact9 updPol=ss (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
88/100000000, 1536.0/36000.0
        -> worse: (1.022810981716452 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 4x100->1x400"], evaluating ...
        -> worse: (1.0240866506171868 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: ss->frs"], evaluating ...
90/100000000, 1553.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 4x100->5x80"], evaluating ...
91/100000000, 1595.0/36000.0
92/100000000, 1655.0/36000.0
          -> Take improving step to neighbour grid=5x80 neigh=Compact9 updPol=ss (1.0215357438799038 [based on 2 runs with cutoff 260.0]) with flip 5

          
============= Performing 5 bonus runs of state: grid=5x80 neigh=Compact9 updPol=ss (1.0215357438799038 [based on 2 runs with cutoff 260.0]) ============ 

93/100000000, 1728.0/36000.0
95/100000000, 1744.0/36000.0
96/100000000, 1775.0/36000.0
97/100000000, 1837.0/36000.0
          -> After 5 bonus runs: grid=5x80 neigh=Compact9 updPol=ss (1.0305026020659216 [based on 7 runs with cutoff 260.0])

    Changing ["updPol: ss->uc"], evaluating ...
98/100000000, 1868.0/36000.0
        -> worse: (1.0290440190025087 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: ss->nrs"], evaluating ...
100/100000000, 1970.0/36000.0
101/100000000, 1982.0/36000.0
102/100000000, 2003.0/36000.0
          -> Take improving step to neighbour grid=5x80 neigh=Compact9 updPol=nrs (1.0282594798153066 [based on 15 runs with cutoff 260.0]) with flip 6

          
============= Performing 2 bonus runs of state: grid=5x80 neigh=Compact9 updPol=nrs (1.0282594798153066 [based on 15 runs with cutoff 260.0]) ============ 

104/100000000, 2174.0/36000.0
          -> After 2 bonus runs: grid=5x80 neigh=Compact9 updPol=nrs (1.0302802298218416 [based on 17 runs with cutoff 260.0])

    Changing ["updPol: nrs->ls"], evaluating ...
106/100000000, 2225.0/36000.0
107/100000000, 2267.0/36000.0
109/100000000, 2281.0/36000.0
110/100000000, 2320.0/36000.0
111/100000000, 2383.0/36000.0
113/100000000, 2445.0/36000.0
114/100000000, 2465.0/36000.0
115/100000000, 2481.0/36000.0
117/100000000, 2494.0/36000.0
119/100000000, 2510.0/36000.0
120/100000000, 2673.0/36000.0
          -> Take improving step to neighbour grid=5x80 neigh=Compact9 updPol=ls (1.029511152944863 [based on 17 runs with cutoff 260.0]) with flip 7

          
============= Performing 1 bonus runs of state: grid=5x80 neigh=Compact9 updPol=ls (1.029511152944863 [based on 17 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=5x80 neigh=Compact9 updPol=ls (1.029970144054885 [based on 18 runs with cutoff 260.0])

    Changing ["updPol: ls->synchronous"], evaluating ...
123/100000000, 2718.0/36000.0
        -> worse: (1.0327798943270337 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: ls->frs"], evaluating ...
124/100000000, 2786.0/36000.0
        -> worse: (1.027322543859968 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 5x80->4x100"], evaluating ...
        -> worse: (1.0240866506171868 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
126/100000000, 2819.0/36000.0
        -> worse: (1.0322882595924514 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 5x80->10x40"], evaluating ...
128/100000000, 2854.0/36000.0
        -> worse: (1.0309944584353166 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 5x80->20x20"], evaluating ...
129/100000000, 2866.0/36000.0
        -> worse: (1.042075127228877 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 5x80->1x400"], evaluating ...
        -> worse: (1.0240866506171868 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
131/100000000, 2886.0/36000.0
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 5x80->2x200"], evaluating ...
132/100000000, 2929.0/36000.0
        -> worse: (1.0308518204072226 [based on 2 runs with cutoff 260.0])
          
============= Performing 9 bonus runs of state: grid=5x80 neigh=Compact9 updPol=ls (1.029970144054885 [based on 18 runs with cutoff 260.0]) ============ 

State wants more detail (19+1) than incumbent (19), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0314056262562232 [based on 19 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0285909751358135 [based on 19 runs with cutoff 260.0])
134/100000000, 2942.0/36000.0
 Same incumbent, new precision:
New Incumbent: 2942.0, 1.0345291845654208 [20, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
State wants more detail (20+1) than incumbent (20), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.03720310312981 [based on 20 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0345291845654208 [based on 20 runs with cutoff 260.0])
136/100000000, 2953.0/36000.0
 Same incumbent, new precision:
New Incumbent: 2953.0, 1.0346772160438729 [21, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
State wants more detail (21+1) than incumbent (21), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0373663606693508 [based on 21 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0346772160438729 [based on 21 runs with cutoff 260.0])
 Same incumbent, new precision:
New Incumbent: 2960.0, 1.0335565367561932 [22, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
139/100000000, 2965.0/36000.0
State wants more detail (22+1) than incumbent (22), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0373661533419378 [based on 22 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0335565367561932 [based on 22 runs with cutoff 260.0])
 Same incumbent, new precision:
New Incumbent: 2968.0, 1.0338461025779844 [23, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
State wants more detail (23+1) than incumbent (23), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0374900836600007 [based on 23 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0338461025779844 [based on 23 runs with cutoff 260.0])
142/100000000, 2980.0/36000.0
 Same incumbent, new precision:
New Incumbent: 2980.0, 1.0324358483039016 [24, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
State wants more detail (24+1) than incumbent (24), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0359279968408341 [based on 24 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0324358483039016 [based on 24 runs with cutoff 260.0])
144/100000000, 3056.0/36000.0
 Same incumbent, new precision:
New Incumbent: 3056.0, 1.0325097458836874 [25, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
145/100000000, 3183.0/36000.0
State wants more detail (25+1) than incumbent (25), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0361789558920487 [based on 25 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0325097458836874 [based on 25 runs with cutoff 260.0])
 Same incumbent, new precision:
New Incumbent: 3192.0, 1.0312593710420073 [26, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
147/100000000, 3201.0/36000.0
State wants more detail (26+1) than incumbent (26), doing incumbent first:
grid=5x80 neigh=Compact9 updPol=ls (1.0347874575885085 [based on 26 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0312593710420073 [based on 26 runs with cutoff 260.0])
 Same incumbent, new precision:
New Incumbent: 3208.0, 1.0305178992590216 [27, 260.0]. With state grid=2x200, neigh=Linear5, updPol=ss
149/100000000, 3217.0/36000.0
          -> After 9 bonus runs for LM: grid=5x80 neigh=Compact9 updPol=ls (1.0342483387765118 [based on 27 runs with cutoff 260.0])

   LM for iteration 3: grid=5x80 neigh=Compact9 updPol=ls (1.0342483387765118 [based on 27 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 3): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 3): grid=2x200, neigh=Linear5, updPol=ss
==================================================================
Training quality of this incumbent parameter configuration: 1.0305178992590216, based on 27 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=5x80 neigh=Compact9 updPol=ls (1.0342483387765118 [based on 27 runs with cutoff 260.0])
grid=2x200 neigh=Linear5 updPol=ss (1.0305178992590216 [based on 27 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=5x80 neigh=Compact9 updPol=ls (1.0342483387765118 [based on 27 runs with cutoff 260.0]), going back to grid=2x200 neigh=Linear5 updPol=ss (1.0305178992590216 [based on 27 runs with cutoff 260.0])
149/100000000, 3217.0/36000.0
iteration 4, flip 9, evaluation count 149
    perturb to ---> grid=5x80 neigh=Linear5 updPol=ss (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=5x80 neigh=Linear5 updPol=nrs (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Linear5 updPol=nrs (1.0245493889598223 [based on 1 runs with cutoff 260.0])
150/100000000, 3245.0/36000.0
   BLS in iteration 4, start with grid=10x40 neigh=Linear5 updPol=nrs (1.0351023810161644 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
151/100000000, 3328.0/36000.0
          -> Take improving step to neighbour grid=10x40 neigh=Compact9 updPol=nrs (1.025109244103219 [based on 2 runs with cutoff 260.0]) with flip 9

          
============= Performing 1 bonus runs of state: grid=10x40 neigh=Compact9 updPol=nrs (1.025109244103219 [based on 2 runs with cutoff 260.0]) ============ 

152/100000000, 3340.0/36000.0
          -> After 1 bonus runs: grid=10x40 neigh=Compact9 updPol=nrs (1.0266166489794861 [based on 3 runs with cutoff 260.0])

    Changing ["updPol: nrs->ls"], evaluating ...
153/100000000, 3359.0/36000.0
        -> worse: (1.0305401252008846 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
154/100000000, 3400.0/36000.0
        -> worse: (1.02690569852114 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
155/100000000, 3429.0/36000.0
        -> worse: (1.0382675691571903 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
156/100000000, 3440.0/36000.0
        -> worse: (1.0401016745152996 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->5x80"], evaluating ...
          -> Take improving step to neighbour grid=5x80 neigh=Compact9 updPol=nrs (1.0302802298218416 [based on 17 runs with cutoff 260.0]) with flip 10

          
============= Performing 5 bonus runs of state: grid=5x80 neigh=Compact9 updPol=nrs (1.0302802298218416 [based on 17 runs with cutoff 260.0]) ============ 

158/100000000, 3457.0/36000.0
160/100000000, 3471.0/36000.0
162/100000000, 3487.0/36000.0
          -> After 5 bonus runs: grid=5x80 neigh=Compact9 updPol=nrs (1.0355361455469059 [based on 22 runs with cutoff 260.0])

    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.0315154695560889 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 5x80->20x20"], evaluating ...
164/100000000, 3518.0/36000.0
        -> worse: (1.0353084572310598 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
166/100000000, 3530.0/36000.0
167/100000000, 3649.0/36000.0
169/100000000, 3663.0/36000.0
        -> worse: (1.0342483387765118 [based on 27 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
171/100000000, 3680.0/36000.0
172/100000000, 3712.0/36000.0
173/100000000, 3775.0/36000.0
175/100000000, 3849.0/36000.0
176/100000000, 3868.0/36000.0
177/100000000, 3883.0/36000.0
179/100000000, 3900.0/36000.0
        -> worse: (1.0294657786144645 [based on 14 runs with cutoff 260.0])
    Changing ["grid: 5x80->4x100"], evaluating ...
181/100000000, 3953.0/36000.0
182/100000000, 4000.0/36000.0
        -> worse: (1.0433960959260888 [based on 4 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
184/100000000, 4044.0/36000.0
185/100000000, 4093.0/36000.0
        -> worse: (1.031680345732882 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 5x80->2x200"], evaluating ...
187/100000000, 4111.0/36000.0
188/100000000, 4137.0/36000.0
189/100000000, 4192.0/36000.0
191/100000000, 4290.0/36000.0
192/100000000, 4305.0/36000.0
193/100000000, 4335.0/36000.0
195/100000000, 4350.0/36000.0
197/100000000, 4369.0/36000.0
198/100000000, 4437.0/36000.0
200/100000000, 4456.0/36000.0
202/100000000, 4470.0/36000.0
204/100000000, 4484.0/36000.0
206/100000000, 4496.0/36000.0
207/100000000, 4567.0/36000.0
209/100000000, 4585.0/36000.0
New inc: 1.0276663850003327
New Incumbent: 4585.0, 1.0276663850003327 [27, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0276663850003327 [based on 27 runs with cutoff 260.0]) with flip 11

          
============= Performing 7 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0276663850003327 [based on 27 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 4592.0, 1.0277336808191084 [28, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
211/100000000, 4613.0/36000.0
 Same incumbent, new precision:
New Incumbent: 4613.0, 1.027615944998816 [29, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 4616.0, 1.0289091051175376 [30, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
213/100000000, 4674.0/36000.0
 Same incumbent, new precision:
New Incumbent: 4674.0, 1.0293349141303334 [31, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 4680.0, 1.0284181980637606 [32, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
215/100000000, 4771.0/36000.0
 Same incumbent, new precision:
New Incumbent: 4771.0, 1.0289346146223688 [33, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 4775.0, 1.0303808468062916 [34, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 7 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0303808468062916 [based on 34 runs with cutoff 260.0])

    Changing ["updPol: nrs->ls"], evaluating ...
217/100000000, 4804.0/36000.0
        -> worse: (1.0377146999146765 [based on 3 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
218/100000000, 4828.0/36000.0
219/100000000, 4864.0/36000.0
        -> worse: (1.0396783588706002 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
221/100000000, 4903.0/36000.0
        -> worse: (1.0315114280343285 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
223/100000000, 4957.0/36000.0
224/100000000, 5011.0/36000.0
        -> worse: (1.0436116373732265 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
226/100000000, 5026.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
228/100000000, 5080.0/36000.0
229/100000000, 5131.0/36000.0
231/100000000, 5146.0/36000.0
232/100000000, 5174.0/36000.0
233/100000000, 5222.0/36000.0
235/100000000, 5306.0/36000.0
236/100000000, 5324.0/36000.0
237/100000000, 5345.0/36000.0
239/100000000, 5359.0/36000.0
241/100000000, 5371.0/36000.0
242/100000000, 5512.0/36000.0
244/100000000, 5529.0/36000.0
246/100000000, 5542.0/36000.0
        -> worse: (1.0331213326537383 [based on 20 runs with cutoff 260.0])
          
============= Performing 7 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0303808468062916 [based on 34 runs with cutoff 260.0]) ============ 

247/100000000, 5570.0/36000.0
 Same incumbent, new precision:
New Incumbent: 5570.0, 1.0300859636167452 [35, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
248/100000000, 5588.0/36000.0
 Same incumbent, new precision:
New Incumbent: 5588.0, 1.030212919439844 [36, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 5591.0, 1.029687952676565 [37, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
250/100000000, 5600.0/36000.0
 Same incumbent, new precision:
New Incumbent: 5600.0, 1.030013748623647 [38, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 5608.0, 1.030216633842958 [39, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
252/100000000, 5615.0/36000.0
 Same incumbent, new precision:
New Incumbent: 5615.0, 1.0303788672931944 [40, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
253/100000000, 5626.0/36000.0
 Same incumbent, new precision:
New Incumbent: 5626.0, 1.0303148283901333 [41, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 7 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])

   LM for iteration 4: grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 4): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 4): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0303148283901333, based on 41 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 5626.0, 1.0303148283901333 [41, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
   Accepting new better local optimum: grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])
253/100000000, 5626.0/36000.0
iteration 5, flip 13, evaluation count 253
    perturb to ---> grid=1x400 neigh=Compact9 updPol=nrs (1.02690569852114 [based on 2 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=frs (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=frs (1.0178111808915886 [based on 1 runs with cutoff 260.0])
254/100000000, 5643.0/36000.0
   BLS in iteration 5, start with grid=10x40 neigh=Compact9 updPol=frs (1.0198439080428692 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: frs->nrs"], evaluating ...
256/100000000, 5659.0/36000.0
        -> worse: (1.0432982485049451 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: frs->ss"], evaluating ...
257/100000000, 5684.0/36000.0
        -> worse: (1.036745071111709 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: frs->uc"], evaluating ...
258/100000000, 5744.0/36000.0
        -> worse: (1.0368142997621206 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 10x40->4x100"], evaluating ...
259/100000000, 5807.0/36000.0
        -> worse: (1.0247800303546843 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
261/100000000, 5826.0/36000.0
        -> worse: (1.0573081102355468 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
263/100000000, 5900.0/36000.0
        -> worse: (1.0238433968615528 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
264/100000000, 5911.0/36000.0
        -> worse: (1.0573081102355468 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: frs->synchronous"], evaluating ...
265/100000000, 5944.0/36000.0
        -> worse: (1.0250456447172145 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: frs->ls"], evaluating ...
        -> worse: (1.0462657496383683 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 10x40->5x80"], evaluating ...
267/100000000, 5961.0/36000.0
        -> worse: (1.02517222514319 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 10x40->2x200"], evaluating ...
268/100000000, 6025.0/36000.0
        -> worse: (1.0222911919959845 [based on 2 runs with cutoff 260.0])
          
============= Performing 12 bonus runs of state: grid=10x40 neigh=Compact9 updPol=frs (1.0297990520774913 [based on 4 runs with cutoff 260.0]) ============ 

270/100000000, 6066.0/36000.0
271/100000000, 6110.0/36000.0
273/100000000, 6191.0/36000.0
274/100000000, 6210.0/36000.0
275/100000000, 6224.0/36000.0
277/100000000, 6235.0/36000.0
279/100000000, 6254.0/36000.0
280/100000000, 6443.0/36000.0
          -> After 12 bonus runs for LM: grid=10x40 neigh=Compact9 updPol=frs (1.0246437745716421 [based on 16 runs with cutoff 260.0])

   LM for iteration 5: grid=10x40 neigh=Compact9 updPol=frs (1.0246437745716421 [based on 16 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 5): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 5): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0303148283901333, based on 41 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=10x40 neigh=Compact9 updPol=frs (1.0246437745716421 [based on 16 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])
282/100000000, 6454.0/36000.0
284/100000000, 6466.0/36000.0
Incumbent better, keeping it
rejecting worse grid=10x40 neigh=Compact9 updPol=frs (1.0338543764791583 [based on 20 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0])
284/100000000, 6466.0/36000.0
iteration 6, flip 14, evaluation count 284
    perturb to ---> grid=2x200 neigh=Compact9 updPol=ls (1.0377146999146765 [based on 3 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=ls (1.0240866506171868 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=nrs (1.02690569852114 [based on 2 runs with cutoff 260.0])
285/100000000, 6516.0/36000.0
   BLS in iteration 6, start with grid=1x400 neigh=Compact9 updPol=nrs (1.0249151576886766 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->10x40"], evaluating ...
        -> worse: (1.0432982485049451 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
287/100000000, 6562.0/36000.0
        -> worse: (1.0315175114095738 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 1x400->4x100"], evaluating ...
289/100000000, 6580.0/36000.0
        -> worse: (1.034716876740871 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0124326649325113 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
291/100000000, 6631.0/36000.0
        -> worse: (1.0315175114095738 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
293/100000000, 6689.0/36000.0
294/100000000, 6737.0/36000.0
        -> worse: (1.0257925295323773 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
295/100000000, 6757.0/36000.0
296/100000000, 6805.0/36000.0
298/100000000, 6895.0/36000.0
299/100000000, 6912.0/36000.0
300/100000000, 6957.0/36000.0
302/100000000, 6972.0/36000.0
304/100000000, 6989.0/36000.0
305/100000000, 7100.0/36000.0
307/100000000, 7114.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0]) with flip 14

          
============= Performing 9 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0303148283901333 [based on 41 runs with cutoff 260.0]) ============ 

308/100000000, 7255.0/36000.0
 Same incumbent, new precision:
New Incumbent: 7255.0, 1.0303670013592052 [42, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 7261.0, 1.0310244386418888 [43, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
310/100000000, 7276.0/36000.0
 Same incumbent, new precision:
New Incumbent: 7276.0, 1.0307805260752447 [44, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 7280.0, 1.0300965143846839 [45, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 7284.0, 1.0303165151732208 [46, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
313/100000000, 7337.0/36000.0
 Same incumbent, new precision:
New Incumbent: 7337.0, 1.0304695380334927 [47, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
314/100000000, 7395.0/36000.0
 Same incumbent, new precision:
New Incumbent: 7395.0, 1.030680627128451 [48, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 7404.0, 1.0300544918809316 [49, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
316/100000000, 7412.0/36000.0
 Same incumbent, new precision:
New Incumbent: 7412.0, 1.0302877381845084 [50, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 9 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0302877381845084 [based on 50 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.03174268709648 [based on 5 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
318/100000000, 7431.0/36000.0
        -> worse: (1.0348893098985812 [based on 5 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
319/100000000, 7444.0/36000.0
        -> worse: (1.0334161243980466 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
320/100000000, 7455.0/36000.0
        -> worse: (1.0321045947527057 [based on 28 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
321/100000000, 7497.0/36000.0
        -> worse: (1.044067970075866 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
323/100000000, 7535.0/36000.0
325/100000000, 7550.0/36000.0
326/100000000, 7578.0/36000.0
327/100000000, 7612.0/36000.0
329/100000000, 7693.0/36000.0
330/100000000, 7711.0/36000.0
331/100000000, 7762.0/36000.0
333/100000000, 7777.0/36000.0
335/100000000, 7791.0/36000.0
336/100000000, 7965.0/36000.0
        -> worse: (1.0273622172758148 [based on 16 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
        -> worse: (1.0325897515758133 [based on 21 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
338/100000000, 8006.0/36000.0
339/100000000, 8048.0/36000.0
        -> worse: (1.037865553003824 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
341/100000000, 8060.0/36000.0
        -> worse: (1.049448731594242 [based on 4 runs with cutoff 260.0])
          
============= Performing 9 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0302877381845084 [based on 50 runs with cutoff 260.0]) ============ 

342/100000000, 8136.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8136.0, 1.0303878242188067 [51, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8141.0, 1.0298034429838296 [52, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
344/100000000, 8150.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8150.0, 1.0296715097523697 [53, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8154.0, 1.0305684541805802 [54, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8158.0, 1.0300126641045697 [55, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
347/100000000, 8162.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8162.0, 1.030662629898425 [56, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8170.0, 1.0312428280258006 [57, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
349/100000000, 8176.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8176.0, 1.0309838006352456 [58, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
350/100000000, 8189.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8189.0, 1.0311738541894973 [59, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 9 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0])

   LM for iteration 6: grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 6): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 6): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0311738541894973, based on 59 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 8189.0, 1.0311738541894973 [59, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0])
350/100000000, 8189.0/36000.0
iteration 7, flip 16, evaluation count 350
    perturb to ---> grid=4x100 neigh=Compact9 updPol=nrs (1.034716876740871 [based on 5 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=uc (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=uc (1.0368142997621206 [based on 3 runs with cutoff 260.0])
   BLS in iteration 7, start with grid=10x40 neigh=Compact9 updPol=uc (1.0422699259502388 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
352/100000000, 8205.0/36000.0
        -> worse: (1.0346385988039561 [based on 5 runs with cutoff 260.0])
    Changing ["grid: 10x40->2x200"], evaluating ...
354/100000000, 8221.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=uc (1.0302924424030593 [based on 5 runs with cutoff 260.0]) with flip 16

          
============= Performing 3 bonus runs of state: grid=2x200 neigh=Compact9 updPol=uc (1.0302924424030593 [based on 5 runs with cutoff 260.0]) ============ 

355/100000000, 8247.0/36000.0
356/100000000, 8297.0/36000.0
          -> After 3 bonus runs: grid=2x200 neigh=Compact9 updPol=uc (1.0266174329729916 [based on 8 runs with cutoff 260.0])

    Changing ["updPol: uc->synchronous"], evaluating ...
358/100000000, 8384.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=synchronous (1.0325897515758133 [based on 21 runs with cutoff 260.0]) with flip 17

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Compact9 updPol=synchronous (1.0325897515758133 [based on 21 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=2x200 neigh=Compact9 updPol=synchronous (1.0315639570366821 [based on 22 runs with cutoff 260.0])

    Changing ["updPol: synchronous->ls"], evaluating ...
360/100000000, 8398.0/36000.0
        -> worse: (1.0395589852753937 [based on 5 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
362/100000000, 8447.0/36000.0
        -> worse: (1.0296981958771574 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0401016745152996 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: synchronous->nrs"], evaluating ...
364/100000000, 8459.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0]) with flip 18

          
============= Performing 5 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0311738541894973 [based on 59 runs with cutoff 260.0]) ============ 

365/100000000, 8477.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8477.0, 1.030838791798024 [60, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
366/100000000, 8610.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8610.0, 1.030812590715718 [61, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8614.0, 1.0304896319815695 [62, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
368/100000000, 8665.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8665.0, 1.0304548504745714 [63, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8674.0, 1.0303661820061836 [64, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 5 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0303661820061836 [based on 64 runs with cutoff 260.0])

    Changing ["grid: 2x200->5x80"], evaluating ...
370/100000000, 8705.0/36000.0
        -> worse: (1.032142635659932 [based on 29 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0296591897043235 [based on 17 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
372/100000000, 8717.0/36000.0
        -> worse: (1.0293734933272334 [based on 19 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
373/100000000, 8746.0/36000.0
        -> worse: (1.0344653607944372 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
        -> worse: (1.0470109924559148 [based on 4 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
375/100000000, 8782.0/36000.0
        -> worse: (1.0319868694241114 [based on 6 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
376/100000000, 8809.0/36000.0
        -> worse: (1.0333417604731958 [based on 6 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.0352543760606927 [based on 5 runs with cutoff 260.0])
          
============= Performing 8 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0303661820061836 [based on 64 runs with cutoff 260.0]) ============ 

378/100000000, 8822.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8822.0, 1.030517726139279 [65, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
379/100000000, 8869.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8869.0, 1.0305149871633767 [66, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8879.0, 1.0303192356968722 [67, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
381/100000000, 8934.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8934.0, 1.0302890920940706 [68, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
382/100000000, 8986.0/36000.0
 Same incumbent, new precision:
New Incumbent: 8986.0, 1.0303719119684362 [69, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 8993.0, 1.030775696147667 [70, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
384/100000000, 9001.0/36000.0
 Same incumbent, new precision:
New Incumbent: 9001.0, 1.0310096190125455 [71, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 9009.0, 1.0305789298595933 [72, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 8 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])

   LM for iteration 7: grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 7): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 7): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0305789298595933, based on 72 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 9009.0, 1.0305789298595933 [72, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])
385/100000000, 9009.0/36000.0
iteration 8, flip 20, evaluation count 385
    perturb to ---> grid=2x200 neigh=Compact9 updPol=ls (1.0395589852753937 [based on 5 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=uc (1.0281062016587967 [based on 9 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Linear5 updPol=uc (1.01564458398228 [based on 1 runs with cutoff 260.0])
386/100000000, 9055.0/36000.0
   BLS in iteration 8, start with grid=2x200 neigh=Linear5 updPol=uc (1.0288742611821524 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
388/100000000, 9072.0/36000.0
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: uc->synchronous"], evaluating ...
389/100000000, 9108.0/36000.0
390/100000000, 9160.0/36000.0
        -> worse: (1.0324095039073196 [based on 3 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
392/100000000, 9177.0/36000.0
393/100000000, 9208.0/36000.0
394/100000000, 9249.0/36000.0
396/100000000, 9337.0/36000.0
        -> worse: (1.0281062016587967 [based on 9 runs with cutoff 260.0])
    Changing ["updPol: uc->ss"], evaluating ...
397/100000000, 9356.0/36000.0
398/100000000, 9409.0/36000.0
400/100000000, 9425.0/36000.0
402/100000000, 9437.0/36000.0
403/100000000, 9514.0/36000.0
405/100000000, 9532.0/36000.0
407/100000000, 9543.0/36000.0
409/100000000, 9558.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Linear5 updPol=ss (1.0305178992590216 [based on 27 runs with cutoff 260.0]) with flip 20

          
============= Performing 6 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0305178992590216 [based on 27 runs with cutoff 260.0]) ============ 

411/100000000, 9570.0/36000.0
412/100000000, 9597.0/36000.0
414/100000000, 9650.0/36000.0
416/100000000, 9758.0/36000.0
          -> After 6 bonus runs: grid=2x200 neigh=Linear5 updPol=ss (1.0309579069615233 [based on 33 runs with cutoff 260.0])

    Changing ["updPol: ss->ls"], evaluating ...
417/100000000, 9814.0/36000.0
        -> worse: (1.0281576840391082 [based on 11 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
418/100000000, 9839.0/36000.0
        -> worse: (1.0285376754361875 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: ss->nrs"], evaluating ...
419/100000000, 9890.0/36000.0
        -> worse: (1.031455812464434 [based on 7 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
420/100000000, 9947.0/36000.0
421/100000000, 9984.0/36000.0
423/100000000, 9999.0/36000.0
424/100000000, 10027.0/36000.0
425/100000000, 10069.0/36000.0
427/100000000, 10164.0/36000.0
428/100000000, 10181.0/36000.0
429/100000000, 10197.0/36000.0
        -> worse: (1.0262660048160333 [based on 12 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
431/100000000, 10228.0/36000.0
        -> worse: (1.0349132768942886 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
432/100000000, 10274.0/36000.0
433/100000000, 10314.0/36000.0
435/100000000, 10329.0/36000.0
436/100000000, 10353.0/36000.0
437/100000000, 10394.0/36000.0
439/100000000, 10477.0/36000.0
440/100000000, 10493.0/36000.0
441/100000000, 10533.0/36000.0
443/100000000, 10549.0/36000.0
445/100000000, 10565.0/36000.0
446/100000000, 10695.0/36000.0
448/100000000, 10712.0/36000.0
450/100000000, 10724.0/36000.0
452/100000000, 10735.0/36000.0
454/100000000, 10746.0/36000.0
455/100000000, 10821.0/36000.0
457/100000000, 10837.0/36000.0
459/100000000, 10873.0/36000.0
        -> worse: (1.0301424060098854 [based on 29 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
460/100000000, 10913.0/36000.0
        -> worse: (1.0276565198667056 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: ss->frs"], evaluating ...
461/100000000, 10950.0/36000.0
        -> worse: (1.0403041070056784 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
462/100000000, 10974.0/36000.0
        -> worse: (1.0323474480764396 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
463/100000000, 11001.0/36000.0
        -> worse: (1.0344333143461557 [based on 2 runs with cutoff 260.0])
          
============= Performing 10 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0309579069615233 [based on 33 runs with cutoff 260.0]) ============ 

465/100000000, 11059.0/36000.0
466/100000000, 11076.0/36000.0
468/100000000, 11088.0/36000.0
470/100000000, 11102.0/36000.0
472/100000000, 11242.0/36000.0
          -> After 10 bonus runs for LM: grid=2x200 neigh=Linear5 updPol=ss (1.0336859894310573 [based on 43 runs with cutoff 260.0])

   LM for iteration 8: grid=2x200 neigh=Linear5 updPol=ss (1.0336859894310573 [based on 43 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 8): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 8): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0305789298595933, based on 72 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Linear5 updPol=ss (1.0336859894310573 [based on 43 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=2x200 neigh=Linear5 updPol=ss (1.0336859894310573 [based on 43 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0])
473/100000000, 11248.0/36000.0
iteration 9, flip 22, evaluation count 473
    perturb to ---> grid=2x200 neigh=Compact9 updPol=uc (1.0281062016587967 [based on 9 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=uc (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=synchronous (1.01564458398228 [based on 1 runs with cutoff 260.0])
474/100000000, 11292.0/36000.0
   BLS in iteration 9, start with grid=4x100 neigh=Compact9 updPol=synchronous (1.032452908770304 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 4x100->2x200"], evaluating ...
475/100000000, 11357.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=synchronous (1.0319401567593214 [based on 23 runs with cutoff 260.0]) with flip 22

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Compact9 updPol=synchronous (1.0319401567593214 [based on 23 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=2x200 neigh=Compact9 updPol=synchronous (1.0306093168943498 [based on 24 runs with cutoff 260.0])

    Changing ["updPol: synchronous->uc"], evaluating ...
477/100000000, 11381.0/36000.0
        -> worse: (1.029039796890477 [based on 10 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: synchronous->ss"], evaluating ...
479/100000000, 11425.0/36000.0
        -> worse: (1.0328491741697514 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: synchronous->frs"], evaluating ...
480/100000000, 11439.0/36000.0
        -> worse: (1.0301347951999884 [based on 18 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
481/100000000, 11474.0/36000.0
        -> worse: (1.0327291090131354 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
        -> worse: (1.037116300539225 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
483/100000000, 11485.0/36000.0
        -> worse: (1.038966329059138 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: synchronous->nrs"], evaluating ...
484/100000000, 11544.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0]) with flip 23

          
============= Performing 8 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0305789298595933 [based on 72 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 11553.0, 1.030160040409462 [73, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
486/100000000, 11633.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11633.0, 1.0301840668819282 [74, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
487/100000000, 11658.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11658.0, 1.0300170412103746 [75, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 11661.0, 1.0297969223771954 [76, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
489/100000000, 11680.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11680.0, 1.0298229952677371 [77, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 11686.0, 1.0301924030785943 [78, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
491/100000000, 11692.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11692.0, 1.0302748533162376 [79, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 11698.0, 1.0302658009988603 [80, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 8 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0302658009988603 [based on 80 runs with cutoff 260.0])

    Changing ["grid: 2x200->1x400"], evaluating ...
        -> worse: (1.0344184663035516 [based on 20 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
494/100000000, 11759.0/36000.0
        -> worse: (1.033580233638999 [based on 7 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0353578121045848 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
496/100000000, 11777.0/36000.0
        -> worse: (1.0376087939647318 [based on 5 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
        -> worse: (1.0332849060899496 [based on 30 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0275238359063796 [based on 8 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
499/100000000, 11806.0/36000.0
        -> worse: (1.0369867725436093 [based on 6 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
500/100000000, 11840.0/36000.0
        -> worse: (1.0329629531882474 [based on 7 runs with cutoff 260.0])
          
============= Performing 8 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0302658009988603 [based on 80 runs with cutoff 260.0]) ============ 

501/100000000, 11878.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11878.0, 1.0302985288157591 [81, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
502/100000000, 11952.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11952.0, 1.0302321259141065 [82, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 11959.0, 1.0298678834332138 [83, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
504/100000000, 11966.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11966.0, 1.0296985584397502 [84, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
505/100000000, 11982.0/36000.0
 Same incumbent, new precision:
New Incumbent: 11982.0, 1.0294794002310603 [85, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
506/100000000, 12064.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12064.0, 1.0295352272700582 [86, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
507/100000000, 12227.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12227.0, 1.0294702885664868 [87, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
508/100000000, 12271.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12271.0, 1.0292782032417571 [88, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 8 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0])

   LM for iteration 9: grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 9): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 9): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0292782032417571, based on 88 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 12271.0, 1.0292782032417571 [88, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0])
508/100000000, 12271.0/36000.0
iteration 10, flip 25, evaluation count 508
    perturb to ---> grid=4x100 neigh=Compact9 updPol=nrs (1.033580233638999 [based on 7 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=uc (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=uc (1.029039796890477 [based on 10 runs with cutoff 260.0])
509/100000000, 12299.0/36000.0
   BLS in iteration 10, start with grid=2x200 neigh=Compact9 updPol=uc (1.0301976053280664 [based on 11 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0]) with flip 25

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0292782032417571 [based on 88 runs with cutoff 260.0]) ============ 

511/100000000, 12311.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12311.0, 1.029433006206702 [89, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 1 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.029433006206702 [based on 89 runs with cutoff 260.0])

    Changing ["grid: 2x200->20x20"], evaluating ...
512/100000000, 12337.0/36000.0
        -> worse: (1.0345947213708355 [based on 6 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0288425840397164 [based on 8 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
514/100000000, 12349.0/36000.0
        -> worse: (1.0294242120860009 [based on 26 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.029382704434124 [based on 8 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
516/100000000, 12431.0/36000.0
517/100000000, 12447.0/36000.0
518/100000000, 12486.0/36000.0
520/100000000, 12500.0/36000.0
522/100000000, 12514.0/36000.0
523/100000000, 12613.0/36000.0
        -> worse: (1.026757809806371 [based on 16 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
524/100000000, 12668.0/36000.0
        -> worse: (1.0335828783394923 [based on 31 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
525/100000000, 12706.0/36000.0
        -> worse: (1.0357414437097179 [based on 7 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
        -> worse: (1.034714325596724 [based on 21 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
527/100000000, 12768.0/36000.0
        -> worse: (1.0343451919048399 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.029852967478818 [based on 19 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
529/100000000, 12781.0/36000.0
        -> worse: (1.0287430273985325 [based on 8 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.029433006206702 [based on 89 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 12788.0, 1.0295273758285919 [90, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
531/100000000, 12816.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12816.0, 1.0295678198421487 [91, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 12819.0, 1.0299682864586521 [92, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
533/100000000, 12827.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12827.0, 1.0296460468193118 [93, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 12832.0, 1.0296612205329359 [94, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
535/100000000, 12840.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12840.0, 1.0297466076107498 [95, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
536/100000000, 12852.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12852.0, 1.0295831059186853 [96, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 12857.0, 1.0295906691780952 [97, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 12860.0, 1.0300857287668466 [98, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
539/100000000, 12905.0/36000.0
 Same incumbent, new precision:
New Incumbent: 12905.0, 1.0299691027062592 [99, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 12908.0, 1.0300715771857705 [100, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 11 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])

   LM for iteration 10: grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 10): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 10): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0300715771857705, based on 100 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 12908.0, 1.0300715771857705 [100, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])
540/100000000, 12908.0/36000.0
iteration 11, flip 27, evaluation count 540
    perturb to ---> grid=1x400 neigh=Compact9 updPol=nrs (1.034714325596724 [based on 21 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Linear5 updPol=nrs (1.0257925295323773 [based on 3 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Linear5 updPol=nrs (1.0307966934427735 [based on 1 runs with cutoff 260.0])
541/100000000, 12941.0/36000.0
   BLS in iteration 11, start with grid=4x100 neigh=Linear5 updPol=nrs (1.0378723837526904 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0401016745152996 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
543/100000000, 12998.0/36000.0
          -> Take improving step to neighbour grid=4x100 neigh=Linear5 updPol=uc (1.0278071200000423 [based on 2 runs with cutoff 260.0]) with flip 27

          
============= Performing 2 bonus runs of state: grid=4x100 neigh=Linear5 updPol=uc (1.0278071200000423 [based on 2 runs with cutoff 260.0]) ============ 

544/100000000, 13016.0/36000.0
          -> After 2 bonus runs: grid=4x100 neigh=Linear5 updPol=uc (1.035605665825994 [based on 4 runs with cutoff 260.0])

    Changing ["grid: 4x100->10x40"], evaluating ...
546/100000000, 13029.0/36000.0
547/100000000, 13047.0/36000.0
        -> worse: (1.0328900551348492 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 4x100->1x400"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 4x100->20x20"], evaluating ...
549/100000000, 13063.0/36000.0
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 4x100->2x200"], evaluating ...
551/100000000, 13098.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Linear5 updPol=uc (1.034361673809357 [based on 23 runs with cutoff 260.0]) with flip 28

          
============= Performing 4 bonus runs of state: grid=2x200 neigh=Linear5 updPol=uc (1.034361673809357 [based on 23 runs with cutoff 260.0]) ============ 

553/100000000, 13183.0/36000.0
555/100000000, 13197.0/36000.0
          -> After 4 bonus runs: grid=2x200 neigh=Linear5 updPol=uc (1.0306527531690495 [based on 27 runs with cutoff 260.0])

    Changing ["neigh: Linear5->Compact13"], evaluating ...
556/100000000, 13235.0/36000.0
        -> worse: (1.0302182465824692 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: uc->ss"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Linear5 updPol=ss (1.0336859894310573 [based on 43 runs with cutoff 260.0]) with flip 29

          
============= Performing 2 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0336859894310573 [based on 43 runs with cutoff 260.0]) ============ 

558/100000000, 13267.0/36000.0
          -> After 2 bonus runs: grid=2x200 neigh=Linear5 updPol=ss (1.0332041589542076 [based on 45 runs with cutoff 260.0])

    Changing ["grid: 2x200->1x400"], evaluating ...
        -> worse: (1.0313513507615713 [based on 30 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
561/100000000, 13292.0/36000.0
        -> worse: (1.032174811585403 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
562/100000000, 13303.0/36000.0
        -> worse: (1.0299127388006484 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.0276321968601219 [based on 13 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
564/100000000, 13342.0/36000.0
        -> worse: (1.0331272991077984 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: ss->frs"], evaluating ...
565/100000000, 13392.0/36000.0
        -> worse: (1.0312838792872234 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: ss->synchronous"], evaluating ...
567/100000000, 13428.0/36000.0
        -> worse: (1.0315121828831366 [based on 6 runs with cutoff 260.0])
    Changing ["updPol: ss->ls"], evaluating ...
        -> worse: (1.0281530939351324 [based on 12 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
569/100000000, 13502.0/36000.0
        -> worse: (1.0306124723181298 [based on 9 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
        -> worse: (1.038116255503865 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: ss->nrs"], evaluating ...
571/100000000, 13515.0/36000.0
        -> worse: (1.029090335615435 [based on 17 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0332041589542076 [based on 45 runs with cutoff 260.0]) ============ 

573/100000000, 13558.0/36000.0
574/100000000, 13641.0/36000.0
576/100000000, 13655.0/36000.0
577/100000000, 13706.0/36000.0
579/100000000, 13717.0/36000.0
          -> After 11 bonus runs for LM: grid=2x200 neigh=Linear5 updPol=ss (1.0331878080397865 [based on 56 runs with cutoff 260.0])

   LM for iteration 11: grid=2x200 neigh=Linear5 updPol=ss (1.0331878080397865 [based on 56 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 11): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 11): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0300715771857705, based on 100 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Linear5 updPol=ss (1.0331878080397865 [based on 56 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=2x200 neigh=Linear5 updPol=ss (1.0331878080397865 [based on 56 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0])
582/100000000, 13725.0/36000.0
iteration 12, flip 31, evaluation count 582
    perturb to ---> grid=2x200 neigh=Compact9 updPol=synchronous (1.0294242120860009 [based on 26 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=synchronous (1.0250456447172145 [based on 2 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.0343451919048399 [based on 7 runs with cutoff 260.0])
583/100000000, 13728.0/36000.0
   BLS in iteration 12, start with grid=10x40 neigh=Compact9 updPol=nrs (1.0300520429167348 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
584/100000000, 13758.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=nrs (1.034714325596724 [based on 21 runs with cutoff 260.0]) with flip 31

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact9 updPol=nrs (1.034714325596724 [based on 21 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=1x400 neigh=Compact9 updPol=nrs (1.0331364017059637 [based on 22 runs with cutoff 260.0])

    Changing ["grid: 1x400->20x20"], evaluating ...
586/100000000, 13775.0/36000.0
        -> worse: (1.0357790652831291 [based on 7 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0]) with flip 32

          
============= Performing 2 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0300715771857705 [based on 100 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 13785.0, 1.0297738387977926 [101, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
589/100000000, 13792.0/36000.0
 Same incumbent, new precision:
New Incumbent: 13792.0, 1.030056809049918 [102, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 2 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.030056809049918 [based on 102 runs with cutoff 260.0])

    Changing ["updPol: nrs->synchronous"], evaluating ...
        -> worse: (1.0287507091532377 [based on 27 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
591/100000000, 13866.0/36000.0
        -> worse: (1.0313929667154558 [based on 9 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
        -> worse: (1.0350633560061842 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
        -> worse: (1.032533413391383 [based on 32 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0323295134176733 [based on 20 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
595/100000000, 13886.0/36000.0
597/100000000, 13898.0/36000.0
        -> worse: (1.0349770675577745 [based on 20 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
598/100000000, 13967.0/36000.0
        -> worse: (1.0307548955686205 [based on 9 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.031985762071478 [based on 13 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
600/100000000, 13989.0/36000.0
        -> worse: (1.0286582361564274 [based on 10 runs with cutoff 260.0])
          
============= Performing 9 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.030056809049918 [based on 102 runs with cutoff 260.0]) ============ 

601/100000000, 14050.0/36000.0
 Same incumbent, new precision:
New Incumbent: 14050.0, 1.03021691418563 [103, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 14052.0, 1.0300541362596987 [104, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 14060.0, 1.0299973030631033 [105, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
604/100000000, 14063.0/36000.0
 Same incumbent, new precision:
New Incumbent: 14063.0, 1.0303408261338332 [106, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 14066.0, 1.0304331226247074 [107, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
606/100000000, 14074.0/36000.0
 Same incumbent, new precision:
New Incumbent: 14074.0, 1.0304417032205924 [108, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 14078.0, 1.0315143037757057 [109, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
608/100000000, 14109.0/36000.0
 Same incumbent, new precision:
New Incumbent: 14109.0, 1.031728707234204 [110, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
609/100000000, 14145.0/36000.0
 Same incumbent, new precision:
New Incumbent: 14145.0, 1.0317777576702183 [111, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 9 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0])

   LM for iteration 12: grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 12): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 12): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317777576702183, based on 111 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 14145.0, 1.0317777576702183 [111, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0])
609/100000000, 14145.0/36000.0
iteration 13, flip 34, evaluation count 609
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.0314974402613688 [based on 9 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=uc (1.033815940760191 [based on 5 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=uc (1.0124326649325113 [based on 1 runs with cutoff 260.0])
610/100000000, 14182.0/36000.0
   BLS in iteration 13, start with grid=1x400 neigh=Compact9 updPol=uc (1.021224028295249 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: uc->synchronous"], evaluating ...
611/100000000, 14227.0/36000.0
        -> worse: (1.0240294814323434 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0216144939877068 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: uc->frs"], evaluating ...
613/100000000, 14262.0/36000.0
614/100000000, 14304.0/36000.0
        -> worse: (1.022852793810913 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
615/100000000, 14338.0/36000.0
        -> worse: (1.0306652663256661 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 1x400->10x40"], evaluating ...
617/100000000, 14351.0/36000.0
        -> worse: (1.033815940760191 [based on 5 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
619/100000000, 14397.0/36000.0
        -> worse: (1.0321654959887994 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 1x400->4x100"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
621/100000000, 14428.0/36000.0
622/100000000, 14464.0/36000.0
624/100000000, 14545.0/36000.0
625/100000000, 14561.0/36000.0
626/100000000, 14589.0/36000.0
628/100000000, 14603.0/36000.0
630/100000000, 14619.0/36000.0
631/100000000, 14741.0/36000.0
633/100000000, 14753.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=nrs (1.033444234269069 [based on 23 runs with cutoff 260.0]) with flip 34

          
============= Performing 10 bonus runs of state: grid=1x400 neigh=Compact9 updPol=nrs (1.033444234269069 [based on 23 runs with cutoff 260.0]) ============ 

635/100000000, 14767.0/36000.0
636/100000000, 14853.0/36000.0
638/100000000, 14868.0/36000.0
640/100000000, 14898.0/36000.0
642/100000000, 14949.0/36000.0
644/100000000, 15033.0/36000.0
          -> After 10 bonus runs: grid=1x400 neigh=Compact9 updPol=nrs (1.0312001340467198 [based on 33 runs with cutoff 260.0])

    Changing ["grid: 1x400->2x200"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0]) with flip 35

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0317777576702183 [based on 111 runs with cutoff 260.0]) ============ 

646/100000000, 15050.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15050.0, 1.031730398463105 [112, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 1 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.031730398463105 [based on 112 runs with cutoff 260.0])

    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0334215408064449 [based on 21 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
648/100000000, 15074.0/36000.0
        -> worse: (1.029360681114021 [based on 10 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
649/100000000, 15184.0/36000.0
        -> worse: (1.0324804955656461 [based on 33 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
650/100000000, 15200.0/36000.0
        -> worse: (1.0291608874932399 [based on 10 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
        -> worse: (1.0295046675223758 [based on 28 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
652/100000000, 15282.0/36000.0
        -> worse: (1.0364558325731814 [based on 9 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
653/100000000, 15303.0/36000.0
        -> worse: (1.0292575347781925 [based on 11 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0347314914770613 [based on 21 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
655/100000000, 15316.0/36000.0
        -> worse: (1.031306682122738 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
656/100000000, 15334.0/36000.0
        -> worse: (1.031813333560062 [based on 10 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0306502083441405 [based on 14 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.031730398463105 [based on 112 runs with cutoff 260.0]) ============ 

658/100000000, 15357.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15357.0, 1.0316641712291033 [113, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
659/100000000, 15504.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15504.0, 1.0316306466244776 [114, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 15511.0, 1.0317225276132742 [115, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
661/100000000, 15518.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15518.0, 1.0318536719999534 [116, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
662/100000000, 15567.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15567.0, 1.031823037800863 [117, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 15571.0, 1.031810272582902 [118, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 15577.0, 1.0319664583258266 [119, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
665/100000000, 15585.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15585.0, 1.0317000711731115 [120, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 15590.0, 1.0314380871138296 [121, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
667/100000000, 15630.0/36000.0
 Same incumbent, new precision:
New Incumbent: 15630.0, 1.0314809893261012 [122, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 15638.0, 1.0313665068023732 [123, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 11 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0])

   LM for iteration 13: grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 13): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 13): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0313665068023732, based on 123 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 15638.0, 1.0313665068023732 [123, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0])
668/100000000, 15638.0/36000.0
iteration 14, flip 37, evaluation count 668
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.031813333560062 [based on 10 runs with cutoff 260.0])
    perturb to ---> grid=20x20 neigh=Compact9 updPol=nrs (1.031306682122738 [based on 8 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.031813333560062 [based on 10 runs with cutoff 260.0])
669/100000000, 15678.0/36000.0
   BLS in iteration 14, start with grid=10x40 neigh=Compact9 updPol=nrs (1.0328281624225157 [based on 11 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
670/100000000, 15764.0/36000.0
        -> worse: (1.0343946232490495 [based on 9 runs with cutoff 260.0])
    Changing ["grid: 10x40->4x100"], evaluating ...
671/100000000, 15832.0/36000.0
          -> Take improving step to neighbour grid=4x100 neigh=Compact9 updPol=nrs (1.0293142472403953 [based on 11 runs with cutoff 260.0]) with flip 37

          
============= Performing 2 bonus runs of state: grid=4x100 neigh=Compact9 updPol=nrs (1.0293142472403953 [based on 11 runs with cutoff 260.0]) ============ 

673/100000000, 15844.0/36000.0
          -> After 2 bonus runs: grid=4x100 neigh=Compact9 updPol=nrs (1.031858791297691 [based on 13 runs with cutoff 260.0])

    Changing ["updPol: nrs->ss"], evaluating ...
675/100000000, 15859.0/36000.0
        -> worse: (1.0441154306402933 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
677/100000000, 15871.0/36000.0
678/100000000, 15894.0/36000.0
679/100000000, 15947.0/36000.0
681/100000000, 16020.0/36000.0
682/100000000, 16036.0/36000.0
683/100000000, 16057.0/36000.0
685/100000000, 16071.0/36000.0
          -> Take improving step to neighbour grid=4x100 neigh=Compact9 updPol=synchronous (1.0305170233431258 [based on 13 runs with cutoff 260.0]) with flip 38

          
============= Performing 2 bonus runs of state: grid=4x100 neigh=Compact9 updPol=synchronous (1.0305170233431258 [based on 13 runs with cutoff 260.0]) ============ 

687/100000000, 16084.0/36000.0
          -> After 2 bonus runs: grid=4x100 neigh=Compact9 updPol=synchronous (1.0288011464203892 [based on 15 runs with cutoff 260.0])

    Changing ["grid: 4x100->1x400"], evaluating ...
688/100000000, 16121.0/36000.0
690/100000000, 16135.0/36000.0
691/100000000, 16156.0/36000.0
692/100000000, 16190.0/36000.0
        -> worse: (1.0284152632963548 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: synchronous->uc"], evaluating ...
693/100000000, 16217.0/36000.0
        -> worse: (1.0328505777943837 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
694/100000000, 16252.0/36000.0
        -> worse: (1.0342555128748137 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 4x100->5x80"], evaluating ...
        -> worse: (1.044879174369957 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: synchronous->ls"], evaluating ...
696/100000000, 16289.0/36000.0
697/100000000, 16306.0/36000.0
        -> worse: (1.0401282754158254 [based on 4 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
699/100000000, 16319.0/36000.0
        -> worse: (1.0240866506171868 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 4x100->10x40"], evaluating ...
700/100000000, 16337.0/36000.0
702/100000000, 16351.0/36000.0
703/100000000, 16382.0/36000.0
704/100000000, 16437.0/36000.0
        -> worse: (1.0285481149213829 [based on 7 runs with cutoff 260.0])
    Changing ["grid: 4x100->20x20"], evaluating ...
705/100000000, 16462.0/36000.0
        -> worse: (1.0424620386692034 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: synchronous->frs"], evaluating ...
706/100000000, 16488.0/36000.0
        -> worse: (1.0497163665944444 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 4x100->2x200"], evaluating ...
708/100000000, 16598.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=synchronous (1.0295046675223758 [based on 28 runs with cutoff 260.0]) with flip 39

          
============= Performing 10 bonus runs of state: grid=2x200 neigh=Compact9 updPol=synchronous (1.0295046675223758 [based on 28 runs with cutoff 260.0]) ============ 

709/100000000, 16616.0/36000.0
711/100000000, 16682.0/36000.0
713/100000000, 16757.0/36000.0
715/100000000, 16782.0/36000.0
716/100000000, 16797.0/36000.0
718/100000000, 16809.0/36000.0
          -> After 10 bonus runs: grid=2x200 neigh=Compact9 updPol=synchronous (1.0321974391419073 [based on 38 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Linear5"], evaluating ...
719/100000000, 16845.0/36000.0
        -> worse: (1.0310489382864556 [based on 7 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
720/100000000, 16879.0/36000.0
        -> worse: (1.042546853465416 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: synchronous->nrs"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0]) with flip 40

          
============= Performing 3 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0313665068023732 [based on 123 runs with cutoff 260.0]) ============ 

722/100000000, 16956.0/36000.0
 Same incumbent, new precision:
New Incumbent: 16956.0, 1.0313180655455052 [124, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 16964.0, 1.031182146998067 [125, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
724/100000000, 16983.0/36000.0
 Same incumbent, new precision:
New Incumbent: 16983.0, 1.0310285542676696 [126, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 3 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0310285542676696 [based on 126 runs with cutoff 260.0])

    Changing ["grid: 2x200->1x400"], evaluating ...
725/100000000, 17013.0/36000.0
        -> worse: (1.0337356846887138 [based on 35 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
726/100000000, 17035.0/36000.0
        -> worse: (1.0294012190801178 [based on 11 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0331527873190132 [based on 22 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
728/100000000, 17049.0/36000.0
        -> worse: (1.0300740533182944 [based on 15 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0319023798606974 [based on 22 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
730/100000000, 17061.0/36000.0
        -> worse: (1.029388115906737 [based on 12 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
        -> worse: (1.03382243713359 [based on 34 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
732/100000000, 17080.0/36000.0
        -> worse: (1.033917260385974 [based on 10 runs with cutoff 260.0])
          
============= Performing 8 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0310285542676696 [based on 126 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 17087.0, 1.0309074206433755 [127, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
734/100000000, 17100.0/36000.0
 Same incumbent, new precision:
New Incumbent: 17100.0, 1.030852307020473 [128, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 17103.0, 1.0317442422349308 [129, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 17107.0, 1.032010907668204 [130, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
737/100000000, 17156.0/36000.0
 Same incumbent, new precision:
New Incumbent: 17156.0, 1.031982347080709 [131, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 17163.0, 1.0321007295688371 [132, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
739/100000000, 17297.0/36000.0
 Same incumbent, new precision:
New Incumbent: 17297.0, 1.0320982364702058 [133, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 17303.0, 1.0320384534855205 [134, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 8 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])

   LM for iteration 14: grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 14): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 14): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0320384534855205, based on 134 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 17303.0, 1.0320384534855205 [134, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])
740/100000000, 17303.0/36000.0
iteration 15, flip 42, evaluation count 740
    perturb to ---> grid=2x200 neigh=Linear5 updPol=nrs (1.0331527873190132 [based on 22 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Linear5 updPol=nrs (1.0257925295323773 [based on 3 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=nrs (1.0337356846887138 [based on 35 runs with cutoff 260.0])
741/100000000, 17317.0/36000.0
   BLS in iteration 15, start with grid=1x400 neigh=Compact9 updPol=nrs (1.0335339580716252 [based on 36 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
744/100000000, 17332.0/36000.0
746/100000000, 17343.0/36000.0
747/100000000, 17408.0/36000.0
749/100000000, 17424.0/36000.0
751/100000000, 17451.0/36000.0
753/100000000, 17507.0/36000.0
755/100000000, 17576.0/36000.0
757/100000000, 17612.0/36000.0
758/100000000, 17628.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=uc (1.032220165009511 [based on 36 runs with cutoff 260.0]) with flip 42

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.032220165009511 [based on 36 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=1x400 neigh=Compact9 updPol=uc (1.0316409483659708 [based on 37 runs with cutoff 260.0])

    Changing ["grid: 1x400->10x40"], evaluating ...
760/100000000, 17662.0/36000.0
        -> worse: (1.033714580810537 [based on 6 runs with cutoff 260.0])
    Changing ["updPol: uc->frs"], evaluating ...
762/100000000, 17676.0/36000.0
763/100000000, 17702.0/36000.0
764/100000000, 17737.0/36000.0
766/100000000, 17823.0/36000.0
767/100000000, 17837.0/36000.0
768/100000000, 17887.0/36000.0
770/100000000, 17900.0/36000.0
772/100000000, 17913.0/36000.0
773/100000000, 18058.0/36000.0
775/100000000, 18072.0/36000.0
777/100000000, 18083.0/36000.0
        -> worse: (1.032090327471779 [based on 20 runs with cutoff 260.0])
    Changing ["updPol: uc->ls"], evaluating ...
778/100000000, 18105.0/36000.0
        -> worse: (1.0279688701762606 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
779/100000000, 18225.0/36000.0
        -> worse: (1.0300410874209747 [based on 16 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
780/100000000, 18261.0/36000.0
        -> worse: (1.0315328191802118 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: uc->ss"], evaluating ...
781/100000000, 18282.0/36000.0
        -> worse: (1.0279688701762606 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->4x100"], evaluating ...
782/100000000, 18311.0/36000.0
        -> worse: (1.0317775381069294 [based on 3 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
783/100000000, 18350.0/36000.0
        -> worse: (1.0280152841849342 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
784/100000000, 18392.0/36000.0
        -> worse: (1.0364288598031792 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: uc->synchronous"], evaluating ...
        -> worse: (1.0248633553843105 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
786/100000000, 18404.0/36000.0
        -> worse: (1.046983431715952 [based on 4 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0316409483659708 [based on 37 runs with cutoff 260.0]) ============ 

787/100000000, 18416.0/36000.0
789/100000000, 18429.0/36000.0
791/100000000, 18558.0/36000.0
793/100000000, 18598.0/36000.0
796/100000000, 18652.0/36000.0
797/100000000, 18733.0/36000.0
          -> After 11 bonus runs for LM: grid=1x400 neigh=Compact9 updPol=uc (1.032419786502786 [based on 48 runs with cutoff 260.0])

   LM for iteration 15: grid=1x400 neigh=Compact9 updPol=uc (1.032419786502786 [based on 48 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 15): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 15): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0320384534855205, based on 134 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact9 updPol=uc (1.032419786502786 [based on 48 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Compact9 updPol=uc (1.032419786502786 [based on 48 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])
797/100000000, 18733.0/36000.0
iteration 16, flip 44, evaluation count 797
    perturb to ---> grid=20x20 neigh=Compact9 updPol=nrs (1.0343946232490495 [based on 9 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=nrs (1.031858791297691 [based on 13 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=nrs (1.0320384534855205 [based on 134 runs with cutoff 260.0])
798/100000000, 18762.0/36000.0
 Same incumbent, new precision:
New Incumbent: 18762.0, 1.0320098102655484 [135, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
   BLS in iteration 16, start with grid=2x200 neigh=Compact9 updPol=nrs (1.0320098102655484 [based on 135 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0312865028136178 [based on 12 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
800/100000000, 18802.0/36000.0
        -> worse: (1.033725194437149 [based on 11 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
801/100000000, 18819.0/36000.0
        -> worse: (1.0336013469800434 [based on 35 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0334599074641597 [based on 23 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.0316455136795075 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
804/100000000, 18832.0/36000.0
        -> worse: (1.0329192335074873 [based on 37 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
        -> worse: (1.0325622709716606 [based on 40 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.030353816862036 [based on 14 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
807/100000000, 18844.0/36000.0
        -> worse: (1.03226386554751 [based on 23 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0321804792527092 [based on 17 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
809/100000000, 18865.0/36000.0
        -> worse: (1.0344207982489746 [based on 10 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0300099484778094 [based on 12 runs with cutoff 260.0])
          
============= Performing 12 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0320098102655484 [based on 135 runs with cutoff 260.0]) ============ 

811/100000000, 18878.0/36000.0
 Same incumbent, new precision:
New Incumbent: 18878.0, 1.03203537374434 [136, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 18883.0, 1.0320694657013332 [137, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
813/100000000, 18913.0/36000.0
 Same incumbent, new precision:
New Incumbent: 18913.0, 1.0320133053848788 [138, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 18915.0, 1.0318785910287915 [139, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
815/100000000, 18988.0/36000.0
 Same incumbent, new precision:
New Incumbent: 18988.0, 1.031869403720549 [140, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 18990.0, 1.0319286033442145 [141, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
817/100000000, 19004.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19004.0, 1.0317817125509532 [142, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 19012.0, 1.0315594628128346 [143, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
819/100000000, 19019.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19019.0, 1.0313402998766343 [144, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
820/100000000, 19093.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19093.0, 1.0313971724346993 [145, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 19100.0, 1.03130129891739 [146, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
822/100000000, 19132.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19132.0, 1.031329398350385 [147, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 12 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0])

   LM for iteration 16: grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 16): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 16): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.031329398350385, based on 147 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 19132.0, 1.031329398350385 [147, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0])
822/100000000, 19132.0/36000.0
iteration 17, flip 45, evaluation count 822
    perturb to ---> grid=2x200 neigh=Compact9 updPol=ss (1.0316455136795075 [based on 13 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=uc (1.0321804792527092 [based on 17 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=ls (1.033725194437149 [based on 11 runs with cutoff 260.0])
   BLS in iteration 17, start with grid=2x200 neigh=Compact9 updPol=ls (1.0338259697187695 [based on 12 runs with cutoff 260.0])
    Changing ["updPol: ls->nrs"], evaluating ...
824/100000000, 19146.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0]) with flip 45

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.031329398350385 [based on 147 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 19152.0, 1.03176864723958 [148, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 1 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.03176864723958 [based on 148 runs with cutoff 260.0])

    Changing ["updPol: nrs->uc"], evaluating ...
826/100000000, 19159.0/36000.0
        -> worse: (1.0327297969978741 [based on 18 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0324902546331909 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
828/100000000, 19175.0/36000.0
        -> worse: (1.0330469640184812 [based on 38 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0309195378163638 [based on 24 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
830/100000000, 19186.0/36000.0
        -> worse: (1.030155773359437 [based on 14 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.029490204998404 [based on 15 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
832/100000000, 19200.0/36000.0
        -> worse: (1.0320657446531531 [based on 24 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
833/100000000, 19213.0/36000.0
        -> worse: (1.0320600615734885 [based on 41 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0313118967847523 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
835/100000000, 19239.0/36000.0
        -> worse: (1.0336306532652728 [based on 36 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
836/100000000, 19250.0/36000.0
        -> worse: (1.0342788474054336 [based on 11 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.03176864723958 [based on 148 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 19253.0, 1.0315554348419989 [149, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 19260.0, 1.0314983579402366 [150, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
839/100000000, 19284.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19284.0, 1.0314990684225653 [151, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 19291.0, 1.0319065918076198 [152, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
841/100000000, 19298.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19298.0, 1.0316980519918837 [153, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 19304.0, 1.031816712036586 [154, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
843/100000000, 19314.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19314.0, 1.0316886796082636 [155, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 19318.0, 1.0314855470466722 [156, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
845/100000000, 19327.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19327.0, 1.0314428369922204 [157, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
846/100000000, 19359.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19359.0, 1.0314819932258463 [158, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
847/100000000, 19381.0/36000.0
 Same incumbent, new precision:
New Incumbent: 19381.0, 1.031384841588597 [159, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 11 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])

   LM for iteration 17: grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 17): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 17): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.031384841588597, based on 159 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 19381.0, 1.031384841588597 [159, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
847/100000000, 19381.0/36000.0
iteration 18, flip 47, evaluation count 847
    perturb to ---> grid=2x200 neigh=Compact9 updPol=synchronous (1.0320600615734885 [based on 41 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=frs (1.0309195378163638 [based on 24 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=ls (1.034834377930254 [based on 13 runs with cutoff 260.0])
   BLS in iteration 18, start with grid=2x200 neigh=Compact9 updPol=ls (1.0349892007590362 [based on 14 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
850/100000000, 19394.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Linear5 updPol=ls (1.028286463998153 [based on 14 runs with cutoff 260.0]) with flip 47

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ls (1.028286463998153 [based on 14 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=2x200 neigh=Linear5 updPol=ls (1.0278678919287063 [based on 15 runs with cutoff 260.0])

    Changing ["grid: 2x200->10x40"], evaluating ...
852/100000000, 19411.0/36000.0
        -> worse: (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: ls->synchronous"], evaluating ...
        -> worse: (1.0271678210006487 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
854/100000000, 19423.0/36000.0
        -> worse: (1.0202312496646013 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
        -> worse: (1.0284827022981788 [based on 3 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
856/100000000, 19439.0/36000.0
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: ls->frs"], evaluating ...
858/100000000, 19450.0/36000.0
        -> worse: (1.0468235652031224 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.038681045279181 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: ls->ss"], evaluating ...
860/100000000, 19529.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Linear5 updPol=ss (1.0331878080397865 [based on 56 runs with cutoff 260.0]) with flip 48

          
============= Performing 9 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0331878080397865 [based on 56 runs with cutoff 260.0]) ============ 

862/100000000, 19541.0/36000.0
863/100000000, 19552.0/36000.0
864/100000000, 19565.0/36000.0
865/100000000, 19669.0/36000.0
867/100000000, 19709.0/36000.0
869/100000000, 19720.0/36000.0
          -> After 9 bonus runs: grid=2x200 neigh=Linear5 updPol=ss (1.0331544906352381 [based on 65 runs with cutoff 260.0])

    Changing ["grid: 2x200->4x100"], evaluating ...
871/100000000, 19733.0/36000.0
        -> worse: (1.0261343727557704 [based on 15 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
873/100000000, 19747.0/36000.0
874/100000000, 19769.0/36000.0
875/100000000, 19794.0/36000.0
877/100000000, 19852.0/36000.0
878/100000000, 19865.0/36000.0
        -> worse: (1.028025001953076 [based on 10 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
880/100000000, 19879.0/36000.0
881/100000000, 19905.0/36000.0
882/100000000, 19939.0/36000.0
        -> worse: (1.0328401794724011 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: ss->nrs"], evaluating ...
883/100000000, 20041.0/36000.0
885/100000000, 20055.0/36000.0
887/100000000, 20089.0/36000.0
889/100000000, 20142.0/36000.0
891/100000000, 20225.0/36000.0
        -> worse: (1.0332787973268085 [based on 34 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
893/100000000, 20240.0/36000.0
        -> worse: (1.0294567264991625 [based on 15 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0474917644267572 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
895/100000000, 20251.0/36000.0
        -> worse: (1.0432463927565472 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
896/100000000, 20293.0/36000.0
        -> worse: (1.0318222014216747 [based on 31 runs with cutoff 260.0])
    Changing ["updPol: ss->uc"], evaluating ...
897/100000000, 20313.0/36000.0
        -> worse: (1.030747721773836 [based on 29 runs with cutoff 260.0])
          
============= Performing 9 bonus runs of state: grid=2x200 neigh=Linear5 updPol=ss (1.0331544906352381 [based on 65 runs with cutoff 260.0]) ============ 

898/100000000, 20338.0/36000.0
900/100000000, 20379.0/36000.0
901/100000000, 20428.0/36000.0
903/100000000, 20441.0/36000.0
905/100000000, 20456.0/36000.0
906/100000000, 20530.0/36000.0
          -> After 9 bonus runs for LM: grid=2x200 neigh=Linear5 updPol=ss (1.0327326363871798 [based on 74 runs with cutoff 260.0])

   LM for iteration 18: grid=2x200 neigh=Linear5 updPol=ss (1.0327326363871798 [based on 74 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 18): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 18): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.031384841588597, based on 159 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Linear5 updPol=ss (1.0327326363871798 [based on 74 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=2x200 neigh=Linear5 updPol=ss (1.0327326363871798 [based on 74 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
906/100000000, 20530.0/36000.0
iteration 19, flip 50, evaluation count 906
    perturb to ---> grid=2x200 neigh=Compact9 updPol=synchronous (1.0320600615734885 [based on 41 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=synchronous (1.0285481149213829 [based on 7 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=frs (1.0338543764791583 [based on 20 runs with cutoff 260.0])
   BLS in iteration 19, start with grid=10x40 neigh=Compact9 updPol=frs (1.0349433111805477 [based on 21 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
908/100000000, 20559.0/36000.0
        -> worse: (1.0459456711121224 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: frs->ss"], evaluating ...
909/100000000, 20618.0/36000.0
        -> worse: (1.035799301065133 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: frs->ls"], evaluating ...
        -> worse: (1.0370125997106947 [based on 5 runs with cutoff 260.0])
    Changing ["grid: 10x40->4x100"], evaluating ...
911/100000000, 20634.0/36000.0
        -> worse: (1.0397730932755556 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: frs->uc"], evaluating ...
912/100000000, 20688.0/36000.0
        -> worse: (1.0329367079385132 [based on 7 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
913/100000000, 20712.0/36000.0
        -> worse: (1.0459456711121224 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
914/100000000, 20737.0/36000.0
        -> worse: (1.0291349205590805 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=frs (1.0319822152046845 [based on 21 runs with cutoff 260.0]) with flip 50

          
============= Performing 8 bonus runs of state: grid=1x400 neigh=Compact9 updPol=frs (1.0319822152046845 [based on 21 runs with cutoff 260.0]) ============ 

916/100000000, 20749.0/36000.0
918/100000000, 20761.0/36000.0
919/100000000, 20851.0/36000.0
921/100000000, 20868.0/36000.0
923/100000000, 20896.0/36000.0
          -> After 8 bonus runs: grid=1x400 neigh=Compact9 updPol=frs (1.029120453654687 [based on 29 runs with cutoff 260.0])

    Changing ["updPol: frs->ls"], evaluating ...
        -> worse: (1.0356358537608437 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: frs->ss"], evaluating ...
        -> worse: (1.0356358537608437 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: frs->nrs"], evaluating ...
926/100000000, 20909.0/36000.0
927/100000000, 20960.0/36000.0
929/100000000, 21041.0/36000.0
931/100000000, 21076.0/36000.0
932/100000000, 21092.0/36000.0
934/100000000, 21104.0/36000.0
        -> worse: (1.0330469640184812 [based on 38 runs with cutoff 260.0])
    Changing ["updPol: frs->uc"], evaluating ...
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=uc (1.032419786502786 [based on 48 runs with cutoff 260.0]) with flip 51

          
============= Performing 4 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.032419786502786 [based on 48 runs with cutoff 260.0]) ============ 

936/100000000, 21119.0/36000.0
938/100000000, 21181.0/36000.0
          -> After 4 bonus runs: grid=1x400 neigh=Compact9 updPol=uc (1.0313405196488843 [based on 52 runs with cutoff 260.0])

    Changing ["grid: 1x400->4x100"], evaluating ...
        -> worse: (1.0471689153505275 [based on 4 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
941/100000000, 21232.0/36000.0
        -> worse: (1.0287660113109682 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
        -> worse: (1.0326576933127367 [based on 19 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
943/100000000, 21253.0/36000.0
        -> worse: (1.0341630594461264 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: uc->synchronous"], evaluating ...
944/100000000, 21325.0/36000.0
        -> worse: (1.0275114337530273 [based on 9 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
        -> worse: (1.0375867453727616 [based on 5 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
946/100000000, 21339.0/36000.0
948/100000000, 21369.0/36000.0
949/100000000, 21401.0/36000.0
        -> worse: (1.0290537010887297 [based on 7 runs with cutoff 260.0])
          
============= Performing 7 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0313405196488843 [based on 52 runs with cutoff 260.0]) ============ 

952/100000000, 21414.0/36000.0
955/100000000, 21429.0/36000.0
956/100000000, 21440.0/36000.0
          -> After 7 bonus runs for LM: grid=1x400 neigh=Compact9 updPol=uc (1.0316507117944762 [based on 59 runs with cutoff 260.0])

   LM for iteration 19: grid=1x400 neigh=Compact9 updPol=uc (1.0316507117944762 [based on 59 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 19): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 19): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.031384841588597, based on 159 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact9 updPol=uc (1.0316507117944762 [based on 59 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Compact9 updPol=uc (1.0316507117944762 [based on 59 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0])
956/100000000, 21440.0/36000.0
iteration 20, flip 53, evaluation count 956
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.0324902546331909 [based on 13 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=uc (1.0329367079385132 [based on 7 runs with cutoff 260.0])
    perturb to ---> grid=5x80 neigh=Compact9 updPol=uc (1.0375867453727616 [based on 5 runs with cutoff 260.0])
957/100000000, 21471.0/36000.0
   BLS in iteration 20, start with grid=5x80 neigh=Compact9 updPol=uc (1.0368569179876792 [based on 6 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 5x80->20x20"], evaluating ...
        -> worse: (1.048560368604782 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 5x80->2x200"], evaluating ...
960/100000000, 21504.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=uc (1.0326576933127367 [based on 19 runs with cutoff 260.0]) with flip 53

          
============= Performing 3 bonus runs of state: grid=2x200 neigh=Compact9 updPol=uc (1.0326576933127367 [based on 19 runs with cutoff 260.0]) ============ 

963/100000000, 21519.0/36000.0
          -> After 3 bonus runs: grid=2x200 neigh=Compact9 updPol=uc (1.0361267502097198 [based on 22 runs with cutoff 260.0])

    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.037735132280422 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0]) with flip 54

          
============= Performing 2 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.031384841588597 [based on 159 runs with cutoff 260.0]) ============ 

966/100000000, 21531.0/36000.0
 Same incumbent, new precision:
New Incumbent: 21531.0, 1.0314400397702768 [160, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
967/100000000, 21580.0/36000.0
 Same incumbent, new precision:
New Incumbent: 21580.0, 1.0314546313488022 [161, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 2 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0314546313488022 [based on 161 runs with cutoff 260.0])

    Changing ["updPol: nrs->frs"], evaluating ...
968/100000000, 21682.0/36000.0
        -> worse: (1.031610036707743 [based on 25 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
        -> worse: (1.0309401756735717 [based on 14 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
        -> worse: (1.033495442746433 [based on 39 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
971/100000000, 21819.0/36000.0
        -> worse: (1.0293558289868248 [based on 16 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
972/100000000, 21844.0/36000.0
        -> worse: (1.032706358084623 [based on 35 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
973/100000000, 21976.0/36000.0
        -> worse: (1.0321282982477282 [based on 42 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
        -> worse: (1.0330808520929344 [based on 37 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
975/100000000, 22119.0/36000.0
        -> worse: (1.0292613308464746 [based on 16 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
        -> worse: (1.033454699751541 [based on 15 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
977/100000000, 22134.0/36000.0
        -> worse: (1.0344811077760154 [based on 12 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0298459862428786 [based on 14 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0314546313488022 [based on 161 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 22140.0, 1.0316704098501088 [162, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
980/100000000, 22341.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22341.0, 1.0316844312620375 [163, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 22348.0, 1.0317774242206108 [164, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
982/100000000, 22436.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22436.0, 1.0317873925122174 [165, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 22441.0, 1.031595902195879 [166, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 22444.0, 1.0318744088227043 [167, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
985/100000000, 22450.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22450.0, 1.031755920518314 [168, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
986/100000000, 22461.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22461.0, 1.0316472855554757 [169, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
987/100000000, 22496.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22496.0, 1.031632499021836 [170, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 22502.0, 1.0316621684535938 [171, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
989/100000000, 22510.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22510.0, 1.0314780860788635 [172, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 11 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0])

   LM for iteration 20: grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 20): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 20): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0314780860788635, based on 172 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 22510.0, 1.0314780860788635 [172, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0])
989/100000000, 22510.0/36000.0
iteration 21, flip 56, evaluation count 989
    perturb to ---> grid=2x200 neigh=Compact9 updPol=uc (1.036304567620488 [based on 23 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=synchronous (1.0321282982477282 [based on 42 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Linear5 updPol=synchronous (1.0271678210006487 [based on 8 runs with cutoff 260.0])
990/100000000, 22586.0/36000.0
   BLS in iteration 21, start with grid=2x200 neigh=Linear5 updPol=synchronous (1.0293479757849955 [based on 9 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
991/100000000, 22655.0/36000.0
        -> worse: (1.0301849430851036 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
993/100000000, 22703.0/36000.0
        -> worse: (1.0312528120999693 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact9"], evaluating ...
994/100000000, 22717.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=synchronous (1.0321282982477282 [based on 42 runs with cutoff 260.0]) with flip 56

          
============= Performing 3 bonus runs of state: grid=2x200 neigh=Compact9 updPol=synchronous (1.0321282982477282 [based on 42 runs with cutoff 260.0]) ============ 

996/100000000, 22757.0/36000.0
          -> After 3 bonus runs: grid=2x200 neigh=Compact9 updPol=synchronous (1.0322091513348255 [based on 45 runs with cutoff 260.0])

    Changing ["updPol: synchronous->nrs"], evaluating ...
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0]) with flip 57

          
============= Performing 1 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0314780860788635 [based on 172 runs with cutoff 260.0]) ============ 

999/100000000, 22780.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22780.0, 1.031496457680999 [173, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 1 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.031496457680999 [based on 173 runs with cutoff 260.0])

    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0347918773029676 [based on 24 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.0315355301382152 [based on 17 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
1002/100000000, 22839.0/36000.0
        -> worse: (1.0322929218289372 [based on 16 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
        -> worse: (1.0363467369434567 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 2x200->5x80"], evaluating ...
1004/100000000, 22861.0/36000.0
        -> worse: (1.0325628457694003 [based on 38 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0288820644457892 [based on 15 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
1006/100000000, 22879.0/36000.0
        -> worse: (1.0303942660651375 [based on 26 runs with cutoff 260.0])
    Changing ["grid: 2x200->10x40"], evaluating ...
1007/100000000, 22891.0/36000.0
        -> worse: (1.0303446894924302 [based on 15 runs with cutoff 260.0])
    Changing ["grid: 2x200->1x400"], evaluating ...
        -> worse: (1.0334286693857904 [based on 40 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1009/100000000, 22911.0/36000.0
        -> worse: (1.032133014626651 [based on 36 runs with cutoff 260.0])
    Changing ["grid: 2x200->4x100"], evaluating ...
        -> worse: (1.0314465907120032 [based on 17 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.031496457680999 [based on 173 runs with cutoff 260.0]) ============ 

1011/100000000, 22998.0/36000.0
 Same incumbent, new precision:
New Incumbent: 22998.0, 1.0314460595017458 [174, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 23001.0, 1.031328020014299 [175, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1013/100000000, 23055.0/36000.0
 Same incumbent, new precision:
New Incumbent: 23055.0, 1.0313137267168844 [176, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 23064.0, 1.0313139871703498 [177, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1015/100000000, 23086.0/36000.0
 Same incumbent, new precision:
New Incumbent: 23086.0, 1.0313677738597191 [178, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 23091.0, 1.031397596194874 [179, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1017/100000000, 23122.0/36000.0
 Same incumbent, new precision:
New Incumbent: 23122.0, 1.0314732212338016 [180, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 23130.0, 1.0313790742530404 [181, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1019/100000000, 23137.0/36000.0
 Same incumbent, new precision:
New Incumbent: 23137.0, 1.0315288420017303 [182, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 23145.0, 1.0313565532476225 [183, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1021/100000000, 23151.0/36000.0
 Same incumbent, new precision:
New Incumbent: 23151.0, 1.031271162110311 [184, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 11 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])

   LM for iteration 21: grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 21): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 21): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.031271162110311, based on 184 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 23151.0, 1.031271162110311 [184, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])
1021/100000000, 23151.0/36000.0
iteration 22, flip 59, evaluation count 1021
    perturb to ---> grid=2x200 neigh=Compact9 updPol=synchronous (1.032383225233142 [based on 46 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Compact9 updPol=ss (1.0315355301382152 [based on 17 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=ss (1.0356358537608437 [based on 4 runs with cutoff 260.0])
   BLS in iteration 22, start with grid=1x400 neigh=Compact9 updPol=ss (1.028508683008675 [based on 5 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1023/100000000, 23166.0/36000.0
1024/100000000, 23206.0/36000.0
1025/100000000, 23248.0/36000.0
1027/100000000, 23262.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact13 updPol=ss (1.0276164790339597 [based on 5 runs with cutoff 260.0]) with flip 59

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact13 updPol=ss (1.0276164790339597 [based on 5 runs with cutoff 260.0]) ============ 

1028/100000000, 23284.0/36000.0
          -> After 1 bonus runs: grid=1x400 neigh=Compact13 updPol=ss (1.0270669562000714 [based on 6 runs with cutoff 260.0])

    Changing ["updPol: ss->uc"], evaluating ...
        -> worse: (1.0362337096118743 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: ss->frs"], evaluating ...
1030/100000000, 23298.0/36000.0
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: ss->ls"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
1032/100000000, 23342.0/36000.0
1034/100000000, 23415.0/36000.0
1035/100000000, 23430.0/36000.0
        -> worse: (1.028025001953076 [based on 10 runs with cutoff 260.0])
    Changing ["updPol: ss->synchronous"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact13->Linear5"], evaluating ...
1037/100000000, 23468.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Linear5 updPol=ss (1.0318222014216747 [based on 31 runs with cutoff 260.0]) with flip 60

          
============= Performing 6 bonus runs of state: grid=1x400 neigh=Linear5 updPol=ss (1.0318222014216747 [based on 31 runs with cutoff 260.0]) ============ 

1039/100000000, 23545.0/36000.0
1041/100000000, 23578.0/36000.0
1042/100000000, 23595.0/36000.0
          -> After 6 bonus runs: grid=1x400 neigh=Linear5 updPol=ss (1.03106078730252 [based on 37 runs with cutoff 260.0])

    Changing ["grid: 1x400->10x40"], evaluating ...
1044/100000000, 23606.0/36000.0
        -> worse: (1.0379934115414058 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: ss->frs"], evaluating ...
1046/100000000, 23667.0/36000.0
        -> worse: (1.027240863964563 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: ss->nrs"], evaluating ...
1048/100000000, 23681.0/36000.0
1049/100000000, 23702.0/36000.0
        -> worse: (1.0282036956956655 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
        -> worse: (1.0345971142052377 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: ss->synchronous"], evaluating ...
1051/100000000, 23717.0/36000.0
        -> worse: (1.0216144939877068 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
1053/100000000, 23733.0/36000.0
1055/100000000, 23748.0/36000.0
1056/100000000, 23860.0/36000.0
1058/100000000, 23891.0/36000.0
1061/100000000, 23937.0/36000.0
1062/100000000, 23993.0/36000.0
1064/100000000, 24008.0/36000.0
1065/100000000, 24059.0/36000.0
1068/100000000, 24071.0/36000.0
1071/100000000, 24085.0/36000.0
1073/100000000, 24099.0/36000.0
1074/100000000, 24111.0/36000.0
1075/100000000, 24247.0/36000.0
1077/100000000, 24292.0/36000.0
1080/100000000, 24336.0/36000.0
1082/100000000, 24387.0/36000.0
1083/100000000, 24436.0/36000.0
1085/100000000, 24449.0/36000.0
1087/100000000, 24463.0/36000.0
1088/100000000, 24537.0/36000.0
        -> worse: (1.0327326363871798 [based on 74 runs with cutoff 260.0])
    Changing ["grid: 1x400->4x100"], evaluating ...
1089/100000000, 24584.0/36000.0
        -> worse: (1.0254301152704022 [based on 16 runs with cutoff 260.0])
    Changing ["updPol: ss->uc"], evaluating ...
        -> worse: (1.0254219884526385 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
        -> worse: (1.028735157038351 [based on 8 runs with cutoff 260.0])
    Changing ["updPol: ss->ls"], evaluating ...
1092/100000000, 24636.0/36000.0
        -> worse: (1.0266328032301368 [based on 2 runs with cutoff 260.0])
          
============= Performing 10 bonus runs of state: grid=1x400 neigh=Linear5 updPol=ss (1.0312169454933175 [based on 74 runs with cutoff 260.0]) ============ 

1093/100000000, 24655.0/36000.0
1095/100000000, 24683.0/36000.0
1097/100000000, 24694.0/36000.0
1099/100000000, 24728.0/36000.0
1100/100000000, 24789.0/36000.0
1102/100000000, 24802.0/36000.0
          -> After 10 bonus runs for LM: grid=1x400 neigh=Linear5 updPol=ss (1.0312074983701789 [based on 84 runs with cutoff 260.0])

   LM for iteration 22: grid=1x400 neigh=Linear5 updPol=ss (1.0312074983701789 [based on 84 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 22): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 22): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.031271162110311, based on 184 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Linear5 updPol=ss (1.0312074983701789 [based on 84 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Linear5 updPol=ss (1.0312074983701789 [based on 84 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0])
1102/100000000, 24802.0/36000.0
iteration 23, flip 62, evaluation count 1102
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.0303446894924302 [based on 15 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=synchronous (1.0285481149213829 [based on 7 runs with cutoff 260.0])
    perturb to ---> grid=5x80 neigh=Compact9 updPol=synchronous (1.044879174369957 [based on 4 runs with cutoff 260.0])
   BLS in iteration 23, start with grid=5x80 neigh=Compact9 updPol=synchronous (1.0359033394959656 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: synchronous->nrs"], evaluating ...
1104/100000000, 24839.0/36000.0
          -> Take improving step to neighbour grid=5x80 neigh=Compact9 updPol=nrs (1.0325628457694003 [based on 38 runs with cutoff 260.0]) with flip 62

          
============= Performing 1 bonus runs of state: grid=5x80 neigh=Compact9 updPol=nrs (1.0325628457694003 [based on 38 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=5x80 neigh=Compact9 updPol=nrs (1.0329313696334688 [based on 39 runs with cutoff 260.0])

    Changing ["grid: 5x80->20x20"], evaluating ...
        -> worse: (1.0345211949616755 [based on 14 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
1107/100000000, 24855.0/36000.0
        -> worse: (1.0324286635165008 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 5x80->4x100"], evaluating ...
        -> worse: (1.032111879290105 [based on 18 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1109/100000000, 24871.0/36000.0
1111/100000000, 24906.0/36000.0
1112/100000000, 24963.0/36000.0
1114/100000000, 25032.0/36000.0
1115/100000000, 25048.0/36000.0
1116/100000000, 25061.0/36000.0
1118/100000000, 25076.0/36000.0
        -> worse: (1.0294657786144645 [based on 14 runs with cutoff 260.0])
    Changing ["grid: 5x80->1x400"], evaluating ...
        -> worse: (1.0334286693857904 [based on 40 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1121/100000000, 25093.0/36000.0
        -> worse: (1.028968585570597 [based on 15 runs with cutoff 260.0])
    Changing ["grid: 5x80->10x40"], evaluating ...
1122/100000000, 25237.0/36000.0
        -> worse: (1.0301444106910294 [based on 16 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.03190735726874 [based on 14 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
1125/100000000, 25254.0/36000.0
1126/100000000, 25287.0/36000.0
1127/100000000, 25334.0/36000.0
1129/100000000, 25420.0/36000.0
1130/100000000, 25436.0/36000.0
1131/100000000, 25501.0/36000.0
        -> worse: (1.029081153571563 [based on 12 runs with cutoff 260.0])
    Changing ["grid: 5x80->2x200"], evaluating ...
1133/100000000, 25516.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0]) with flip 63

          
============= Performing 10 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.031271162110311 [based on 184 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 25520.0, 1.0313195155619168 [185, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 25523.0, 1.0315081781049196 [186, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1136/100000000, 25531.0/36000.0
 Same incumbent, new precision:
New Incumbent: 25531.0, 1.031521515278981 [187, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 25539.0, 1.0313538476445183 [188, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1138/100000000, 25649.0/36000.0
 Same incumbent, new precision:
New Incumbent: 25649.0, 1.0314002239043865 [189, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 25655.0, 1.0312349595680477 [190, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1140/100000000, 25738.0/36000.0
 Same incumbent, new precision:
New Incumbent: 25738.0, 1.0312372873196831 [191, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1141/100000000, 25753.0/36000.0
 Same incumbent, new precision:
New Incumbent: 25753.0, 1.0312555800713974 [192, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 25756.0, 1.0311624838528344 [193, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1143/100000000, 25804.0/36000.0
 Same incumbent, new precision:
New Incumbent: 25804.0, 1.0312018612250917 [194, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 10 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.0312018612250917 [based on 194 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Compact13"], evaluating ...
1144/100000000, 25926.0/36000.0
        -> worse: (1.0286765952441936 [based on 16 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
1145/100000000, 25939.0/36000.0
        -> worse: (1.031835983638309 [based on 18 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
1146/100000000, 26030.0/36000.0
        -> worse: (1.0346199480439162 [based on 25 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
        -> worse: (1.0342998528131444 [based on 17 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
1148/100000000, 26041.0/36000.0
        -> worse: (1.029729021578744 [based on 27 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
1149/100000000, 26076.0/36000.0
        -> worse: (1.0322712371248286 [based on 47 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0315561533988638 [based on 37 runs with cutoff 260.0])
          
============= Performing 7 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0312018612250917 [based on 194 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 26085.0, 1.0312363453838183 [195, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1152/100000000, 26089.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26089.0, 1.0318214249976025 [196, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1153/100000000, 26183.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26183.0, 1.031878430062476 [197, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 26190.0, 1.031805304854623 [198, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1155/100000000, 26204.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26204.0, 1.0318196318314756 [199, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 26209.0, 1.0316605336723184 [200, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1157/100000000, 26215.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26215.0, 1.0315808523305767 [201, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 7 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0])

   LM for iteration 23: grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 23): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 23): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0315808523305767, based on 201 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 26215.0, 1.0315808523305767 [201, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0])
1157/100000000, 26215.0/36000.0
iteration 24, flip 65, evaluation count 1157
    perturb to ---> grid=5x80 neigh=Compact9 updPol=nrs (1.0328491397311035 [based on 41 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact9 updPol=nrs (1.0334286693857904 [based on 40 runs with cutoff 260.0])
    perturb to ---> grid=5x80 neigh=Compact9 updPol=nrs (1.0328491397311035 [based on 41 runs with cutoff 260.0])
1158/100000000, 26401.0/36000.0
   BLS in iteration 24, start with grid=5x80 neigh=Compact9 updPol=nrs (1.032609636739911 [based on 42 runs with cutoff 260.0])
    Changing ["grid: 5x80->10x40"], evaluating ...
        -> worse: (1.0322777246833488 [based on 17 runs with cutoff 260.0])
    Changing ["grid: 5x80->1x400"], evaluating ...
1160/100000000, 26415.0/36000.0
        -> worse: (1.0332902450658366 [based on 41 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
1161/100000000, 26466.0/36000.0
        -> worse: (1.034427707035495 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
1162/100000000, 26525.0/36000.0
        -> worse: (1.0333586610877965 [based on 9 runs with cutoff 260.0])
    Changing ["grid: 5x80->4x100"], evaluating ...
        -> worse: (1.0326057825641015 [based on 19 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1164/100000000, 26539.0/36000.0
        -> worse: (1.028968585570597 [based on 15 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.03163041826867 [based on 15 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
1166/100000000, 26556.0/36000.0
        -> worse: (1.0344071782679205 [based on 28 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1167/100000000, 26695.0/36000.0
        -> worse: (1.0287577087987008 [based on 16 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
        -> worse: (1.0313621638316546 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 5x80->2x200"], evaluating ...
1169/100000000, 26708.0/36000.0
          -> Take improving step to neighbour grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0]) with flip 65

          
============= Performing 11 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.0315808523305767 [based on 201 runs with cutoff 260.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 26711.0, 1.0320973343707172 [202, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1171/100000000, 26881.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26881.0, 1.0320475360319392 [203, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1172/100000000, 26896.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26896.0, 1.0319447055156115 [204, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 26904.0, 1.0319418524495856 [205, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1174/100000000, 26909.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26909.0, 1.0318739665216297 [206, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1175/100000000, 26930.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26930.0, 1.031880410070135 [207, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 26938.0, 1.0317271388678748 [208, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1177/100000000, 26960.0/36000.0
 Same incumbent, new precision:
New Incumbent: 26960.0, 1.0317795512644472 [209, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1178/100000000, 27006.0/36000.0
 Same incumbent, new precision:
New Incumbent: 27006.0, 1.031769322252388 [210, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 27011.0, 1.0316187567440829 [211, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 27013.0, 1.031520503878302 [212, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 11 bonus runs: grid=2x200 neigh=Compact9 updPol=nrs (1.031520503878302 [based on 212 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Linear5"], evaluating ...
1181/100000000, 27020.0/36000.0
        -> worse: (1.031672792894053 [based on 38 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0332884115806886 [based on 26 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1183/100000000, 27032.0/36000.0
        -> worse: (1.030896251321621 [based on 17 runs with cutoff 260.0])
    Changing ["grid: 2x200->20x20"], evaluating ...
1184/100000000, 27044.0/36000.0
        -> worse: (1.0336869741613273 [based on 15 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
1185/100000000, 27057.0/36000.0
        -> worse: (1.0349936779998794 [based on 18 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
        -> worse: (1.0314646196835429 [based on 19 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
1187/100000000, 27072.0/36000.0
        -> worse: (1.030781161879782 [based on 28 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
1188/100000000, 27130.0/36000.0
        -> worse: (1.032422408134472 [based on 48 runs with cutoff 260.0])
          
============= Performing 8 bonus runs of state: grid=2x200 neigh=Compact9 updPol=nrs (1.031520503878302 [based on 212 runs with cutoff 260.0]) ============ 

1189/100000000, 27210.0/36000.0
 Same incumbent, new precision:
New Incumbent: 27210.0, 1.0315587170398468 [213, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 27214.0, 1.031722525832056 [214, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 27217.0, 1.0318838664028858 [215, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1192/100000000, 27223.0/36000.0
 Same incumbent, new precision:
New Incumbent: 27223.0, 1.0319061909651521 [216, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 27231.0, 1.0317591578270637 [217, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1194/100000000, 27265.0/36000.0
 Same incumbent, new precision:
New Incumbent: 27265.0, 1.0317922853979182 [218, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
 Same incumbent, new precision:
New Incumbent: 27272.0, 1.0318202944699677 [219, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
1196/100000000, 27281.0/36000.0
 Same incumbent, new precision:
New Incumbent: 27281.0, 1.0317547460355931 [220, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
          -> After 8 bonus runs for LM: grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])

   LM for iteration 24: grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 24): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 24): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317547460355931, based on 220 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
LM better, change incumbent
New Incumbent: 27281.0, 1.0317547460355931 [220, 260.0]. With state grid=2x200, neigh=Compact9, updPol=nrs
same state as last ILS: grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
1196/100000000, 27281.0/36000.0
iteration 25, flip 67, evaluation count 1196
    perturb to ---> grid=2x200 neigh=Compact13 updPol=nrs (1.030896251321621 [based on 17 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Compact13 updPol=nrs (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact13 updPol=nrs (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 25, start with grid=4x100 neigh=Compact13 updPol=nrs (1.0307966934427735 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 4x100->1x400"], evaluating ...
1198/100000000, 27322.0/36000.0
1199/100000000, 27368.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact13 updPol=nrs (1.0247773559375482 [based on 2 runs with cutoff 260.0]) with flip 67

          
============= Performing 2 bonus runs of state: grid=1x400 neigh=Compact13 updPol=nrs (1.0247773559375482 [based on 2 runs with cutoff 260.0]) ============ 

1200/100000000, 27400.0/36000.0
          -> After 2 bonus runs: grid=1x400 neigh=Compact13 updPol=nrs (1.0276342973253605 [based on 4 runs with cutoff 260.0])

    Changing ["updPol: nrs->synchronous"], evaluating ...
1202/100000000, 27457.0/36000.0
        -> worse: (1.0256332181826484 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->ss"], evaluating ...
1204/100000000, 27485.0/36000.0
1205/100000000, 27529.0/36000.0
1207/100000000, 27595.0/36000.0
1208/100000000, 27609.0/36000.0
1209/100000000, 27645.0/36000.0
        -> worse: (1.0257534451979826 [based on 11 runs with cutoff 260.0])
    Changing ["grid: 1x400->10x40"], evaluating ...
1210/100000000, 27670.0/36000.0
        -> worse: (1.0351023810161644 [based on 2 runs with cutoff 260.0])
    Changing ["updPol: nrs->uc"], evaluating ...
        -> worse: (1.0289869676894994 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: nrs->ls"], evaluating ...
1212/100000000, 27718.0/36000.0
        -> worse: (1.0292557573157277 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
        -> worse: (1.042075127228877 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact13->Compact9"], evaluating ...
1214/100000000, 27734.0/36000.0
1217/100000000, 27755.0/36000.0
1218/100000000, 27885.0/36000.0
1220/100000000, 27899.0/36000.0
1222/100000000, 27911.0/36000.0
1224/100000000, 27922.0/36000.0
1227/100000000, 28009.0/36000.0
1229/100000000, 28024.0/36000.0
1231/100000000, 28051.0/36000.0
1233/100000000, 28106.0/36000.0
1235/100000000, 28182.0/36000.0
1237/100000000, 28235.0/36000.0
1238/100000000, 28251.0/36000.0
1240/100000000, 28265.0/36000.0
1242/100000000, 28278.0/36000.0
        -> worse: (1.0332902450658366 [based on 41 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
1244/100000000, 28297.0/36000.0
        -> worse: (1.0311120711629322 [based on 18 runs with cutoff 260.0])
    Changing ["neigh: Compact13->Linear5"], evaluating ...
1245/100000000, 28337.0/36000.0
        -> worse: (1.0282130921257662 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: nrs->frs"], evaluating ...
1246/100000000, 28386.0/36000.0
        -> worse: (1.0262946452417099 [based on 2 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
        -> worse: (1.030972593490569 [based on 17 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=1x400 neigh=Compact13 updPol=nrs (1.0313216293542766 [based on 41 runs with cutoff 260.0]) ============ 

1248/100000000, 28498.0/36000.0
1250/100000000, 28541.0/36000.0
1253/100000000, 28594.0/36000.0
1254/100000000, 28659.0/36000.0
1256/100000000, 28674.0/36000.0
1257/100000000, 28741.0/36000.0
          -> After 11 bonus runs for LM: grid=1x400 neigh=Compact13 updPol=nrs (1.0306154141958253 [based on 52 runs with cutoff 260.0])

   LM for iteration 25: grid=1x400 neigh=Compact13 updPol=nrs (1.0306154141958253 [based on 52 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 25): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 25): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317547460355931, based on 220 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact13 updPol=nrs (1.0306154141958253 [based on 52 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Compact13 updPol=nrs (1.0306154141958253 [based on 52 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
1258/100000000, 28746.0/36000.0
iteration 26, flip 69, evaluation count 1258
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.0322777246833488 [based on 17 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Linear5 updPol=nrs (1.0351023810161644 [based on 2 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact13 updPol=nrs (1.0351023810161644 [based on 2 runs with cutoff 260.0])
1259/100000000, 28761.0/36000.0
   BLS in iteration 26, start with grid=10x40 neigh=Compact13 updPol=nrs (1.0379387750135711 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: nrs->synchronous"], evaluating ...
1261/100000000, 28785.0/36000.0
1262/100000000, 28830.0/36000.0
          -> Take improving step to neighbour grid=10x40 neigh=Compact13 updPol=synchronous (1.0212548617293853 [based on 3 runs with cutoff 260.0]) with flip 69

          
============= Performing 1 bonus runs of state: grid=10x40 neigh=Compact13 updPol=synchronous (1.0212548617293853 [based on 3 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=10x40 neigh=Compact13 updPol=synchronous (1.039301802034744 [based on 4 runs with cutoff 260.0])

    Changing ["neigh: Compact13->Linear5"], evaluating ...
1264/100000000, 28843.0/36000.0
        -> worse: (1.0124326649325113 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->5x80"], evaluating ...
        -> worse: (1.01564458398228 [based on 1 runs with cutoff 260.0])
    Changing ["updPol: synchronous->frs"], evaluating ...
1266/100000000, 28858.0/36000.0
        -> worse: (1.037587643311293 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
        -> worse: (1.0245493889598223 [based on 1 runs with cutoff 260.0])
    Changing ["grid: 10x40->2x200"], evaluating ...
1268/100000000, 28897.0/36000.0
        -> worse: (1.0382417218876177 [based on 3 runs with cutoff 260.0])
    Changing ["neigh: Compact13->Compact9"], evaluating ...
          -> Take improving step to neighbour grid=10x40 neigh=Compact9 updPol=synchronous (1.0285481149213829 [based on 7 runs with cutoff 260.0]) with flip 70

          
============= Performing 6 bonus runs of state: grid=10x40 neigh=Compact9 updPol=synchronous (1.0285481149213829 [based on 7 runs with cutoff 260.0]) ============ 

1270/100000000, 28908.0/36000.0
1271/100000000, 28976.0/36000.0
1272/100000000, 28992.0/36000.0
1273/100000000, 29007.0/36000.0
1275/100000000, 29022.0/36000.0
          -> After 6 bonus runs: grid=10x40 neigh=Compact9 updPol=synchronous (1.0290606997055707 [based on 13 runs with cutoff 260.0])

    Changing ["grid: 10x40->4x100"], evaluating ...
1278/100000000, 29172.0/36000.0
        -> worse: (1.0284142644776746 [based on 16 runs with cutoff 260.0])
    Changing ["grid: 10x40->5x80"], evaluating ...
        -> worse: (1.0301242436560583 [based on 8 runs with cutoff 260.0])
    Changing ["updPol: synchronous->nrs"], evaluating ...
        -> worse: (1.0322777246833488 [based on 17 runs with cutoff 260.0])
    Changing ["updPol: synchronous->uc"], evaluating ...
1281/100000000, 29183.0/36000.0
        -> worse: (1.0288196194461992 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
1282/100000000, 29196.0/36000.0
        -> worse: (1.0282259277025545 [based on 10 runs with cutoff 260.0])
    Changing ["updPol: synchronous->frs"], evaluating ...
          -> Take improving step to neighbour grid=10x40 neigh=Compact9 updPol=frs (1.0349433111805477 [based on 21 runs with cutoff 260.0]) with flip 71

          
============= Performing 6 bonus runs of state: grid=10x40 neigh=Compact9 updPol=frs (1.0349433111805477 [based on 21 runs with cutoff 260.0]) ============ 

1284/100000000, 29208.0/36000.0
1286/100000000, 29220.0/36000.0
1287/100000000, 29333.0/36000.0
1289/100000000, 29348.0/36000.0
          -> After 6 bonus runs: grid=10x40 neigh=Compact9 updPol=frs (1.0324822790009207 [based on 27 runs with cutoff 260.0])

    Changing ["grid: 10x40->5x80"], evaluating ...
        -> worse: (1.0317650019531939 [based on 14 runs with cutoff 260.0])
    Changing ["updPol: frs->ls"], evaluating ...
1291/100000000, 29369.0/36000.0
        -> worse: (1.0365747058197352 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
1292/100000000, 29424.0/36000.0
        -> worse: (1.0366584990708307 [based on 3 runs with cutoff 260.0])
    Changing ["grid: 10x40->1x400"], evaluating ...
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=frs (1.0330794087117994 [based on 39 runs with cutoff 260.0]) with flip 72

          
============= Performing 4 bonus runs of state: grid=1x400 neigh=Compact9 updPol=frs (1.0330794087117994 [based on 39 runs with cutoff 260.0]) ============ 

1294/100000000, 29436.0/36000.0
1295/100000000, 29447.0/36000.0
1296/100000000, 29583.0/36000.0
          -> After 4 bonus runs: grid=1x400 neigh=Compact9 updPol=frs (1.0335044427356983 [based on 43 runs with cutoff 260.0])

    Changing ["grid: 1x400->4x100"], evaluating ...
1298/100000000, 29621.0/36000.0
        -> worse: (1.0386788745733408 [based on 6 runs with cutoff 260.0])
    Changing ["updPol: frs->ss"], evaluating ...
1299/100000000, 29646.0/36000.0
        -> worse: (1.029291866017607 [based on 6 runs with cutoff 260.0])
    Changing ["updPol: frs->nrs"], evaluating ...
1300/100000000, 29766.0/36000.0
        -> worse: (1.0330496743499065 [based on 42 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
1301/100000000, 29782.0/36000.0
        -> worse: (1.0302726695012776 [based on 29 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1302/100000000, 29828.0/36000.0
        -> worse: (1.031807625010056 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: frs->uc"], evaluating ...
1303/100000000, 29860.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=uc (1.0316507117944762 [based on 59 runs with cutoff 260.0]) with flip 73

          
============= Performing 6 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0316507117944762 [based on 59 runs with cutoff 260.0]) ============ 

1304/100000000, 29874.0/36000.0
1305/100000000, 30028.0/36000.0
1307/100000000, 30071.0/36000.0
1309/100000000, 30082.0/36000.0
          -> After 6 bonus runs: grid=1x400 neigh=Compact9 updPol=uc (1.03113533780882 [based on 65 runs with cutoff 260.0])

    Changing ["grid: 1x400->5x80"], evaluating ...
1310/100000000, 30099.0/36000.0
        -> worse: (1.033488432303847 [based on 10 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1311/100000000, 30162.0/36000.0
        -> worse: (1.0276527377190607 [based on 9 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
        -> worse: (1.0388482948838256 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: uc->ls"], evaluating ...
1313/100000000, 30178.0/36000.0
1314/100000000, 30203.0/36000.0
        -> worse: (1.029291866017607 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 1x400->4x100"], evaluating ...
1315/100000000, 30214.0/36000.0
        -> worse: (1.0379382566683064 [based on 6 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1316/100000000, 30236.0/36000.0
        -> worse: (1.0281767578886976 [based on 6 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
        -> worse: (1.0326349364844514 [based on 27 runs with cutoff 260.0])
          
============= Performing 7 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.03113533780882 [based on 65 runs with cutoff 260.0]) ============ 

1318/100000000, 30268.0/36000.0
1320/100000000, 30315.0/36000.0
1321/100000000, 30368.0/36000.0
1323/100000000, 30381.0/36000.0
          -> After 7 bonus runs for LM: grid=1x400 neigh=Compact9 updPol=uc (1.0311370319058928 [based on 72 runs with cutoff 260.0])

   LM for iteration 26: grid=1x400 neigh=Compact9 updPol=uc (1.0311370319058928 [based on 72 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 26): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 26): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317547460355931, based on 220 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact9 updPol=uc (1.0311370319058928 [based on 72 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Compact9 updPol=uc (1.0311370319058928 [based on 72 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
1324/100000000, 30389.0/36000.0
iteration 27, flip 75, evaluation count 1324
    perturb to ---> grid=2x200 neigh=Compact9 updPol=frs (1.0302726695012776 [based on 29 runs with cutoff 260.0])
    perturb to ---> grid=20x20 neigh=Compact9 updPol=frs (1.0366584990708307 [based on 3 runs with cutoff 260.0])
    perturb to ---> grid=20x20 neigh=Compact9 updPol=ss (100000000 [based on 0 runs with cutoff 0])
1325/100000000, 30397.0/36000.0
   BLS in iteration 27, start with grid=20x20 neigh=Compact9 updPol=ss (1.0178111808915886 [based on 1 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1326/100000000, 30413.0/36000.0
1327/100000000, 30452.0/36000.0
1329/100000000, 30466.0/36000.0
        -> worse: (1.0345971142052377 [based on 5 runs with cutoff 260.0])
    Changing ["grid: 20x20->10x40"], evaluating ...
        -> worse: (1.0497875498190372 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: ss->synchronous"], evaluating ...
1331/100000000, 30484.0/36000.0
        -> worse: (1.0381851786901424 [based on 3 runs with cutoff 260.0])
    Changing ["updPol: ss->nrs"], evaluating ...
1332/100000000, 30517.0/36000.0
1334/100000000, 30529.0/36000.0
1335/100000000, 30601.0/36000.0
1336/100000000, 30619.0/36000.0
1337/100000000, 30631.0/36000.0
1339/100000000, 30643.0/36000.0
        -> worse: (1.0336869741613273 [based on 15 runs with cutoff 260.0])
    Changing ["grid: 20x20->1x400"], evaluating ...
1342/100000000, 30685.0/36000.0
1344/100000000, 30763.0/36000.0
1345/100000000, 30777.0/36000.0
1346/100000000, 30817.0/36000.0
1348/100000000, 30830.0/36000.0
1350/100000000, 30842.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=ss (1.0264298180483769 [based on 15 runs with cutoff 260.0]) with flip 75

          
============= Performing 5 bonus runs of state: grid=1x400 neigh=Compact9 updPol=ss (1.0264298180483769 [based on 15 runs with cutoff 260.0]) ============ 

1351/100000000, 30992.0/36000.0
1353/100000000, 31003.0/36000.0
1355/100000000, 31014.0/36000.0
          -> After 5 bonus runs: grid=1x400 neigh=Compact9 updPol=ss (1.0345268383617932 [based on 20 runs with cutoff 260.0])

    Changing ["updPol: ss->uc"], evaluating ...
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=uc (1.0311370319058928 [based on 72 runs with cutoff 260.0]) with flip 76

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0311370319058928 [based on 72 runs with cutoff 260.0]) ============ 

1357/100000000, 31030.0/36000.0
          -> After 1 bonus runs: grid=1x400 neigh=Compact9 updPol=uc (1.0307104972222503 [based on 73 runs with cutoff 260.0])

    Changing ["grid: 1x400->2x200"], evaluating ...
        -> worse: (1.0325893968593018 [based on 28 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1359/100000000, 31076.0/36000.0
        -> worse: (1.0282339566448258 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: uc->frs"], evaluating ...
        -> worse: (1.0330869205435367 [based on 45 runs with cutoff 260.0])
    Changing ["updPol: uc->ls"], evaluating ...
1361/100000000, 31114.0/36000.0
        -> worse: (1.0291458095445731 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: uc->synchronous"], evaluating ...
1362/100000000, 31146.0/36000.0
        -> worse: (1.0285512556340404 [based on 11 runs with cutoff 260.0])
    Changing ["grid: 1x400->4x100"], evaluating ...
1363/100000000, 31192.0/36000.0
        -> worse: (1.0402747972375856 [based on 7 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
        -> worse: (1.0388658921711427 [based on 6 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
1365/100000000, 31207.0/36000.0
        -> worse: (1.0336447238886202 [based on 43 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
1366/100000000, 31229.0/36000.0
        -> worse: (1.0329094642891716 [based on 11 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1367/100000000, 31244.0/36000.0
        -> worse: (1.0259944750172654 [based on 10 runs with cutoff 260.0])
    Changing ["grid: 1x400->10x40"], evaluating ...
1368/100000000, 31333.0/36000.0
        -> worse: (1.03137152330201 [based on 9 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0307104972222503 [based on 73 runs with cutoff 260.0]) ============ 

1369/100000000, 31412.0/36000.0
1370/100000000, 31433.0/36000.0
1372/100000000, 31460.0/36000.0
1374/100000000, 31473.0/36000.0
1376/100000000, 31513.0/36000.0
1377/100000000, 31564.0/36000.0
1379/100000000, 31578.0/36000.0
          -> After 11 bonus runs for LM: grid=1x400 neigh=Compact9 updPol=uc (1.0303552151414035 [based on 84 runs with cutoff 260.0])

   LM for iteration 27: grid=1x400 neigh=Compact9 updPol=uc (1.0303552151414035 [based on 84 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 27): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 27): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317547460355931, based on 220 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact9 updPol=uc (1.0303552151414035 [based on 84 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Compact9 updPol=uc (1.0303552151414035 [based on 84 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
1379/100000000, 31578.0/36000.0
iteration 28, flip 78, evaluation count 1379
    perturb to ---> grid=10x40 neigh=Compact9 updPol=nrs (1.0322777246833488 [based on 17 runs with cutoff 260.0])
    perturb to ---> grid=10x40 neigh=Compact9 updPol=uc (1.03137152330201 [based on 9 runs with cutoff 260.0])
    perturb to ---> grid=4x100 neigh=Compact9 updPol=uc (1.0402747972375856 [based on 7 runs with cutoff 260.0])
   BLS in iteration 28, start with grid=4x100 neigh=Compact9 updPol=uc (1.0352404475828876 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 4x100->1x400"], evaluating ...
1381/100000000, 31647.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=uc (1.0303552151414035 [based on 84 runs with cutoff 260.0]) with flip 78

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0303552151414035 [based on 84 runs with cutoff 260.0]) ============ 

1382/100000000, 31662.0/36000.0
          -> After 1 bonus runs: grid=1x400 neigh=Compact9 updPol=uc (1.0301723869022672 [based on 85 runs with cutoff 260.0])

    Changing ["grid: 1x400->2x200"], evaluating ...
1383/100000000, 31691.0/36000.0
        -> worse: (1.032517326862409 [based on 29 runs with cutoff 260.0])
    Changing ["updPol: uc->synchronous"], evaluating ...
        -> worse: (1.0292143878299678 [based on 12 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
        -> worse: (1.0247047120642225 [based on 8 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1386/100000000, 31741.0/36000.0
        -> worse: (1.0266185535584251 [based on 11 runs with cutoff 260.0])
    Changing ["updPol: uc->ls"], evaluating ...
        -> worse: (1.0255025833515015 [based on 8 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
1388/100000000, 31785.0/36000.0
        -> worse: (1.033522559043569 [based on 44 runs with cutoff 260.0])
    Changing ["updPol: uc->frs"], evaluating ...
        -> worse: (1.0332419125025334 [based on 46 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
1390/100000000, 31796.0/36000.0
        -> worse: (1.0325088924976906 [based on 12 runs with cutoff 260.0])
    Changing ["updPol: uc->ss"], evaluating ...
        -> worse: (1.0323861316933263 [based on 22 runs with cutoff 260.0])
    Changing ["grid: 1x400->10x40"], evaluating ...
1392/100000000, 31819.0/36000.0
        -> worse: (1.0317000082966392 [based on 10 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
1393/100000000, 31874.0/36000.0
        -> worse: (1.037352117676175 [based on 7 runs with cutoff 260.0])
          
============= Performing 11 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0301723869022672 [based on 85 runs with cutoff 260.0]) ============ 

1394/100000000, 31954.0/36000.0
1395/100000000, 32061.0/36000.0
1396/100000000, 32102.0/36000.0
1398/100000000, 32116.0/36000.0
1399/100000000, 32138.0/36000.0
1401/100000000, 32149.0/36000.0
1403/100000000, 32164.0/36000.0
          -> After 11 bonus runs for LM: grid=1x400 neigh=Compact9 updPol=uc (1.0297423403908736 [based on 96 runs with cutoff 260.0])

   LM for iteration 28: grid=1x400 neigh=Compact9 updPol=uc (1.0297423403908736 [based on 96 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 28): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 28): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317547460355931, based on 220 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact9 updPol=uc (1.0297423403908736 [based on 96 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
Incumbent better, keeping it
rejecting worse grid=1x400 neigh=Compact9 updPol=uc (1.0297423403908736 [based on 96 runs with cutoff 260.0]), going back to grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
1404/100000000, 32174.0/36000.0
iteration 29, flip 80, evaluation count 1404
    perturb to ---> grid=2x200 neigh=Linear5 updPol=nrs (1.031672792894053 [based on 38 runs with cutoff 260.0])
    perturb to ---> grid=2x200 neigh=Linear5 updPol=synchronous (1.029878815531326 [based on 10 runs with cutoff 260.0])
    perturb to ---> grid=1x400 neigh=Linear5 updPol=synchronous (1.0216144939877068 [based on 1 runs with cutoff 260.0])
1405/100000000, 32213.0/36000.0
   BLS in iteration 29, start with grid=1x400 neigh=Linear5 updPol=synchronous (1.031841729752474 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Linear5->Compact13"], evaluating ...
1406/100000000, 32257.0/36000.0
1407/100000000, 32289.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact13 updPol=synchronous (1.024046008024977 [based on 3 runs with cutoff 260.0]) with flip 80

          
============= Performing 2 bonus runs of state: grid=1x400 neigh=Compact13 updPol=synchronous (1.024046008024977 [based on 3 runs with cutoff 260.0]) ============ 

1409/100000000, 32302.0/36000.0
          -> After 2 bonus runs: grid=1x400 neigh=Compact13 updPol=synchronous (1.026847986980591 [based on 5 runs with cutoff 260.0])

    Changing ["neigh: Compact13->Compact9"], evaluating ...
1410/100000000, 32322.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=synchronous (1.0292143878299678 [based on 12 runs with cutoff 260.0]) with flip 81

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact9 updPol=synchronous (1.0292143878299678 [based on 12 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=1x400 neigh=Compact9 updPol=synchronous (1.0306120671933572 [based on 13 runs with cutoff 260.0])

    Changing ["grid: 1x400->4x100"], evaluating ...
1413/100000000, 32341.0/36000.0
1414/100000000, 32464.0/36000.0
          -> Take improving step to neighbour grid=4x100 neigh=Compact9 updPol=synchronous (1.0284142644776746 [based on 16 runs with cutoff 260.0]) with flip 82

          
============= Performing 1 bonus runs of state: grid=4x100 neigh=Compact9 updPol=synchronous (1.0284142644776746 [based on 16 runs with cutoff 260.0]) ============ 

          -> After 1 bonus runs: grid=4x100 neigh=Compact9 updPol=synchronous (1.030649351776662 [based on 17 runs with cutoff 260.0])

    Changing ["updPol: synchronous->frs"], evaluating ...
1416/100000000, 32503.0/36000.0
        -> worse: (1.0356651799988277 [based on 7 runs with cutoff 260.0])
    Changing ["updPol: synchronous->ss"], evaluating ...
        -> worse: (1.0352923445122346 [based on 5 runs with cutoff 260.0])
    Changing ["updPol: synchronous->nrs"], evaluating ...
1418/100000000, 32517.0/36000.0
        -> worse: (1.0326057825641015 [based on 19 runs with cutoff 260.0])
    Changing ["updPol: synchronous->uc"], evaluating ...
1420/100000000, 32542.0/36000.0
        -> worse: (1.0354652545418557 [based on 10 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
1421/100000000, 32578.0/36000.0
        -> worse: (1.0342555128748137 [based on 2 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1422/100000000, 32592.0/36000.0
        -> worse: (1.044294552522195 [based on 4 runs with cutoff 260.0])
    Changing ["grid: 4x100->10x40"], evaluating ...
1424/100000000, 32604.0/36000.0
          -> Take improving step to neighbour grid=10x40 neigh=Compact9 updPol=synchronous (1.0309430437780047 [based on 19 runs with cutoff 260.0]) with flip 83

          
============= Performing 7 bonus runs of state: grid=10x40 neigh=Compact9 updPol=synchronous (1.0309430437780047 [based on 19 runs with cutoff 260.0]) ============ 

1426/100000000, 32615.0/36000.0
1429/100000000, 32630.0/36000.0
1430/100000000, 32717.0/36000.0
          -> After 7 bonus runs: grid=10x40 neigh=Compact9 updPol=synchronous (1.033561716150062 [based on 26 runs with cutoff 260.0])

    Changing ["updPol: synchronous->nrs"], evaluating ...
1432/100000000, 32732.0/36000.0
        -> worse: (1.0328968391519313 [based on 18 runs with cutoff 260.0])
    Changing ["grid: 10x40->20x20"], evaluating ...
        -> worse: (1.0505877831749866 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: synchronous->frs"], evaluating ...
          -> Take improving step to neighbour grid=10x40 neigh=Compact9 updPol=frs (1.0327509637577128 [based on 28 runs with cutoff 260.0]) with flip 84

          
============= Performing 3 bonus runs of state: grid=10x40 neigh=Compact9 updPol=frs (1.0327509637577128 [based on 28 runs with cutoff 260.0]) ============ 

1435/100000000, 32766.0/36000.0
1437/100000000, 32803.0/36000.0
          -> After 3 bonus runs: grid=10x40 neigh=Compact9 updPol=frs (1.0352594273378415 [based on 31 runs with cutoff 260.0])

    Changing ["grid: 10x40->1x400"], evaluating ...
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=frs (1.0332419125025334 [based on 46 runs with cutoff 260.0]) with flip 85

          
============= Performing 1 bonus runs of state: grid=1x400 neigh=Compact9 updPol=frs (1.0332419125025334 [based on 46 runs with cutoff 260.0]) ============ 

1439/100000000, 32839.0/36000.0
          -> After 1 bonus runs: grid=1x400 neigh=Compact9 updPol=frs (1.0330822945461524 [based on 47 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Compact13"], evaluating ...
1440/100000000, 32871.0/36000.0
        -> worse: (1.0244869593976846 [based on 3 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0385149198861905 [based on 4 runs with cutoff 260.0])
    Changing ["updPol: frs->uc"], evaluating ...
1442/100000000, 32949.0/36000.0
          -> Take improving step to neighbour grid=1x400 neigh=Compact9 updPol=uc (1.0297423403908736 [based on 96 runs with cutoff 260.0]) with flip 86

          
============= Performing 3 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.0297423403908736 [based on 96 runs with cutoff 260.0]) ============ 

1445/100000000, 33007.0/36000.0
          -> After 3 bonus runs: grid=1x400 neigh=Compact9 updPol=uc (1.030044045806021 [based on 99 runs with cutoff 260.0])

    Changing ["neigh: Compact9->Linear5"], evaluating ...
        -> worse: (1.0267422243278397 [based on 12 runs with cutoff 260.0])
    Changing ["updPol: uc->ss"], evaluating ...
        -> worse: (1.0327265846917637 [based on 23 runs with cutoff 260.0])
    Changing ["grid: 1x400->5x80"], evaluating ...
1448/100000000, 33023.0/36000.0
        -> worse: (1.0335927332008676 [based on 13 runs with cutoff 260.0])
    Changing ["grid: 1x400->2x200"], evaluating ...
        -> worse: (1.0336471075856772 [based on 30 runs with cutoff 260.0])
    Changing ["grid: 1x400->20x20"], evaluating ...
        -> worse: (1.0326831029666532 [based on 8 runs with cutoff 260.0])
    Changing ["grid: 1x400->10x40"], evaluating ...
1451/100000000, 33045.0/36000.0
        -> worse: (1.0317095107195717 [based on 11 runs with cutoff 260.0])
    Changing ["neigh: Compact9->Compact13"], evaluating ...
1452/100000000, 33118.0/36000.0
1453/100000000, 33131.0/36000.0
        -> worse: (1.0264304084068232 [based on 10 runs with cutoff 260.0])
    Changing ["updPol: uc->nrs"], evaluating ...
        -> worse: (1.0331766655379493 [based on 45 runs with cutoff 260.0])
    Changing ["updPol: uc->ls"], evaluating ...
1455/100000000, 33210.0/36000.0
        -> worse: (1.0267920718207117 [based on 9 runs with cutoff 260.0])
          
============= Performing 9 bonus runs of state: grid=1x400 neigh=Compact9 updPol=uc (1.030044045806021 [based on 99 runs with cutoff 260.0]) ============ 

1457/100000000, 33221.0/36000.0
1459/100000000, 33296.0/36000.0
1462/100000000, 33308.0/36000.0
1464/100000000, 33320.0/36000.0
          -> After 9 bonus runs for LM: grid=1x400 neigh=Compact9 updPol=uc (1.0302015495317007 [based on 108 runs with cutoff 260.0])

   LM for iteration 29: grid=1x400 neigh=Compact9 updPol=uc (1.0302015495317007 [based on 108 runs with cutoff 260.0])

========== DETAILED RESULTS (iteration 29): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 29): grid=2x200, neigh=Compact9, updPol=nrs
==================================================================
Training quality of this incumbent parameter configuration: 1.0317547460355931, based on 220 runs with cutoff 260.0
==================================================================

Comparing LM against incumbent:
grid=1x400 neigh=Compact9 updPol=uc (1.0302015495317007 [based on 108 runs with cutoff 260.0])
grid=2x200 neigh=Compact9 updPol=nrs (1.0317547460355931 [based on 220 runs with cutoff 260.0])
1466/100000000, 33350.0/36000.0
1467/100000000, 33393.0/36000.0
1468/100000000, 33407.0/36000.0
1469/100000000, 33427.0/36000.0
1470/100000000, 33567.0/36000.0
1472/100000000, 33582.0/36000.0
1473/100000000, 33624.0/36000.0
1476/100000000, 33641.0/36000.0
1478/100000000, 33690.0/36000.0
1480/100000000, 33769.0/36000.0
1482/100000000, 33810.0/36000.0
1484/100000000, 33827.0/36000.0
1487/100000000, 33874.0/36000.0
1489/100000000, 34031.0/36000.0
1491/100000000, 34062.0/36000.0
1493/100000000, 34075.0/36000.0
1494/100000000, 34101.0/36000.0
1496/100000000, 34198.0/36000.0
1498/100000000, 34216.0/36000.0
1500/100000000, 34231.0/36000.0
1501/100000000, 34298.0/36000.0
1502/100000000, 34310.0/36000.0
1503/100000000, 34362.0/36000.0
1505/100000000, 34373.0/36000.0
1507/100000000, 34413.0/36000.0
1509/100000000, 34428.0/36000.0
1511/100000000, 34444.0/36000.0
1513/100000000, 34456.0/36000.0
1514/100000000, 34493.0/36000.0
1515/100000000, 34515.0/36000.0
1517/100000000, 34573.0/36000.0
1519/100000000, 34726.0/36000.0
1521/100000000, 34797.0/36000.0
1524/100000000, 34813.0/36000.0
1525/100000000, 34824.0/36000.0
1526/100000000, 34853.0/36000.0
1528/100000000, 34868.0/36000.0
1529/100000000, 34882.0/36000.0
1530/100000000, 34952.0/36000.0
1532/100000000, 35000.0/36000.0
1534/100000000, 35029.0/36000.0
1536/100000000, 35079.0/36000.0
1538/100000000, 35095.0/36000.0
1540/100000000, 35111.0/36000.0
1543/100000000, 35128.0/36000.0
1545/100000000, 35290.0/36000.0
1547/100000000, 35379.0/36000.0
1548/100000000, 35399.0/36000.0
1550/100000000, 35440.0/36000.0
1553/100000000, 35529.0/36000.0
1555/100000000, 35552.0/36000.0
1557/100000000, 35564.0/36000.0
1559/100000000, 35730.0/36000.0
1560/100000000, 35745.0/36000.0
1562/100000000, 35759.0/36000.0
1563/100000000, 35781.0/36000.0
1565/100000000, 35832.0/36000.0
1566/100000000, 35875.0/36000.0
1569/100000000, 35944.0/36000.0
1572/100000000, 35956.0/36000.0
1574/100000000, 36054.0/36000.0
1576/100000000, 36073.0/36000.0
New inc: 1.0309150492481174
New Incumbent: 36073.0, 1.0309150492481174 [220, 260.0]. With state grid=1x400, neigh=Compact9, updPol=uc
LM better, change incumbent
New Incumbent: 36073.0, 1.0309150492481174 [220, 260.0]. With state grid=1x400, neigh=Compact9, updPol=uc
   Accepting new better local optimum: grid=1x400 neigh=Compact9 updPol=uc (1.0309150492481174 [based on 220 runs with cutoff 260.0])
Final solution for depth 1 with limit N=2000, and cutoff time=260.0.
New Incumbent: 36073.0, 1.0309150492481174 [220, 260.0]. With state grid=1x400, neigh=Compact9, updPol=uc

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: grid=1x400, neigh=Compact9, updPol=uc
==================================================================
Active parameters: grid=1x400, neigh=Compact9, updPol=uc

==================================================================
Training quality of this final best found parameter configuration: 1.0309150492481174, based on 220 runs with cutoff 260.0
==================================================================


==================================================================
Computing validation result on independent data -- 100 runs with cutoff time 260.0...
==================================================================
C:/JCell/temp/instanciasCSP/CU2.txt: 1.0126876964264928
C:/JCell/temp/instanciasCSP/OF1.txt: 1.0289473684210526
C:/JCell/temp/instanciasCSP/Hchl3s.txt: 1.0458943402688585
C:/JCell/temp/instanciasCSP/ATP38.txt: 1.0372940947709695
C:/JCell/temp/instanciasCSP/CU8.txt: 1.0184045903213508
C:/JCell/temp/instanciasCSP/CHL1s.txt: 1.0217628705148205
C:/JCell/temp/instanciasCSP/ATP34.txt: 1.0271540796489353
C:/JCell/temp/instanciasCSP/Hchl7s.txt: 1.0300468410830572
C:/JCell/temp/instanciasCSP/Hchl5s.txt: 1.0410123564338278
C:/JCell/temp/instanciasCSP/A2s.txt: 1.0354422964264791
C:/JCell/temp/instanciasCSP/STS2s.txt: 1.0060540540540541
C:/JCell/temp/instanciasCSP/CHL7.txt: 1.0346285854376072
C:/JCell/temp/instanciasCSP/ATP32.txt: 1.029365637337083
C:/JCell/temp/instanciasCSP/A4.txt: 1.0391860073999328
C:/JCell/temp/instanciasCSP/W.txt: 1.0
C:/JCell/temp/instanciasCSP/CHL5.txt: 1.0077519379844961
C:/JCell/temp/instanciasCSP/CHL3s.txt: 1.0
C:/JCell/temp/instanciasCSP/ATP30.txt: 1.0230970861802313
C:/JCell/temp/instanciasCSP/CU6.txt: 1.0470876446933128
C:/JCell/temp/instanciasCSP/ATP36.txt: 1.0364251797477586
C:/JCell/temp/instanciasCSP/CU10.txt: 1.0330361922867934
C:/JCell/temp/instanciasCSP/wang2.DAT: 1.0
C:/JCell/temp/instanciasCSP/CU4.txt: 1.0175521238684309
C:/JCell/temp/instanciasCSP/3s.txt: 1.0
C:/JCell/temp/instanciasCSP/CU6.txt: 1.0075740246537044
C:/JCell/temp/instanciasCSP/STS2s.txt: 1.0060540540540541
C:/JCell/temp/instanciasCSP/CU10.txt: 1.0307147595489095
C:/JCell/temp/instanciasCSP/ATP34.txt: 1.0338536004851757
C:/JCell/temp/instanciasCSP/ATP38.txt: 1.0306317175683881
C:/JCell/temp/instanciasCSP/CHL5.txt: 1.0077519379844961
C:/JCell/temp/instanciasCSP/A2s.txt: 1.0354422964264791
C:/JCell/temp/instanciasCSP/A4.txt: 1.0391860073999328
C:/JCell/temp/instanciasCSP/3s.txt: 1.0
C:/JCell/temp/instanciasCSP/Hchl5s.txt: 1.0529366754005611
C:/JCell/temp/instanciasCSP/ATP36.txt: 1.032276402223345
C:/JCell/temp/instanciasCSP/CU8.txt: 1.0283958304615868
C:/JCell/temp/instanciasCSP/ATP30.txt: 1.0303464615294617
C:/JCell/temp/instanciasCSP/ATP32.txt: 1.0356948525410816
C:/JCell/temp/instanciasCSP/CHL7.txt: 1.0422943936774511
C:/JCell/temp/instanciasCSP/W.txt: 1.0
C:/JCell/temp/instanciasCSP/Hchl7s.txt: 1.0494878275907942
C:/JCell/temp/instanciasCSP/CU2.txt: 1.0589094449853944
C:/JCell/temp/instanciasCSP/Hchl3s.txt: 1.0414357575240856
C:/JCell/temp/instanciasCSP/CHL1s.txt: 1.0243196746950265
C:/JCell/temp/instanciasCSP/wang2.DAT: 1.0
C:/JCell/temp/instanciasCSP/OF1.txt: 1.0289473684210526
C:/JCell/temp/instanciasCSP/CHL3s.txt: 1.0
C:/JCell/temp/instanciasCSP/CU4.txt: 1.029443454477643
C:/JCell/temp/instanciasCSP/wang2.DAT: 1.0
C:/JCell/temp/instanciasCSP/ATP36.txt: 1.0294154698916604
C:/JCell/temp/instanciasCSP/CHL7.txt: 1.0356441717791411
C:/JCell/temp/instanciasCSP/CU8.txt: 1.0283958304615868
C:/JCell/temp/instanciasCSP/CHL1s.txt: 1.0178724065583962
C:/JCell/temp/instanciasCSP/CHL3s.txt: 1.0
C:/JCell/temp/instanciasCSP/ATP32.txt: 1.0283368000216104
C:/JCell/temp/instanciasCSP/3s.txt: 1.0
C:/JCell/temp/instanciasCSP/W.txt: 1.0
C:/JCell/temp/instanciasCSP/ATP30.txt: 1.03628741634184
C:/JCell/temp/instanciasCSP/Hchl3s.txt: 1.0255226261439006
C:/JCell/temp/instanciasCSP/Hchl5s.txt: 1.0396776335371019
C:/JCell/temp/instanciasCSP/ATP38.txt: 1.0424276986393146
C:/JCell/temp/instanciasCSP/CU4.txt: 1.023674125355421
C:/JCell/temp/instanciasCSP/A2s.txt: 1.0354422964264791
C:/JCell/temp/instanciasCSP/STS2s.txt: 1.0060540540540541
C:/JCell/temp/instanciasCSP/ATP34.txt: 1.0252832736619326
C:/JCell/temp/instanciasCSP/A4.txt: 1.0391860073999328
C:/JCell/temp/instanciasCSP/CU6.txt: 1.045872164730868
C:/JCell/temp/instanciasCSP/OF1.txt: 1.0289473684210526
C:/JCell/temp/instanciasCSP/CHL5.txt: 1.0077519379844961
C:/JCell/temp/instanciasCSP/CU10.txt: 1.032223121940938
C:/JCell/temp/instanciasCSP/Hchl7s.txt: 1.0351659887153917
C:/JCell/temp/instanciasCSP/CU2.txt: 1.0554836622452282
C:/JCell/temp/instanciasCSP/ATP38.txt: 1.0272336077653115
C:/JCell/temp/instanciasCSP/ATP32.txt: 1.0298668975219132
C:/JCell/temp/instanciasCSP/A2s.txt: 1.0354422964264791
C:/JCell/temp/instanciasCSP/3s.txt: 1.0
C:/JCell/temp/instanciasCSP/ATP36.txt: 1.0409305510218705
C:/JCell/temp/instanciasCSP/CU2.txt: 1.0431654676258992
C:/JCell/temp/instanciasCSP/Hchl7s.txt: 1.049034274126525
C:/JCell/temp/instanciasCSP/ATP30.txt: 1.0301807334620108
C:/JCell/temp/instanciasCSP/W.txt: 1.0
C:/JCell/temp/instanciasCSP/Hchl3s.txt: 1.0051016209989303
C:/JCell/temp/instanciasCSP/CHL5.txt: 1.0077519379844961
C:/JCell/temp/instanciasCSP/OF1.txt: 1.0289473684210526
C:/JCell/temp/instanciasCSP/CHL3s.txt: 1.0
C:/JCell/temp/instanciasCSP/ATP34.txt: 1.033283107986402
C:/JCell/temp/instanciasCSP/CHL7.txt: 1.0190148496921405
C:/JCell/temp/instanciasCSP/CU6.txt: 1.0470876446933128
C:/JCell/temp/instanciasCSP/CU10.txt: 1.0341420907586745
C:/JCell/temp/instanciasCSP/STS2s.txt: 1.0060540540540541
C:/JCell/temp/instanciasCSP/Hchl5s.txt: 1.0457109959700632
C:/JCell/temp/instanciasCSP/CU8.txt: 1.0283958304615868
C:/JCell/temp/instanciasCSP/CU4.txt: 1.0103304524656838
C:/JCell/temp/instanciasCSP/CHL1s.txt: 1.025281778334377
C:/JCell/temp/instanciasCSP/wang2.DAT: 1.0
C:/JCell/temp/instanciasCSP/A4.txt: 1.0391860073999328
C:/JCell/temp/instanciasCSP/STS2s.txt: 1.0060540540540541
C:/JCell/temp/instanciasCSP/CHL3s.txt: 1.0
C:/JCell/temp/instanciasCSP/CHL5.txt: 1.0077519379844961
C:/JCell/temp/instanciasCSP/CU4.txt: 1.0305752038001204
Combined result: 1.024677143422739

================================================================
Final best parameter configuration: grid=1x400, neigh=Compact9, updPol=uc
==================================================================
Active parameters: grid=1x400, neigh=Compact9, updPol=uc

================================================================
Training quality of this final best found parameter configuration: 1.0309150492481174, based on 220 runs with cutoff 260.0
Test quality of this final best found parameter configuration: 1.024677143422739, based on 100 independent runs with cutoff 260.0
==================================================================
